{"version":3,"sources":["../ts/visualsCommon/DOMConstants.ts","../ts/visualsCommon/serviceError.ts","VisualsCommon.js","../ts/visualsCommon/services/build.ts","../ts/visualsCommon/services/geoTaggingAnalyzerService.ts","../ts/visualsCommon/typedefs/buildConstants.ts","../ts/visualsCommon/clientError.ts","../ts/visualsCommon/arrayExtensions.ts","../ts/visualsCommon/Controls/DomFactory.ts","../ts/visualsCommon/Double.ts","../ts/visualsCommon/color.ts","../ts/visualsCommon/CssConstants.ts","../ts/visualsCommon/debug.ts","../ts/visualsCommon/Errors.ts","../ts/visualsCommon/JQueryExtensions.ts","../ts/visualsCommon/Lazy.ts","../ts/visualsCommon/Prototype.ts","../ts/visualsCommon/Formatting.ts","../ts/visualsCommon/services/requires.ts","../ts/visualsCommon/services/jqueryPromiseFactory.ts","../ts/visualsCommon/services/localStorageService.ts","../ts/visualsCommon/Utility/wordBreaker.ts","../ts/visualsCommon/services/textMeasurementService.ts","../ts/visualsCommon/Utility/ThrottleUtility.ts","../ts/visualsCommon/Utility/TimerPromiseFactory.ts","../ts/visualsCommon/Utility/Utility.ts","../ts/visualsCommon/tracing/traceItem.ts","../ts/visualsCommon/Utility/urlUtils.ts","../ts/visualsCommon/Utility/StandaloneUtility.ts","../ts/visualsCommon/tracing/trace.ts","../ts/visualsCommon/tracing/traceType.ts","../ts/visualsCommon/services/dependencies.ts","../ts/visualsCommon/TraceType.ts"],"names":["jsCommon","jsCommon.DOMConstants","powerbi","powerbi.PowerBIErrorResourceType","powerbi.ServiceErrorToClientError","powerbi.ServiceErrorToClientError.constructor","get","powerbi.ServiceErrorToClientError.code","enumerable","configurable","powerbi.ServiceErrorToClientError.ignorable","powerbi.ServiceErrorToClientError.requestId","set","powerbi.ServiceErrorToClientError.getDetails","powerbi.PowerBIErrorDetailHelper","powerbi.PowerBIErrorDetailHelper.addAdditionalInfo","powerbi.PowerBIErrorDetailHelper.addMessageAndStackTrace","powerbi.PowerBIErrorDetailHelper.GetDetailsFromTransformError","powerbi.PowerBIErrorDetailHelper.GetDetailsFromServerErrorStatusCode","powerbi.createGeoTaggingAnalyzerService","powerbi.GeoTaggingAnalyzerService","powerbi.GeoTaggingAnalyzerService.constructor","powerbi.GeoTaggingAnalyzerService.isLongitudeOrLatitude","powerbi.GeoTaggingAnalyzerService.isGeographic","powerbi.GeoTaggingAnalyzerService.isGeocodable","powerbi.GeoTaggingAnalyzerService.isGeoshapable","powerbi.GeoTaggingAnalyzerService.isGeoshapableEnglish","powerbi.GeoTaggingAnalyzerService.isAddress","powerbi.GeoTaggingAnalyzerService.isPlace","powerbi.GeoTaggingAnalyzerService.isCity","powerbi.GeoTaggingAnalyzerService.isStateOrProvince","powerbi.GeoTaggingAnalyzerService.isCountry","powerbi.GeoTaggingAnalyzerService.isCounty","powerbi.GeoTaggingAnalyzerService.isContinent","powerbi.GeoTaggingAnalyzerService.isPostalCode","powerbi.GeoTaggingAnalyzerService.isLongitude","powerbi.GeoTaggingAnalyzerService.isLatitude","powerbi.GeoTaggingAnalyzerService.isTerritory","powerbi.GeoTaggingAnalyzerService.hasMatches","powerbi.GeoTaggingAnalyzerService.getFieldType","powerbi.GeoTaggingAnalyzerService.isEnglishAddress","powerbi.GeoTaggingAnalyzerService.isEnglishPlace","powerbi.GeoTaggingAnalyzerService.isEnglishCity","powerbi.GeoTaggingAnalyzerService.isEnglishStateOrProvince","powerbi.GeoTaggingAnalyzerService.isEnglishCountry","powerbi.GeoTaggingAnalyzerService.isEnglishCounty","powerbi.GeoTaggingAnalyzerService.isEnglishContinent","powerbi.GeoTaggingAnalyzerService.isEnglishPostalCode","powerbi.GeoTaggingAnalyzerService.isEnglishLongitude","powerbi.GeoTaggingAnalyzerService.isEnglishLatitude","powerbi.GeoTaggingAnalyzerService.isEnglishTerritory","powerbi.GeoTaggingAnalyzerService.getEnglishFieldType","DEBUG","powerbi.UnknownClientError","powerbi.UnknownClientError.code","powerbi.UnknownClientError.ignorable","powerbi.UnknownClientError.getDetails","powerbi.HttpClientError","powerbi.HttpClientError.constructor","powerbi.HttpClientError.code","powerbi.HttpClientError.ignorable","powerbi.HttpClientError.requestId","powerbi.HttpClientError.getDetails","powerbi.IgnorableClientError","powerbi.IgnorableClientError.code","powerbi.IgnorableClientError.ignorable","powerbi.IgnorableClientError.getDetails","jsCommon.ArrayExtensions","jsCommon.ArrayExtensions.intersect","jsCommon.ArrayExtensions.diff","jsCommon.ArrayExtensions.distinct","jsCommon.ArrayExtensions.union","jsCommon.ArrayExtensions.unionSingle","jsCommon.ArrayExtensions.range","jsCommon.ArrayExtensions.take","jsCommon.ArrayExtensions.copy","jsCommon.ArrayExtensions.sequenceEqual","jsCommon.ArrayExtensions.emptyToNull","jsCommon.ArrayExtensions.indexOf","jsCommon.ArrayExtensions.rotate","jsCommon.ArrayExtensions.createWithId","jsCommon.ArrayExtensions.extendWithId","jsCommon.ArrayExtensions.findWithId","jsCommon.ArrayExtensions.withId","jsCommon.ArrayExtensions.createWithName","jsCommon.ArrayExtensions.extendWithName","jsCommon.ArrayExtensions.findItemWithName","jsCommon.ArrayExtensions.indexWithName","jsCommon.ArrayExtensions.withName","jsCommon.ArrayExtensions.clear","jsCommon.ArrayExtensions.isUndefinedOrEmpty","jsCommon.ArrayExtensions.swap","jsCommon.ArrayExtensions.isInArray","InJs","InJs.DomFactory","InJs.DomFactory.div","InJs.DomFactory.span","InJs.DomFactory.checkbox","InJs.DomFactory.ul","InJs.DomFactory.li","InJs.DomFactory.button","InJs.DomFactory.select","InJs.DomFactory.textBox","InJs.DomFactory.img","InJs.DomFactory.iframe","powerbi.applyDefault","powerbi.Double","powerbi.Double.pow10","powerbi.Double.log10","powerbi.Double.getPrecision","powerbi.Double.equalWithPrecision","powerbi.Double.lessWithPrecision","powerbi.Double.lessOrEqualWithPrecision","powerbi.Double.greaterWithPrecision","powerbi.Double.greaterOrEqualWithPrecision","powerbi.Double.floorWithPrecision","powerbi.Double.ceilWithPrecision","powerbi.Double.floorToPrecision","powerbi.Double.ceilToPrecision","powerbi.Double.roundToPrecision","powerbi.Double.ensureInRange","powerbi.Double.round","powerbi.Double.project","powerbi.Double.removeDecimalNoise","powerbi.Double.isInteger","powerbi.Double.toIncrement","jsCommon.Color","jsCommon.Color.rotate","jsCommon.Color.normalizeToHexString","jsCommon.Color.parseColorString","jsCommon.Color.rgbToHsv","jsCommon.Color.hsvToRgb","jsCommon.Color.rotateHsv","jsCommon.Color.darken","jsCommon.Color.rgbString","jsCommon.Color.hexString","jsCommon.Color.componentToHex","jsCommon.CssConstants","jsCommon.CssConstants.createClassAndSelector","debug","debug.assert","debug.assertValue","debug.assertNonEmpty","debug.assertFail","jsCommon.getStackTrace","jsCommon.Errors","jsCommon.Errors.infoNavAppAlreadyPresent","jsCommon.Errors.invalidOperation","jsCommon.Errors.argument","jsCommon.Errors.argumentNull","jsCommon.Errors.argumentUndefined","jsCommon.Errors.argumentOutOfRange","jsCommon.Errors.pureVirtualMethodException","jsCommon.Errors.notImplementedException","jsCommon.Errors.getExceptionStackTrace","$","fn","multiline","text","this","html","replace","togglePanelControl","each","addClass","find","hover","toggleClass","prepend","click","end","next","slideToggle","hide","jsCommon.JQueryConstants","jsCommon.Lazy","jsCommon.Lazy.constructor","jsCommon.Lazy.getValue","powerbi.Prototype","powerbi.Prototype.inherit","powerbi.Prototype.inheritSingle","powerbi.Prototype.overrideArray","jsCommon.Formatting","jsCommon.Formatting.findDateFormat","jsCommon.Formatting.fixDateTimeFormat","jsCommon.requires","jsCommon.loadStyleSheets","jsCommon.loadJavaScriptFiles","jsCommon.loadJavaScriptFiles.parseIfLoadingComplete","jsCommon.loadJavaScriptFiles.makeCallbackIfParsingComplete","jsCommon.loadStyleSheet","jsCommon.loadJavaScriptSourceCode","onload","responseText","jsCommon.parseJavaScript","jsCommon.parseInternalJavaScriptCode","jsCommon.loadExternalJavaScriptFile","jsCommon.parseJavaScriptSourceCodes","jsCommon.webGet","jsCommon.isExternalUrl","jsCommon._","jsCommon.asyncSteps","steps","j","args","_","jsCommon.asyncLoop","i","func","powerbi.createJQueryPromiseFactory","powerbi.JQueryPromiseFactory","powerbi.JQueryPromiseFactory.defer","powerbi.JQueryPromiseFactory.reject","powerbi.JQueryPromiseFactory.resolve","powerbi.JQueryPromiseFactory.all","powerbi.JQueryPromiseFactory.when","powerbi.JQueryDeferredWrapper","powerbi.JQueryDeferredWrapper.constructor","powerbi.JQueryDeferredWrapper.resolve","powerbi.JQueryDeferredWrapper.reject","powerbi.JQueryPromiseWrapper","powerbi.JQueryPromiseWrapper.constructor","powerbi.JQueryPromiseWrapper.then","powerbi.JQueryPromiseWrapper.catch","powerbi.JQueryPromiseWrapper.finally","powerbi.JQueryPromiseWrapper.wrapCallback","powerbi.LocalStorageService","powerbi.LocalStorageService.getData","powerbi.LocalStorageService.setData","powerbi.EphemeralStorageService","powerbi.EphemeralStorageService.constructor","powerbi.EphemeralStorageService.getData","powerbi.EphemeralStorageService.setData","powerbi.EphemeralStorageService.clearCache","jsCommon.WordBreaker","jsCommon.WordBreaker.search","jsCommon.WordBreaker.find","jsCommon.WordBreaker.hasBreakers","jsCommon.WordBreaker.wordCount","jsCommon.WordBreaker.getMaxWordWidth","jsCommon.WordBreaker.split","jsCommon.WordBreaker.getWidth","jsCommon.WordBreaker.truncate","jsCommon.WordBreaker.splitByWidth","powerbi.TextMeasurementService","powerbi.TextMeasurementService.ensureDOM","powerbi.TextMeasurementService.removeSpanElement","powerbi.TextMeasurementService.measureSvgTextWidth","powerbi.TextMeasurementService.measureSvgTextRect","powerbi.TextMeasurementService.measureSvgTextHeight","powerbi.TextMeasurementService.estimateSvgTextRect","powerbi.TextMeasurementService.estimateSvgTextBaselineDelta","powerbi.TextMeasurementService.estimateSvgTextHeight","powerbi.TextMeasurementService.measureSvgTextElementWidth","powerbi.TextMeasurementService.getMeasurementProperties","powerbi.TextMeasurementService.getSvgMeasurementProperties","powerbi.TextMeasurementService.getDivElementWidth","powerbi.TextMeasurementService.getTailoredTextOrDefault","powerbi.TextMeasurementService.svgEllipsis","powerbi.TextMeasurementService.wordBreak","powerbi.TextMeasurementService.wordBreakOverflowingText","jsCommon.ThrottleUtility","jsCommon.ThrottleUtility.constructor","jsCommon.ThrottleUtility.run","jsCommon.ThrottleUtility.timerComplete","jsCommon.TimerPromiseFactory","jsCommon.TimerPromiseFactory.create","jsCommon.HttpStatusCode","jsCommon.HttpConstants","jsCommon.StringExtensions","jsCommon.StringExtensions.format","jsCommon.StringExtensions.equalIgnoreCase","jsCommon.StringExtensions.startsWithIgnoreCase","jsCommon.StringExtensions.startsWith","jsCommon.StringExtensions.containsIgnoreCase","jsCommon.StringExtensions.normalizeCase","jsCommon.StringExtensions.isNullOrEmpty","jsCommon.StringExtensions.isNullOrUndefinedOrWhiteSpaceString","jsCommon.StringExtensions.containsWhitespace","jsCommon.StringExtensions.isWhitespace","jsCommon.StringExtensions.trimTrailingWhitespace","jsCommon.StringExtensions.trimWhitespace","jsCommon.StringExtensions.getLengthDifference","jsCommon.StringExtensions.repeat","jsCommon.StringExtensions.replaceAll","jsCommon.StringExtensions.ensureUniqueNames","jsCommon.StringExtensions.findUniqueName","jsCommon.StringExtensions.constructCommaSeparatedList","jsCommon.StringExtensions.escapeStringForRegex","jsCommon.StringExtensions.normalizeFileName","jsCommon.StringExtensions.stringifyAsPrettyJSON","jsCommon.StringExtensions.deriveClsCompliantName","jsCommon.StringExtensions.stripTagDelimiters","jsCommon.Utility","jsCommon.Utility.throwIfNullOrUndefined","jsCommon.Utility.throwIfNullOrEmpty","jsCommon.Utility.throwIfNullOrEmptyString","jsCommon.Utility.throwIfNullEmptyOrWhitespaceString","jsCommon.Utility.throwIfNotTrue","jsCommon.Utility.isString","jsCommon.Utility.isBoolean","jsCommon.Utility.isNumber","jsCommon.Utility.isDate","jsCommon.Utility.isObject","jsCommon.Utility.isNullOrUndefined","jsCommon.Utility.urlCombine","jsCommon.Utility.getAbsoluteUri","jsCommon.Utility.getStaticResourceUri","jsCommon.Utility.getComponentName","jsCommon.Utility.throwException","jsCommon.Utility.createClassSelector","jsCommon.Utility.createIdSelector","jsCommon.Utility.generateGuid","jsCommon.Utility.getCookieValue","jsCommon.Utility.getDomainForUrl","jsCommon.Utility.getHostNameForUrl","jsCommon.Utility.getUrlWithoutQueryString","jsCommon.Utility.getProtocolFromUrl","jsCommon.Utility.getHrefObjectFromUrl","jsCommon.Utility.convertWcfToJsDictionary","jsCommon.Utility.getDateFromWcfJsonString","jsCommon.Utility.getOuterHtml","jsCommon.Utility.compareInt","jsCommon.Utility.getIndexOfMinValue","jsCommon.Utility.extractUrlFromCssBackgroundImage","jsCommon.Utility.isValidImageDataUrl","jsCommon.Utility.saveAsFile","jsCommon.Utility.getType","jsCommon.Utility.isEventSupported","jsCommon.Utility.toPixel","jsCommon.Utility.getPropertyCount","jsCommon.Utility.getFileExtension","jsCommon.Utility.extractFileNameFromPath","jsCommon.Utility.canUseClipboard","jsCommon.Utility.is64BitOperatingSystem","jsCommon.Utility.parseNumber","jsCommon.Utility.getURLParamValue","jsCommon.Utility.getLocalTimeZoneString","jsCommon.VersionUtility","jsCommon.VersionUtility.compareVersions","jsCommon.PerformanceUtil","jsCommon.PerformanceUtil.create","jsCommon.PerformanceUtil.PerfMarker","jsCommon.PerformanceUtil.PerfMarker.constructor","jsCommon.PerformanceUtil.PerfMarker.begin","jsCommon.PerformanceUtil.PerfMarker.end","jsCommon.DeferUtility","jsCommon.DeferUtility.deferUntilNextFrame","isWaiting","arguments","context","window","requestAnimationFrame","callback","apply","jsCommon.TraceItem","jsCommon.TraceItem.constructor","jsCommon.TraceItem.toString","jsCommon.UrlUtils","jsCommon.UrlUtils.isValidUrl","jsCommon.UrlUtils.isValidImageUrl","jsCommon.UrlUtils.findAllValidUrls","jsCommon.EnumExtensions","jsCommon.EnumExtensions.hasFlag","jsCommon.EnumExtensions.setFlag","jsCommon.EnumExtensions.resetFlag","jsCommon.EnumExtensions.toString","jsCommon.StringExtensions.endsWith","jsCommon.LogicExtensions","jsCommon.LogicExtensions.XOR","jsCommon.JsonComparer","jsCommon.JsonComparer.equals","jsCommon.TextSizeDefaults","jsCommon.TextSizeDefaults.getScale","jsCommon.PixelConverter","jsCommon.PixelConverter.toString","jsCommon.PixelConverter.fromPoint","jsCommon.PixelConverter.fromPointToPixel","jsCommon.PixelConverter.toPoint","jsCommon.RegExpExtensions","jsCommon.RegExpExtensions.run","jsCommon.ConsoleTracer","jsCommon.ConsoleTracer.logTrace","jsCommon.Trace","jsCommon.Trace.warning","jsCommon.Trace.error","jsCommon.Trace.verbose","jsCommon.Trace.addListener","jsCommon.Trace.removeListener","jsCommon.Trace.resetListeners","jsCommon.Trace.reset","jsCommon.Trace.getTraces","jsCommon.Trace.disableDefaultListener","jsCommon.Trace.enableDefaultListener","jsCommon.Trace.logTraceInternal","jsCommon.TraceType","jsCommon.ensurePowerView","jsCommon.ensureMap","jsCommon.mapControlLoaded","jsCommon.waitForMapControlLoaded","globalMapControlLoaded","mapControlLoaded","InJs.TraceType"],"mappings":"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","file":"VisualsCommon.min.js","sourcesContent":["/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule jsCommon {\n    /**\n     * DOM constants.\n     */\n    export module DOMConstants {\n\n        /** \n         * Integer codes corresponding to individual keys on the keyboard.\n         */\n        export const escKeyCode = 27;\n        export const enterKeyCode = 13;\n        export const tabKeyCode = 9;\n        export const upArrowKeyCode = 38;\n        export const downArrowKeyCode = 40;\n        export const leftArrowKeyCode = 37;\n        export const rightArrowKeyCode = 39;\n        export const homeKeyCode = 36;\n        export const endKeyCode = 35;\n        export const backSpaceKeyCode = 8;\n        export const deleteKeyCode = 46;\n        export const spaceKeyCode = 32;\n        export const shiftKeyCode = 16;\n        export const ctrlKeyCode = 17;\n        export const altKeyCode = 18;\n\n        export const aKeyCode = 65;\n        export const cKeyCode = 67;\n        export const sKeyCode = 83;\n        export const vKeyCode = 86;\n        export const wKeyCode = 87;\n        export const xKeyCode = 88;\n        export const yKeyCode = 89;\n        export const zKeyCode = 90;\n\n        /** \n         * DOM Elements.\n         */\n        export const DocumentBody = 'body';\n        export const Anchor = 'a';\n        export const EditableTextElements = ':text, textarea';\n\n        /** \n         * DOM Attributes and values.\n         */\n        export const disabledAttributeOrValue = 'disabled';\n        export const readonlyAttributeOrValue = 'readonly';\n        export const idAttribute = 'id';\n        export const styleAttribute = 'style';\n        export const hrefAttribute = 'href';\n        export const targetAttribute = 'target';\n        export const blankValue = '_blank';\n        export const selfValue = '_self';\n        export const classAttribute = 'class';\n        export const titleAttribute = 'title';\n        export const srcAttribute = 'src';\n\n        /**\n         * DOM event names.\n         */\n        export const contextmenuEventName = 'contextmenu';\n        export const blurEventName = 'blur';\n        export const keyUpEventName = 'keyup';\n        export const inputEventName = 'input';\n        export const changeEventName = 'change';\n        export const cutEventName = 'cut';\n        export const keyDownEventName = 'keydown';\n        export const mouseMoveEventName = 'mousemove';\n        export const mouseDownEventName = 'mousedown';\n        export const mouseEnterEventName = 'mouseenter';\n        export const mouseLeaveEventName = 'mouseleave';\n        export const mouseOverEventName = 'mouseover';\n        export const mouseOutEventName = 'mouseout';\n        export const mouseClickEventName = 'click';\n        export const pasteEventName = 'paste';\n        export const scrollEventName = 'scroll';\n        export const dropEventName = 'drop';\n        export const focusEventName = 'focus';\n        export const focusInEventName = 'focusin';\n        export const focusOutEventName = 'focusout';\n        export const selectEventName = 'select';\n        export const messageEventName = 'message';\n        export const loadEventName = 'load';\n        export const beforeUnload = 'beforeunload';\n        \n        /**\n         * Common DOM event combination names.\n         */\n        export const inputAndSelectEventNames = 'input, select';\n    }\n}","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule powerbi {\n    import IStringResourceProvider = jsCommon.IStringResourceProvider;\n\n    export interface ServiceError {\n        statusCode: number;\n\n        /**\n         * This error code corresponds with a PowerBIServiceException that happened on the server.\n         */\n        errorCode?: string;\n        \n        /**\n         * Message and stack trace should only be sent in non-production environments.\n         */\n        message?: string;\n        stackTrace?: string;\n        errorDetails?: PowerBIErrorDetail[];\n        parameters?: ErrorParameter[];\n    }\n\n    export interface PowerBIErrorDetail {\n        code: string;\n        detail: PowerBIErrorDetailValue;\n    }\n\n    export interface ErrorParameter {\n        Key: string;\n        Value: string;\n    }\n\n    export interface PowerBIErrorDetailValue {\n        type: PowerBIErrorResourceType;\n        value: string;\n    }\n\n    export enum PowerBIErrorResourceType {\n        ResourceCodeReference = 0,\n        EmbeddedString = 1,\n    }\n\n    export const enum ServiceErrorStatusCode {\n        GeneralError = 0,\n        CsdlFetching = 1,\n        CsdlConvertXmlToConceptualSchema = 2,\n        CsdlCreateClientSchema = 3,\n        ExecuteSemanticQueryError = 4,\n        ExecuteSemanticQueryInvalidStreamFormat = 5,\n        ExecuteSemanticQueryTransformError = 6,\n    }\n\n    export class ServiceErrorToClientError implements IClientError {\n        private m_serviceError: ServiceError;\n        private httpRequestId: string;\n        private static codeName = 'ServiceErrorToClientError';\n\n        public get code(): string {\n            return ServiceErrorToClientError.codeName;\n        }\n\n        public get ignorable(): boolean {\n            return false;\n        }\n\n        public get requestId(): string {\n            return this.httpRequestId;\n        }\n\n        public set requestId(value: string) {\n            this.httpRequestId = value;\n        }\n\n        constructor(serviceError: ServiceError) {\n            this.m_serviceError = serviceError;\n        }\n\n        public getDetails(resourceProvider: IStringResourceProvider): ErrorDetails {\n            let errorDetails: ErrorDetails;\n            if (this.m_serviceError.statusCode === ServiceErrorStatusCode.ExecuteSemanticQueryTransformError) {\n                errorDetails = PowerBIErrorDetailHelper.GetDetailsFromTransformError(resourceProvider, this.m_serviceError);\n            }\n            else {\n                errorDetails = PowerBIErrorDetailHelper.GetDetailsFromServerErrorStatusCode(resourceProvider, this.m_serviceError.statusCode);\n            }\n\n            PowerBIErrorDetailHelper.addAdditionalInfo(errorDetails, this.m_serviceError.errorDetails, resourceProvider);\n            PowerBIErrorDetailHelper.addMessageAndStackTrace(errorDetails, this.m_serviceError.message || null, this.m_serviceError.stackTrace || null, resourceProvider);\n\n            return errorDetails;\n        }\n    }\n\n    export class PowerBIErrorDetailHelper {\n        private static serverErrorPrefix = \"ServerError_\";\n        public static addAdditionalInfo(errorDetails: ErrorDetails, pbiErrorDetails: PowerBIErrorDetail[], localize: IStringResourceProvider): ErrorDetails {\n            if (pbiErrorDetails) {\n                for (let i = 0; i < pbiErrorDetails.length; i++) {\n                    let element = pbiErrorDetails[i];\n                    let localizedCode = localize.get(PowerBIErrorDetailHelper.serverErrorPrefix + element.code);\n                    let additionErrorInfoKeyValuePair = {\n                        errorInfoKey: localizedCode ? localizedCode : element.code,\n                        errorInfoValue: element.detail.type === PowerBIErrorResourceType.ResourceCodeReference ? localize.get(PowerBIErrorDetailHelper.serverErrorPrefix + element.detail.value) : element.detail.value\n                    };\n\n                    errorDetails.additionalErrorInfo.push(additionErrorInfoKeyValuePair);\n                }\n            }\n            return errorDetails;\n        }\n\n        public static addMessageAndStackTrace(errorDetails: ErrorDetails, message: string, stackTrace: string, localize: IStringResourceProvider): ErrorDetails {\n            if (message) {\n                let additionErrorInfoKeyValuePair = {\n                    errorInfoKey: localize.get(\"AdditionalErrorInfo_ErrorDetailsText\"),\n                    errorInfoValue: message\n                };\n                errorDetails.additionalErrorInfo.push(additionErrorInfoKeyValuePair);\n            }\n            if (stackTrace) {\n                let additionErrorInfoKeyValuePair = {\n                    errorInfoKey: localize.get(\"AdditionalErrorInfo_StackTraceText\"),\n                    errorInfoValue: stackTrace\n                };\n                errorDetails.additionalErrorInfo.push(additionErrorInfoKeyValuePair);\n            }\n            return errorDetails;\n        }\n\n        public static GetDetailsFromTransformError(localize: IStringResourceProvider, serviceError: ServiceError): ErrorDetails {\n            let message = localize.get('ServiceError_CannotLoadVisual');\n            let key = localize.get('ServiceError_CannotLoadVisual');\n            let val = serviceError.message;\n\n            let additionalInfo: ErrorInfoKeyValuePair[] = [];\n            additionalInfo.push({ errorInfoKey: key, errorInfoValue: val, });\n\n            let errorDetails: ErrorDetails = {\n                message: message,\n                additionalErrorInfo: additionalInfo,\n            };\n\n            return errorDetails;\n        }\n\n        public static GetDetailsFromServerErrorStatusCode(localize: IStringResourceProvider, statusCode: number): ErrorDetails {\n            // TODO: Localize\n            let message: string = \"\";\n            let key: string = \"\";\n            let val: string = \"\";\n\n            switch (statusCode) {\n                case ServiceErrorStatusCode.CsdlConvertXmlToConceptualSchema:\n                    message = localize.get('ServiceError_ModelCannotLoad');\n                    key = localize.get('ServiceError_ModelConvertFailureKey');\n                    val = localize.get('ServiceError_ModelConvertFailureValue');\n                    break;\n                case ServiceErrorStatusCode.CsdlCreateClientSchema:\n                    message = localize.get('ServiceError_ModelCannotLoad');\n                    key = localize.get('ServiceError_ModelCreationFailureKey');\n                    val = localize.get('ServiceError_ModelCreationFailureValue');\n                    break;\n                case ServiceErrorStatusCode.CsdlFetching:\n                    message = localize.get('ServiceError_ModelCannotLoad');\n                    key = localize.get('ServiceError_ModelFetchingFailureKey');\n                    val = localize.get('ServiceError_ModelFetchingFailureValue');\n                    break;\n                case ServiceErrorStatusCode.ExecuteSemanticQueryError:\n                    message = localize.get('ServiceError_CannotLoadVisual');\n                    key = localize.get('ServiceError_ExecuteSemanticQueryErrorKey');\n                    val = localize.get('ServiceError_ExecuteSemanticQueryErrorValue');\n                    break;\n                case ServiceErrorStatusCode.ExecuteSemanticQueryInvalidStreamFormat:\n                    message = localize.get('ServiceError_CannotLoadVisual');\n                    key = localize.get('ServiceError_ExecuteSemanticQueryInvalidStreamFormatKey');\n                    val = localize.get('ServiceError_ExecuteSemanticQueryInvalidStreamFormatValue');\n                    break;\n                case ServiceErrorStatusCode.GeneralError:\n                default:\n                    message = localize.get('ServiceError_GeneralError');\n                    key = localize.get('ServiceError_GeneralErrorKey');\n                    val = localize.get('ServiceError_GeneralErrorValue');\n                    break;\n            }\n\n            let additionalInfo: ErrorInfoKeyValuePair[] = [];\n            additionalInfo.push({ errorInfoKey: key, errorInfoValue: val, });\n\n            let errorDetails: ErrorDetails = {\n                message: message,\n                additionalErrorInfo: additionalInfo,\n            };\n\n            return errorDetails;\n        }\n    }\n} ","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n///<reference path=\"../../Typedefs/jquery/jquery.d.ts\"/>\n///<reference path=\"../../Typedefs/d3/d3.d.ts\"/>\n///<reference path=\"../../Typedefs/lodash/lodash.d.ts\"/> \n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar jsCommon;\n(function (jsCommon) {\n    /**\n     * DOM constants.\n     */\n    var DOMConstants;\n    (function (DOMConstants) {\n        /**\n         * Integer codes corresponding to individual keys on the keyboard.\n         */\n        DOMConstants.escKeyCode = 27;\n        DOMConstants.enterKeyCode = 13;\n        DOMConstants.tabKeyCode = 9;\n        DOMConstants.upArrowKeyCode = 38;\n        DOMConstants.downArrowKeyCode = 40;\n        DOMConstants.leftArrowKeyCode = 37;\n        DOMConstants.rightArrowKeyCode = 39;\n        DOMConstants.homeKeyCode = 36;\n        DOMConstants.endKeyCode = 35;\n        DOMConstants.backSpaceKeyCode = 8;\n        DOMConstants.deleteKeyCode = 46;\n        DOMConstants.spaceKeyCode = 32;\n        DOMConstants.shiftKeyCode = 16;\n        DOMConstants.ctrlKeyCode = 17;\n        DOMConstants.altKeyCode = 18;\n        DOMConstants.aKeyCode = 65;\n        DOMConstants.cKeyCode = 67;\n        DOMConstants.sKeyCode = 83;\n        DOMConstants.vKeyCode = 86;\n        DOMConstants.wKeyCode = 87;\n        DOMConstants.xKeyCode = 88;\n        DOMConstants.yKeyCode = 89;\n        DOMConstants.zKeyCode = 90;\n        /**\n         * DOM Elements.\n         */\n        DOMConstants.DocumentBody = 'body';\n        DOMConstants.Anchor = 'a';\n        DOMConstants.EditableTextElements = ':text, textarea';\n        /**\n         * DOM Attributes and values.\n         */\n        DOMConstants.disabledAttributeOrValue = 'disabled';\n        DOMConstants.readonlyAttributeOrValue = 'readonly';\n        DOMConstants.idAttribute = 'id';\n        DOMConstants.styleAttribute = 'style';\n        DOMConstants.hrefAttribute = 'href';\n        DOMConstants.targetAttribute = 'target';\n        DOMConstants.blankValue = '_blank';\n        DOMConstants.selfValue = '_self';\n        DOMConstants.classAttribute = 'class';\n        DOMConstants.titleAttribute = 'title';\n        DOMConstants.srcAttribute = 'src';\n        /**\n         * DOM event names.\n         */\n        DOMConstants.contextmenuEventName = 'contextmenu';\n        DOMConstants.blurEventName = 'blur';\n        DOMConstants.keyUpEventName = 'keyup';\n        DOMConstants.inputEventName = 'input';\n        DOMConstants.changeEventName = 'change';\n        DOMConstants.cutEventName = 'cut';\n        DOMConstants.keyDownEventName = 'keydown';\n        DOMConstants.mouseMoveEventName = 'mousemove';\n        DOMConstants.mouseDownEventName = 'mousedown';\n        DOMConstants.mouseEnterEventName = 'mouseenter';\n        DOMConstants.mouseLeaveEventName = 'mouseleave';\n        DOMConstants.mouseOverEventName = 'mouseover';\n        DOMConstants.mouseOutEventName = 'mouseout';\n        DOMConstants.mouseClickEventName = 'click';\n        DOMConstants.pasteEventName = 'paste';\n        DOMConstants.scrollEventName = 'scroll';\n        DOMConstants.dropEventName = 'drop';\n        DOMConstants.focusEventName = 'focus';\n        DOMConstants.focusInEventName = 'focusin';\n        DOMConstants.focusOutEventName = 'focusout';\n        DOMConstants.selectEventName = 'select';\n        DOMConstants.messageEventName = 'message';\n        DOMConstants.loadEventName = 'load';\n        DOMConstants.beforeUnload = 'beforeunload';\n        /**\n         * Common DOM event combination names.\n         */\n        DOMConstants.inputAndSelectEventNames = 'input, select';\n    })(DOMConstants = jsCommon.DOMConstants || (jsCommon.DOMConstants = {}));\n})(jsCommon || (jsCommon = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar powerbi;\n(function (powerbi) {\n    (function (PowerBIErrorResourceType) {\n        PowerBIErrorResourceType[PowerBIErrorResourceType[\"ResourceCodeReference\"] = 0] = \"ResourceCodeReference\";\n        PowerBIErrorResourceType[PowerBIErrorResourceType[\"EmbeddedString\"] = 1] = \"EmbeddedString\";\n    })(powerbi.PowerBIErrorResourceType || (powerbi.PowerBIErrorResourceType = {}));\n    var PowerBIErrorResourceType = powerbi.PowerBIErrorResourceType;\n    var ServiceErrorToClientError = (function () {\n        function ServiceErrorToClientError(serviceError) {\n            this.m_serviceError = serviceError;\n        }\n        Object.defineProperty(ServiceErrorToClientError.prototype, \"code\", {\n            get: function () {\n                return ServiceErrorToClientError.codeName;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ServiceErrorToClientError.prototype, \"ignorable\", {\n            get: function () {\n                return false;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ServiceErrorToClientError.prototype, \"requestId\", {\n            get: function () {\n                return this.httpRequestId;\n            },\n            set: function (value) {\n                this.httpRequestId = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ServiceErrorToClientError.prototype.getDetails = function (resourceProvider) {\n            var errorDetails;\n            if (this.m_serviceError.statusCode === 6 /* ExecuteSemanticQueryTransformError */) {\n                errorDetails = PowerBIErrorDetailHelper.GetDetailsFromTransformError(resourceProvider, this.m_serviceError);\n            }\n            else {\n                errorDetails = PowerBIErrorDetailHelper.GetDetailsFromServerErrorStatusCode(resourceProvider, this.m_serviceError.statusCode);\n            }\n            PowerBIErrorDetailHelper.addAdditionalInfo(errorDetails, this.m_serviceError.errorDetails, resourceProvider);\n            PowerBIErrorDetailHelper.addMessageAndStackTrace(errorDetails, this.m_serviceError.message || null, this.m_serviceError.stackTrace || null, resourceProvider);\n            return errorDetails;\n        };\n        ServiceErrorToClientError.codeName = 'ServiceErrorToClientError';\n        return ServiceErrorToClientError;\n    })();\n    powerbi.ServiceErrorToClientError = ServiceErrorToClientError;\n    var PowerBIErrorDetailHelper = (function () {\n        function PowerBIErrorDetailHelper() {\n        }\n        PowerBIErrorDetailHelper.addAdditionalInfo = function (errorDetails, pbiErrorDetails, localize) {\n            if (pbiErrorDetails) {\n                for (var i = 0; i < pbiErrorDetails.length; i++) {\n                    var element = pbiErrorDetails[i];\n                    var localizedCode = localize.get(PowerBIErrorDetailHelper.serverErrorPrefix + element.code);\n                    var additionErrorInfoKeyValuePair = {\n                        errorInfoKey: localizedCode ? localizedCode : element.code,\n                        errorInfoValue: element.detail.type === PowerBIErrorResourceType.ResourceCodeReference ? localize.get(PowerBIErrorDetailHelper.serverErrorPrefix + element.detail.value) : element.detail.value\n                    };\n                    errorDetails.additionalErrorInfo.push(additionErrorInfoKeyValuePair);\n                }\n            }\n            return errorDetails;\n        };\n        PowerBIErrorDetailHelper.addMessageAndStackTrace = function (errorDetails, message, stackTrace, localize) {\n            if (message) {\n                var additionErrorInfoKeyValuePair = {\n                    errorInfoKey: localize.get(\"AdditionalErrorInfo_ErrorDetailsText\"),\n                    errorInfoValue: message\n                };\n                errorDetails.additionalErrorInfo.push(additionErrorInfoKeyValuePair);\n            }\n            if (stackTrace) {\n                var additionErrorInfoKeyValuePair = {\n                    errorInfoKey: localize.get(\"AdditionalErrorInfo_StackTraceText\"),\n                    errorInfoValue: stackTrace\n                };\n                errorDetails.additionalErrorInfo.push(additionErrorInfoKeyValuePair);\n            }\n            return errorDetails;\n        };\n        PowerBIErrorDetailHelper.GetDetailsFromTransformError = function (localize, serviceError) {\n            var message = localize.get('ServiceError_CannotLoadVisual');\n            var key = localize.get('ServiceError_CannotLoadVisual');\n            var val = serviceError.message;\n            var additionalInfo = [];\n            additionalInfo.push({ errorInfoKey: key, errorInfoValue: val, });\n            var errorDetails = {\n                message: message,\n                additionalErrorInfo: additionalInfo,\n            };\n            return errorDetails;\n        };\n        PowerBIErrorDetailHelper.GetDetailsFromServerErrorStatusCode = function (localize, statusCode) {\n            // TODO: Localize\n            var message = \"\";\n            var key = \"\";\n            var val = \"\";\n            switch (statusCode) {\n                case 2 /* CsdlConvertXmlToConceptualSchema */:\n                    message = localize.get('ServiceError_ModelCannotLoad');\n                    key = localize.get('ServiceError_ModelConvertFailureKey');\n                    val = localize.get('ServiceError_ModelConvertFailureValue');\n                    break;\n                case 3 /* CsdlCreateClientSchema */:\n                    message = localize.get('ServiceError_ModelCannotLoad');\n                    key = localize.get('ServiceError_ModelCreationFailureKey');\n                    val = localize.get('ServiceError_ModelCreationFailureValue');\n                    break;\n                case 1 /* CsdlFetching */:\n                    message = localize.get('ServiceError_ModelCannotLoad');\n                    key = localize.get('ServiceError_ModelFetchingFailureKey');\n                    val = localize.get('ServiceError_ModelFetchingFailureValue');\n                    break;\n                case 4 /* ExecuteSemanticQueryError */:\n                    message = localize.get('ServiceError_CannotLoadVisual');\n                    key = localize.get('ServiceError_ExecuteSemanticQueryErrorKey');\n                    val = localize.get('ServiceError_ExecuteSemanticQueryErrorValue');\n                    break;\n                case 5 /* ExecuteSemanticQueryInvalidStreamFormat */:\n                    message = localize.get('ServiceError_CannotLoadVisual');\n                    key = localize.get('ServiceError_ExecuteSemanticQueryInvalidStreamFormatKey');\n                    val = localize.get('ServiceError_ExecuteSemanticQueryInvalidStreamFormatValue');\n                    break;\n                case 0 /* GeneralError */:\n                default:\n                    message = localize.get('ServiceError_GeneralError');\n                    key = localize.get('ServiceError_GeneralErrorKey');\n                    val = localize.get('ServiceError_GeneralErrorValue');\n                    break;\n            }\n            var additionalInfo = [];\n            additionalInfo.push({ errorInfoKey: key, errorInfoValue: val, });\n            var errorDetails = {\n                message: message,\n                additionalErrorInfo: additionalInfo,\n            };\n            return errorDetails;\n        };\n        PowerBIErrorDetailHelper.serverErrorPrefix = \"ServerError_\";\n        return PowerBIErrorDetailHelper;\n    })();\n    powerbi.PowerBIErrorDetailHelper = PowerBIErrorDetailHelper;\n})(powerbi || (powerbi = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar powerbi;\n(function (powerbi) {\n})(powerbi || (powerbi = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar powerbi;\n(function (powerbi) {\n    powerbi.CategoryTypes = {\n        Address: \"Address\",\n        City: \"City\",\n        Continent: \"Continent\",\n        CountryRegion: \"Country\",\n        County: \"County\",\n        Longitude: \"Longitude\",\n        Latitude: \"Latitude\",\n        Place: \"Place\",\n        PostalCode: \"PostalCode\",\n        StateOrProvince: \"StateOrProvince\"\n    };\n    function createGeoTaggingAnalyzerService(getLocalized) {\n        return new GeoTaggingAnalyzerService(getLocalized);\n    }\n    powerbi.createGeoTaggingAnalyzerService = createGeoTaggingAnalyzerService;\n    var EnglishBackup = {\n        GeotaggingString_Continent: \"continent\",\n        GeotaggingString_Continents: \"continents\",\n        GeotaggingString_Country: \"country\",\n        GeotaggingString_Countries: \"countries\",\n        GeotaggingString_State: \"state\",\n        GeotaggingString_States: \"states\",\n        GeotaggingString_City: \"city\",\n        GeotaggingString_Cities: \"cities\",\n        GeotaggingString_Town: \"town\",\n        GeotaggingString_Towns: \"towns\",\n        GeotaggingString_Province: \"province\",\n        GeotaggingString_Provinces: \"provinces\",\n        GeotaggingString_County: \"county\",\n        GeotaggingString_Counties: \"counties\",\n        GeotaggingString_Village: \"village\",\n        GeotaggingString_Villages: \"villages\",\n        GeotaggingString_Post: \"post\",\n        GeotaggingString_Zip: \"zip\",\n        GeotaggingString_Code: \"code\",\n        GeotaggingString_Place: \"place\",\n        GeotaggingString_Places: \"places\",\n        GeotaggingString_Address: \"address\",\n        GeotaggingString_Addresses: \"addresses\",\n        GeotaggingString_Street: \"street\",\n        GeotaggingString_Streets: \"streets\",\n        GeotaggingString_Longitude: \"longitude\",\n        GeotaggingString_Longitude_Short: \"lon\",\n        GeotaggingString_Latitude: \"latitude\",\n        GeotaggingString_Latitude_Short: \"lat\",\n        GeotaggingString_PostalCode: \"postal code\",\n        GeotaggingString_PostalCodes: \"postal codes\",\n        GeotaggingString_ZipCode: \"zip code\",\n        GeotaggingString_ZipCodes: \"zip codes\",\n        GeotaggingString_Territory: \"territory\",\n        GeotaggingString_Territories: \"territories\",\n        GeotaggingString_VRMBackCompat_CountryRegion: \"CountryRegion\",\n        GeotaggingString_VRMBackCompat_StateOrProvince: \"StateOrProvince\",\n    };\n    var GeoTaggingAnalyzerService = (function () {\n        function GeoTaggingAnalyzerService(getLocalized) {\n            this.GeotaggingString_VRMBackCompat_CountryRegion = \"CountryRegion\";\n            this.GeotaggingString_VRMBackCompat_StateOrProvince = \"StateOrProvince\";\n            this.GeotaggingString_Continent = getLocalized(\"GeotaggingString_Continent\").toLowerCase();\n            this.GeotaggingString_Continents = getLocalized(\"GeotaggingString_Continents\").toLowerCase();\n            this.GeotaggingString_Country = getLocalized(\"GeotaggingString_Country\").toLowerCase();\n            this.GeotaggingString_Countries = getLocalized(\"GeotaggingString_Countries\").toLowerCase();\n            this.GeotaggingString_State = getLocalized(\"GeotaggingString_State\").toLowerCase();\n            this.GeotaggingString_States = getLocalized(\"GeotaggingString_States\").toLowerCase();\n            this.GeotaggingString_City = getLocalized(\"GeotaggingString_City\").toLowerCase();\n            this.GeotaggingString_Cities = getLocalized(\"GeotaggingString_Cities\").toLowerCase();\n            this.GeotaggingString_Town = getLocalized(\"GeotaggingString_Town\").toLowerCase();\n            this.GeotaggingString_Towns = getLocalized(\"GeotaggingString_Towns\").toLowerCase();\n            this.GeotaggingString_Province = getLocalized(\"GeotaggingString_Province\").toLowerCase();\n            this.GeotaggingString_Provinces = getLocalized(\"GeotaggingString_Provinces\").toLowerCase();\n            this.GeotaggingString_County = getLocalized(\"GeotaggingString_County\").toLowerCase();\n            this.GeotaggingString_Counties = getLocalized(\"GeotaggingString_Counties\").toLowerCase();\n            this.GeotaggingString_Village = getLocalized(\"GeotaggingString_Village\").toLowerCase();\n            this.GeotaggingString_Villages = getLocalized(\"GeotaggingString_Villages\").toLowerCase();\n            this.GeotaggingString_Post = getLocalized(\"GeotaggingString_Post\").toLowerCase();\n            this.GeotaggingString_Zip = getLocalized(\"GeotaggingString_Zip\").toLowerCase();\n            this.GeotaggingString_Code = getLocalized(\"GeotaggingString_Code\").toLowerCase();\n            this.GeotaggingString_Place = getLocalized(\"GeotaggingString_Place\").toLowerCase();\n            this.GeotaggingString_Places = getLocalized(\"GeotaggingString_Places\").toLowerCase();\n            this.GeotaggingString_Address = getLocalized(\"GeotaggingString_Address\").toLowerCase();\n            this.GeotaggingString_Addresses = getLocalized(\"GeotaggingString_Addresses\").toLowerCase();\n            this.GeotaggingString_Street = getLocalized(\"GeotaggingString_Street\").toLowerCase();\n            this.GeotaggingString_Streets = getLocalized(\"GeotaggingString_Streets\").toLowerCase();\n            this.GeotaggingString_Longitude = getLocalized(\"GeotaggingString_Longitude\").toLowerCase();\n            this.GeotaggingString_Longitude_Short = getLocalized(\"GeotaggingString_Longitude_Short\").toLowerCase();\n            this.GeotaggingString_Latitude = getLocalized(\"GeotaggingString_Latitude\").toLowerCase();\n            this.GeotaggingString_Latitude_Short = getLocalized(\"GeotaggingString_Latitude_Short\").toLowerCase();\n            this.GeotaggingString_PostalCode = getLocalized(\"GeotaggingString_PostalCode\").toLowerCase();\n            this.GeotaggingString_PostalCodes = getLocalized(\"GeotaggingString_PostalCodes\").toLowerCase();\n            this.GeotaggingString_ZipCode = getLocalized(\"GeotaggingString_ZipCode\").toLowerCase();\n            this.GeotaggingString_ZipCodes = getLocalized(\"GeotaggingString_ZipCodes\").toLowerCase();\n            this.GeotaggingString_Territory = getLocalized(\"GeotaggingString_Territory\").toLowerCase();\n            this.GeotaggingString_Territories = getLocalized(\"GeotaggingString_Territories\").toLowerCase();\n        }\n        GeoTaggingAnalyzerService.prototype.isLongitudeOrLatitude = function (fieldRefName) {\n            return this.isLongitude(fieldRefName) ||\n                this.isLatitude(fieldRefName);\n        };\n        GeoTaggingAnalyzerService.prototype.isGeographic = function (fieldRefName) {\n            return this.isLongitudeOrLatitude(fieldRefName) ||\n                this.isGeocodable(fieldRefName);\n        };\n        GeoTaggingAnalyzerService.prototype.isGeocodable = function (fieldRefName) {\n            return this.isAddress(fieldRefName) ||\n                this.isCity(fieldRefName) ||\n                this.isContinent(fieldRefName) ||\n                this.isCountry(fieldRefName) ||\n                this.isCounty(fieldRefName) ||\n                this.isStateOrProvince(fieldRefName) ||\n                this.isPlace(fieldRefName) ||\n                this.isPostalCode(fieldRefName) ||\n                this.isTerritory(fieldRefName);\n        };\n        GeoTaggingAnalyzerService.prototype.isGeoshapable = function (fieldRefName) {\n            return this.isCity(fieldRefName) ||\n                this.isCountry(fieldRefName) ||\n                this.isCounty(fieldRefName) ||\n                this.isStateOrProvince(fieldRefName) ||\n                this.isPostalCode(fieldRefName) ||\n                this.isTerritory(fieldRefName) ||\n                this.isGeoshapableEnglish(fieldRefName);\n        };\n        GeoTaggingAnalyzerService.prototype.isGeoshapableEnglish = function (fieldRefName) {\n            return this.isEnglishCity(fieldRefName) ||\n                this.isEnglishCountry(fieldRefName) ||\n                this.isEnglishCounty(fieldRefName) ||\n                this.isEnglishStateOrProvince(fieldRefName) ||\n                this.isEnglishPostalCode(fieldRefName) ||\n                this.isEnglishTerritory(fieldRefName);\n        };\n        GeoTaggingAnalyzerService.prototype.isAddress = function (fieldRefName) {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                this.GeotaggingString_Address,\n                this.GeotaggingString_Addresses,\n                this.GeotaggingString_Street,\n                this.GeotaggingString_Streets\n            ]);\n        };\n        GeoTaggingAnalyzerService.prototype.isPlace = function (fieldRefName) {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                this.GeotaggingString_Place,\n                this.GeotaggingString_Places\n            ]);\n        };\n        GeoTaggingAnalyzerService.prototype.isCity = function (fieldRefName) {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                this.GeotaggingString_City,\n                this.GeotaggingString_Cities,\n                this.GeotaggingString_Town,\n                this.GeotaggingString_Towns,\n                this.GeotaggingString_Village,\n                this.GeotaggingString_Villages\n            ]);\n        };\n        GeoTaggingAnalyzerService.prototype.isStateOrProvince = function (fieldRefName) {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                this.GeotaggingString_State,\n                this.GeotaggingString_States,\n                this.GeotaggingString_Province,\n                this.GeotaggingString_Provinces,\n                this.GeotaggingString_VRMBackCompat_StateOrProvince,\n            ]);\n        };\n        GeoTaggingAnalyzerService.prototype.isCountry = function (fieldRefName) {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                this.GeotaggingString_Country,\n                this.GeotaggingString_Countries,\n                this.GeotaggingString_VRMBackCompat_CountryRegion\n            ]);\n        };\n        GeoTaggingAnalyzerService.prototype.isCounty = function (fieldRefName) {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                this.GeotaggingString_County,\n                this.GeotaggingString_Counties\n            ]);\n        };\n        GeoTaggingAnalyzerService.prototype.isContinent = function (fieldRefName) {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                this.GeotaggingString_Continent,\n                this.GeotaggingString_Continents\n            ]);\n        };\n        GeoTaggingAnalyzerService.prototype.isPostalCode = function (fieldRefName) {\n            var result = (GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                this.GeotaggingString_Post,\n                this.GeotaggingString_Zip])\n                && GeoTaggingAnalyzerService.hasMatches(fieldRefName, [this.GeotaggingString_Code])) ||\n                GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                    this.GeotaggingString_PostalCode,\n                    this.GeotaggingString_PostalCodes,\n                    this.GeotaggingString_ZipCode,\n                    this.GeotaggingString_ZipCodes\n                ]);\n            //Check again for strings without whitespace\n            if (!result) {\n                var whiteSpaceRegex = /\\s+/;\n                var fieldNameWithoutWhitespace = fieldRefName.replace(whiteSpaceRegex, \"\");\n                result = GeoTaggingAnalyzerService.hasMatches(fieldNameWithoutWhitespace, [\n                    this.GeotaggingString_PostalCode.replace(whiteSpaceRegex, ''),\n                    this.GeotaggingString_PostalCodes.replace(whiteSpaceRegex, ''),\n                    this.GeotaggingString_ZipCode.replace(whiteSpaceRegex, ''),\n                    this.GeotaggingString_ZipCodes.replace(whiteSpaceRegex, '')\n                ]);\n            }\n            return result;\n        };\n        GeoTaggingAnalyzerService.prototype.isLongitude = function (fieldRefName) {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [this.GeotaggingString_Longitude])\n                || GeoTaggingAnalyzerService.hasMatches(fieldRefName, [this.GeotaggingString_Longitude_Short], true /* useStrict */);\n        };\n        GeoTaggingAnalyzerService.prototype.isLatitude = function (fieldRefName) {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [this.GeotaggingString_Latitude])\n                || GeoTaggingAnalyzerService.hasMatches(fieldRefName, [this.GeotaggingString_Latitude_Short], true /* useStrict */);\n        };\n        GeoTaggingAnalyzerService.prototype.isTerritory = function (fieldRefName) {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                this.GeotaggingString_Territory,\n                this.GeotaggingString_Territories\n            ]);\n        };\n        GeoTaggingAnalyzerService.hasMatches = function (fieldName, possibleMatches, useStrict) {\n            var nonWordRegex = /\\W/;\n            var value = fieldName.toLowerCase();\n            for (var i = 0, len = possibleMatches.length; i < len; i++) {\n                var possibleMatch = possibleMatches[i].toLowerCase();\n                if (!useStrict) {\n                    if (value.indexOf(possibleMatch) > -1)\n                        return true;\n                }\n                else {\n                    var indexofpossibleMatch = value.indexOf(possibleMatch);\n                    if (indexofpossibleMatch > -1) {\n                        var wordEndFlag = void 0, wordBeginFlag = void 0;\n                        wordEndFlag = wordBeginFlag = true;\n                        if (indexofpossibleMatch - 1 > 0)\n                            wordBeginFlag = nonWordRegex.test(value[indexofpossibleMatch - 1]);\n                        if (indexofpossibleMatch + possibleMatch.length < value.length)\n                            wordEndFlag = nonWordRegex.test(value[indexofpossibleMatch + possibleMatch.length]);\n                        if (wordBeginFlag && wordEndFlag)\n                            return true;\n                    }\n                }\n            }\n            return false;\n        };\n        GeoTaggingAnalyzerService.prototype.getFieldType = function (fieldName) {\n            if (fieldName == null)\n                return undefined;\n            if (this.isLatitude(fieldName))\n                return powerbi.CategoryTypes.Latitude;\n            if (this.isLongitude(fieldName))\n                return powerbi.CategoryTypes.Longitude;\n            if (this.isPostalCode(fieldName))\n                return powerbi.CategoryTypes.PostalCode;\n            if (this.isAddress(fieldName))\n                return powerbi.CategoryTypes.Address;\n            if (this.isPlace(fieldName))\n                return powerbi.CategoryTypes.Place;\n            if (this.isCity(fieldName))\n                return powerbi.CategoryTypes.City;\n            if (this.isCountry(fieldName))\n                return powerbi.CategoryTypes.CountryRegion;\n            if (this.isCounty(fieldName))\n                return powerbi.CategoryTypes.County;\n            if (this.isStateOrProvince(fieldName))\n                return powerbi.CategoryTypes.StateOrProvince;\n            if (this.isContinent(fieldName))\n                return powerbi.CategoryTypes.Continent;\n            return this.getEnglishFieldType(fieldName);\n        };\n        GeoTaggingAnalyzerService.prototype.isEnglishAddress = function (fieldRefName) {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                EnglishBackup.GeotaggingString_Address,\n                EnglishBackup.GeotaggingString_Addresses,\n                EnglishBackup.GeotaggingString_Street,\n                EnglishBackup.GeotaggingString_Streets\n            ]);\n        };\n        GeoTaggingAnalyzerService.prototype.isEnglishPlace = function (fieldRefName) {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                EnglishBackup.GeotaggingString_Place,\n                EnglishBackup.GeotaggingString_Places\n            ]);\n        };\n        GeoTaggingAnalyzerService.prototype.isEnglishCity = function (fieldRefName) {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                EnglishBackup.GeotaggingString_City,\n                EnglishBackup.GeotaggingString_Cities,\n                EnglishBackup.GeotaggingString_Town,\n                EnglishBackup.GeotaggingString_Towns,\n                EnglishBackup.GeotaggingString_Village,\n                EnglishBackup.GeotaggingString_Villages\n            ]);\n        };\n        GeoTaggingAnalyzerService.prototype.isEnglishStateOrProvince = function (fieldRefName) {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                EnglishBackup.GeotaggingString_State,\n                EnglishBackup.GeotaggingString_States,\n                EnglishBackup.GeotaggingString_Province,\n                EnglishBackup.GeotaggingString_Provinces,\n                EnglishBackup.GeotaggingString_VRMBackCompat_StateOrProvince,\n            ]);\n        };\n        GeoTaggingAnalyzerService.prototype.isEnglishCountry = function (fieldRefName) {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                EnglishBackup.GeotaggingString_Country,\n                EnglishBackup.GeotaggingString_Countries,\n                EnglishBackup.GeotaggingString_VRMBackCompat_CountryRegion\n            ]);\n        };\n        GeoTaggingAnalyzerService.prototype.isEnglishCounty = function (fieldRefName) {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                EnglishBackup.GeotaggingString_County,\n                EnglishBackup.GeotaggingString_Counties\n            ]);\n        };\n        GeoTaggingAnalyzerService.prototype.isEnglishContinent = function (fieldRefName) {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                EnglishBackup.GeotaggingString_Continent,\n                EnglishBackup.GeotaggingString_Continents\n            ]);\n        };\n        GeoTaggingAnalyzerService.prototype.isEnglishPostalCode = function (fieldRefName) {\n            var result = (GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                EnglishBackup.GeotaggingString_Post,\n                EnglishBackup.GeotaggingString_Zip])\n                && GeoTaggingAnalyzerService.hasMatches(fieldRefName, [this.GeotaggingString_Code])) ||\n                GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                    EnglishBackup.GeotaggingString_PostalCode,\n                    EnglishBackup.GeotaggingString_PostalCodes,\n                    EnglishBackup.GeotaggingString_ZipCode,\n                    EnglishBackup.GeotaggingString_ZipCodes\n                ]);\n            //Check again for strings without whitespace\n            if (!result) {\n                var whiteSpaceRegexPattern = new RegExp('\\s');\n                result = GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                    EnglishBackup.GeotaggingString_PostalCode.replace(whiteSpaceRegexPattern, ''),\n                    EnglishBackup.GeotaggingString_PostalCodes.replace(whiteSpaceRegexPattern, ''),\n                    EnglishBackup.GeotaggingString_ZipCode.replace(whiteSpaceRegexPattern, ''),\n                    EnglishBackup.GeotaggingString_ZipCodes.replace(whiteSpaceRegexPattern, '')\n                ]);\n            }\n            return result;\n        };\n        GeoTaggingAnalyzerService.prototype.isEnglishLongitude = function (fieldRefName) {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                EnglishBackup.GeotaggingString_Longitude,\n                EnglishBackup.GeotaggingString_Longitude_Short\n            ]);\n        };\n        GeoTaggingAnalyzerService.prototype.isEnglishLatitude = function (fieldRefName) {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                EnglishBackup.GeotaggingString_Latitude,\n                EnglishBackup.GeotaggingString_Latitude_Short\n            ]);\n        };\n        GeoTaggingAnalyzerService.prototype.isEnglishTerritory = function (fieldRefName) {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                EnglishBackup.GeotaggingString_Territory,\n                EnglishBackup.GeotaggingString_Territories\n            ]);\n        };\n        GeoTaggingAnalyzerService.prototype.getEnglishFieldType = function (fieldName) {\n            if (fieldName == null)\n                return undefined;\n            if (this.isEnglishLatitude(fieldName))\n                return powerbi.CategoryTypes.Latitude;\n            if (this.isEnglishLongitude(fieldName))\n                return powerbi.CategoryTypes.Longitude;\n            if (this.isEnglishPostalCode(fieldName))\n                return powerbi.CategoryTypes.PostalCode;\n            if (this.isEnglishAddress(fieldName))\n                return powerbi.CategoryTypes.Address;\n            if (this.isEnglishPlace(fieldName))\n                return powerbi.CategoryTypes.Place;\n            if (this.isEnglishCity(fieldName))\n                return powerbi.CategoryTypes.City;\n            if (this.isEnglishCountry(fieldName))\n                return powerbi.CategoryTypes.CountryRegion;\n            if (this.isEnglishCounty(fieldName))\n                return powerbi.CategoryTypes.County;\n            if (this.isEnglishStateOrProvince(fieldName))\n                return powerbi.CategoryTypes.StateOrProvince;\n            if (this.isEnglishContinent(fieldName))\n                return powerbi.CategoryTypes.Continent;\n            return undefined;\n        };\n        return GeoTaggingAnalyzerService;\n    })();\n    powerbi.GeoTaggingAnalyzerService = GeoTaggingAnalyzerService;\n})(powerbi || (powerbi = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nif (typeof DEBUG === 'undefined')\n    var DEBUG = true;\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar powerbi;\n(function (powerbi) {\n    var UnknownClientError = (function () {\n        function UnknownClientError() {\n        }\n        Object.defineProperty(UnknownClientError.prototype, \"code\", {\n            get: function () {\n                return 'UnknownClientError';\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(UnknownClientError.prototype, \"ignorable\", {\n            get: function () {\n                return false;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        UnknownClientError.prototype.getDetails = function (resourceProvider) {\n            var details = {\n                message: resourceProvider.get('ClientError_UnknownClientErrorValue'),\n                additionalErrorInfo: [{ errorInfoKey: resourceProvider.get('ClientError_UnknownClientErrorKey'), errorInfoValue: resourceProvider.get('ClientError_UnknownClientErrorValue'), }],\n            };\n            return details;\n        };\n        return UnknownClientError;\n    })();\n    powerbi.UnknownClientError = UnknownClientError;\n    var HttpClientError = (function () {\n        function HttpClientError(httpStatusCode, requestId) {\n            debug.assertValue(httpStatusCode, 'httpStatusCode');\n            debug.assertValue(requestId, 'requestId');\n            this.httpStatusCode = httpStatusCode;\n            this.httpRequestId = requestId;\n        }\n        Object.defineProperty(HttpClientError.prototype, \"code\", {\n            get: function () {\n                return 'HttpClientError';\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(HttpClientError.prototype, \"ignorable\", {\n            get: function () {\n                return false;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(HttpClientError.prototype, \"requestId\", {\n            get: function () {\n                return this.httpRequestId;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        HttpClientError.prototype.getDetails = function (resourceProvider) {\n            // Use a general error message for a HTTP request failure, since we currently do not know of any specifc error cases at this point in time.\n            var details = {\n                message: null,\n                additionalErrorInfo: [\n                    { errorInfoKey: resourceProvider.get('DsrError_Key'), errorInfoValue: resourceProvider.get('DsrError_UnknownErrorValue') },\n                    { errorInfoKey: resourceProvider.get('ClientError_HttpResponseStatusCodeKey'), errorInfoValue: this.httpStatusCode.toString() }],\n            };\n            return details;\n        };\n        return HttpClientError;\n    })();\n    powerbi.HttpClientError = HttpClientError;\n    var IgnorableClientError = (function () {\n        function IgnorableClientError() {\n        }\n        Object.defineProperty(IgnorableClientError.prototype, \"code\", {\n            get: function () {\n                return 'IgnorableClientError';\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(IgnorableClientError.prototype, \"ignorable\", {\n            get: function () {\n                return true;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        IgnorableClientError.prototype.getDetails = function (resourceProvider) {\n            var details = {\n                message: '',\n                additionalErrorInfo: [],\n            };\n            return details;\n        };\n        return IgnorableClientError;\n    })();\n    powerbi.IgnorableClientError = IgnorableClientError;\n})(powerbi || (powerbi = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar jsCommon;\n(function (jsCommon) {\n    var ArrayExtensions;\n    (function (ArrayExtensions) {\n        /**\n         * Returns items that exist in target and other.\n         */\n        function intersect(target, other) {\n            var result = [];\n            for (var i = target.length - 1; i >= 0; --i) {\n                if (other.indexOf(target[i]) !== -1) {\n                    result.push(target[i]);\n                }\n            }\n            return result;\n        }\n        ArrayExtensions.intersect = intersect;\n        /**\n         * Return elements exists in target but not exists in other.\n         */\n        function diff(target, other) {\n            var result = [];\n            for (var i = target.length - 1; i >= 0; --i) {\n                var value = target[i];\n                if (other.indexOf(value) === -1) {\n                    result.push(value);\n                }\n            }\n            return result;\n        }\n        ArrayExtensions.diff = diff;\n        /**\n         * Return an array with only the distinct items in the source.\n         */\n        function distinct(source) {\n            var result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                var value = source[i];\n                if (result.indexOf(value) === -1) {\n                    result.push(value);\n                }\n            }\n            return result;\n        }\n        ArrayExtensions.distinct = distinct;\n        /**\n         * Pushes content of source onto target,\n         * for parts of course that do not already exist in target.\n         */\n        function union(target, source) {\n            for (var i = 0, len = source.length; i < len; ++i) {\n                unionSingle(target, source[i]);\n            }\n        }\n        ArrayExtensions.union = union;\n        /**\n         * Pushes value onto target, if value does not already exist in target.\n         */\n        function unionSingle(target, value) {\n            if (target.indexOf(value) < 0) {\n                target.push(value);\n            }\n        }\n        ArrayExtensions.unionSingle = unionSingle;\n        /**\n         * Returns an array with a range of items from source,\n         * including the startIndex & endIndex.\n         */\n        function range(source, startIndex, endIndex) {\n            debug.assert(startIndex >= 0 && startIndex < source.length, 'startIndex is out of range.');\n            debug.assert(endIndex >= 0 && endIndex < source.length, 'endIndex is out of range.');\n            var result = [];\n            for (var i = startIndex; i <= endIndex; ++i) {\n                result.push(source[i]);\n            }\n            return result;\n        }\n        ArrayExtensions.range = range;\n        /**\n         * Returns an array that includes items from source, up to the specified count.\n         */\n        function take(source, count) {\n            debug.assert(count >= 0, 'Count is negative.');\n            debug.assert(count <= source.length, 'Count is too large.');\n            var result = [];\n            for (var i = 0; i < count; ++i) {\n                result.push(source[i]);\n            }\n            return result;\n        }\n        ArrayExtensions.take = take;\n        function copy(source) {\n            debug.assertValue(source, 'source');\n            return take(source, source.length);\n        }\n        ArrayExtensions.copy = copy;\n        /**\n         * Returns a value indicating whether the arrays have the same values in the same sequence.\n         */\n        function sequenceEqual(left, right, comparison) {\n            debug.assertValue(comparison, 'comparison');\n            if (left === right) {\n                return true;\n            }\n            if (!!left !== !!right) {\n                return false;\n            }\n            var len = left.length;\n            if (len !== right.length) {\n                return false;\n            }\n            var i = 0;\n            while (i < len && comparison(left[i], right[i])) {\n                ++i;\n            }\n            return i === len;\n        }\n        ArrayExtensions.sequenceEqual = sequenceEqual;\n        /**\n         * Returns null if the specified array is empty.\n         * Otherwise returns the specified array.\n         */\n        function emptyToNull(array) {\n            if (array && array.length === 0) {\n                return null;\n            }\n            return array;\n        }\n        ArrayExtensions.emptyToNull = emptyToNull;\n        function indexOf(array, predicate) {\n            debug.assertValue(array, 'array');\n            debug.assertValue(predicate, 'predicate');\n            for (var i = 0, len = array.length; i < len; ++i) {\n                if (predicate(array[i])) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n        ArrayExtensions.indexOf = indexOf;\n        /**\n         * Returns a copy of the array rotated by the specified offset.\n         */\n        function rotate(array, offset) {\n            if (offset === 0)\n                return array.slice();\n            var rotated = array.slice(offset);\n            Array.prototype.push.apply(rotated, array.slice(0, offset));\n            return rotated;\n        }\n        ArrayExtensions.rotate = rotate;\n        function createWithId() {\n            return extendWithId([]);\n        }\n        ArrayExtensions.createWithId = createWithId;\n        function extendWithId(array) {\n            debug.assertValue(array, 'array');\n            var extended = array;\n            extended.withId = withId;\n            return extended;\n        }\n        ArrayExtensions.extendWithId = extendWithId;\n        /**\n         * Finds and returns the first item with a matching ID.\n         */\n        function findWithId(array, id) {\n            for (var i = 0, len = array.length; i < len; i++) {\n                var item = array[i];\n                if (item.id === id)\n                    return item;\n            }\n        }\n        ArrayExtensions.findWithId = findWithId;\n        function withId(id) {\n            return ArrayExtensions.findWithId(this, id);\n        }\n        function createWithName() {\n            return extendWithName([]);\n        }\n        ArrayExtensions.createWithName = createWithName;\n        function extendWithName(array) {\n            debug.assertValue(array, 'array');\n            var extended = array;\n            extended.withName = withName;\n            return extended;\n        }\n        ArrayExtensions.extendWithName = extendWithName;\n        function findItemWithName(array, name) {\n            var index = indexWithName(array, name);\n            if (index >= 0)\n                return array[index];\n        }\n        ArrayExtensions.findItemWithName = findItemWithName;\n        function indexWithName(array, name) {\n            for (var i = 0, len = array.length; i < len; i++) {\n                var item = array[i];\n                if (item.name === name)\n                    return i;\n            }\n            return -1;\n        }\n        ArrayExtensions.indexWithName = indexWithName;\n        /**\n         * Finds and returns the first item with a matching name.\n         */\n        function withName(name) {\n            var array = this;\n            return findItemWithName(array, name);\n        }\n        /**\n         * Deletes all items from the array.\n         */\n        function clear(array) {\n            if (!array)\n                return;\n            while (array.length > 0)\n                array.pop();\n        }\n        ArrayExtensions.clear = clear;\n        function isUndefinedOrEmpty(array) {\n            if (!array || array.length === 0) {\n                return true;\n            }\n            return false;\n        }\n        ArrayExtensions.isUndefinedOrEmpty = isUndefinedOrEmpty;\n        function swap(array, firstIndex, secondIndex) {\n            var temp = array[firstIndex];\n            array[firstIndex] = array[secondIndex];\n            array[secondIndex] = temp;\n        }\n        ArrayExtensions.swap = swap;\n        function isInArray(array, lookupItem, compareCallback) {\n            return _.any(array, function (item) { return compareCallback(item, lookupItem); });\n        }\n        ArrayExtensions.isInArray = isInArray;\n    })(ArrayExtensions = jsCommon.ArrayExtensions || (jsCommon.ArrayExtensions = {}));\n})(jsCommon || (jsCommon = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar InJs;\n(function (InJs) {\n    var DomFactory;\n    (function (DomFactory) {\n        function div() {\n            return $('<div/>');\n        }\n        DomFactory.div = div;\n        function span() {\n            return $('<span/>');\n        }\n        DomFactory.span = span;\n        function checkbox() {\n            return $('<input type=\"checkbox\"/>');\n        }\n        DomFactory.checkbox = checkbox;\n        function ul() {\n            return $('<ul/>');\n        }\n        DomFactory.ul = ul;\n        function li() {\n            return $('<li/>');\n        }\n        DomFactory.li = li;\n        function button() {\n            return $('<input type=\"button\"/>');\n        }\n        DomFactory.button = button;\n        function select() {\n            return $('<select/>');\n        }\n        DomFactory.select = select;\n        function textBox() {\n            return $('<input type=\"text\"/>');\n        }\n        DomFactory.textBox = textBox;\n        function img() {\n            return $('<img/>');\n        }\n        DomFactory.img = img;\n        function iframe() {\n            return $('<iframe/>');\n        }\n        DomFactory.iframe = iframe;\n    })(DomFactory = InJs.DomFactory || (InJs.DomFactory = {}));\n})(InJs || (InJs = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar powerbi;\n(function (powerbi) {\n    /**\n     * Module Double contains a set of constants and precision based utility methods\n     * for dealing with doubles and their decimal garbage in the javascript.\n     */\n    var Double;\n    (function (Double) {\n        // Constants.\n        Double.MIN_VALUE = -Number.MAX_VALUE;\n        Double.MAX_VALUE = Number.MAX_VALUE;\n        Double.MIN_EXP = -308;\n        Double.MAX_EXP = 308;\n        Double.EPSILON = 1E-323;\n        Double.DEFAULT_PRECISION = 0.0001;\n        Double.DEFAULT_PRECISION_IN_DECIMAL_DIGITS = 12;\n        Double.LOG_E_10 = Math.log(10);\n        Double.POSITIVE_POWERS = [\n            1E0, 1E1, 1E2, 1E3, 1E4, 1E5, 1E6, 1E7, 1E8, 1E9, 1E10, 1E11, 1E12, 1E13, 1E14, 1E15, 1E16, 1E17, 1E18, 1E19, 1E20, 1E21, 1E22, 1E23, 1E24, 1E25, 1E26, 1E27, 1E28, 1E29, 1E30, 1E31, 1E32, 1E33, 1E34, 1E35, 1E36, 1E37, 1E38, 1E39, 1E40, 1E41, 1E42, 1E43, 1E44, 1E45, 1E46, 1E47, 1E48, 1E49, 1E50, 1E51, 1E52, 1E53, 1E54, 1E55, 1E56, 1E57, 1E58, 1E59, 1E60, 1E61, 1E62, 1E63, 1E64, 1E65, 1E66, 1E67, 1E68, 1E69, 1E70, 1E71, 1E72, 1E73, 1E74, 1E75, 1E76, 1E77, 1E78, 1E79, 1E80, 1E81, 1E82, 1E83, 1E84, 1E85, 1E86, 1E87, 1E88, 1E89, 1E90, 1E91, 1E92, 1E93, 1E94, 1E95, 1E96, 1E97, 1E98, 1E99,\n            1E100, 1E101, 1E102, 1E103, 1E104, 1E105, 1E106, 1E107, 1E108, 1E109, 1E110, 1E111, 1E112, 1E113, 1E114, 1E115, 1E116, 1E117, 1E118, 1E119, 1E120, 1E121, 1E122, 1E123, 1E124, 1E125, 1E126, 1E127, 1E128, 1E129, 1E130, 1E131, 1E132, 1E133, 1E134, 1E135, 1E136, 1E137, 1E138, 1E139, 1E140, 1E141, 1E142, 1E143, 1E144, 1E145, 1E146, 1E147, 1E148, 1E149, 1E150, 1E151, 1E152, 1E153, 1E154, 1E155, 1E156, 1E157, 1E158, 1E159, 1E160, 1E161, 1E162, 1E163, 1E164, 1E165, 1E166, 1E167, 1E168, 1E169, 1E170, 1E171, 1E172, 1E173, 1E174, 1E175, 1E176, 1E177, 1E178, 1E179, 1E180, 1E181, 1E182, 1E183, 1E184, 1E185, 1E186, 1E187, 1E188, 1E189, 1E190, 1E191, 1E192, 1E193, 1E194, 1E195, 1E196, 1E197, 1E198, 1E199,\n            1E200, 1E201, 1E202, 1E203, 1E204, 1E205, 1E206, 1E207, 1E208, 1E209, 1E210, 1E211, 1E212, 1E213, 1E214, 1E215, 1E216, 1E217, 1E218, 1E219, 1E220, 1E221, 1E222, 1E223, 1E224, 1E225, 1E226, 1E227, 1E228, 1E229, 1E230, 1E231, 1E232, 1E233, 1E234, 1E235, 1E236, 1E237, 1E238, 1E239, 1E240, 1E241, 1E242, 1E243, 1E244, 1E245, 1E246, 1E247, 1E248, 1E249, 1E250, 1E251, 1E252, 1E253, 1E254, 1E255, 1E256, 1E257, 1E258, 1E259, 1E260, 1E261, 1E262, 1E263, 1E264, 1E265, 1E266, 1E267, 1E268, 1E269, 1E270, 1E271, 1E272, 1E273, 1E274, 1E275, 1E276, 1E277, 1E278, 1E279, 1E280, 1E281, 1E282, 1E283, 1E284, 1E285, 1E286, 1E287, 1E288, 1E289, 1E290, 1E291, 1E292, 1E293, 1E294, 1E295, 1E296, 1E297, 1E298, 1E299,\n            1E300, 1E301, 1E302, 1E303, 1E304, 1E305, 1E306, 1E307, 1E308];\n        Double.NEGATIVE_POWERS = [\n            1E0, 1E-1, 1E-2, 1E-3, 1E-4, 1E-5, 1E-6, 1E-7, 1E-8, 1E-9, 1E-10, 1E-11, 1E-12, 1E-13, 1E-14, 1E-15, 1E-16, 1E-17, 1E-18, 1E-19, 1E-20, 1E-21, 1E-22, 1E-23, 1E-24, 1E-25, 1E-26, 1E-27, 1E-28, 1E-29, 1E-30, 1E-31, 1E-32, 1E-33, 1E-34, 1E-35, 1E-36, 1E-37, 1E-38, 1E-39, 1E-40, 1E-41, 1E-42, 1E-43, 1E-44, 1E-45, 1E-46, 1E-47, 1E-48, 1E-49, 1E-50, 1E-51, 1E-52, 1E-53, 1E-54, 1E-55, 1E-56, 1E-57, 1E-58, 1E-59, 1E-60, 1E-61, 1E-62, 1E-63, 1E-64, 1E-65, 1E-66, 1E-67, 1E-68, 1E-69, 1E-70, 1E-71, 1E-72, 1E-73, 1E-74, 1E-75, 1E-76, 1E-77, 1E-78, 1E-79, 1E-80, 1E-81, 1E-82, 1E-83, 1E-84, 1E-85, 1E-86, 1E-87, 1E-88, 1E-89, 1E-90, 1E-91, 1E-92, 1E-93, 1E-94, 1E-95, 1E-96, 1E-97, 1E-98, 1E-99,\n            1E-100, 1E-101, 1E-102, 1E-103, 1E-104, 1E-105, 1E-106, 1E-107, 1E-108, 1E-109, 1E-110, 1E-111, 1E-112, 1E-113, 1E-114, 1E-115, 1E-116, 1E-117, 1E-118, 1E-119, 1E-120, 1E-121, 1E-122, 1E-123, 1E-124, 1E-125, 1E-126, 1E-127, 1E-128, 1E-129, 1E-130, 1E-131, 1E-132, 1E-133, 1E-134, 1E-135, 1E-136, 1E-137, 1E-138, 1E-139, 1E-140, 1E-141, 1E-142, 1E-143, 1E-144, 1E-145, 1E-146, 1E-147, 1E-148, 1E-149, 1E-150, 1E-151, 1E-152, 1E-153, 1E-154, 1E-155, 1E-156, 1E-157, 1E-158, 1E-159, 1E-160, 1E-161, 1E-162, 1E-163, 1E-164, 1E-165, 1E-166, 1E-167, 1E-168, 1E-169, 1E-170, 1E-171, 1E-172, 1E-173, 1E-174, 1E-175, 1E-176, 1E-177, 1E-178, 1E-179, 1E-180, 1E-181, 1E-182, 1E-183, 1E-184, 1E-185, 1E-186, 1E-187, 1E-188, 1E-189, 1E-190, 1E-191, 1E-192, 1E-193, 1E-194, 1E-195, 1E-196, 1E-197, 1E-198, 1E-199,\n            1E-200, 1E-201, 1E-202, 1E-203, 1E-204, 1E-205, 1E-206, 1E-207, 1E-208, 1E-209, 1E-210, 1E-211, 1E-212, 1E-213, 1E-214, 1E-215, 1E-216, 1E-217, 1E-218, 1E-219, 1E-220, 1E-221, 1E-222, 1E-223, 1E-224, 1E-225, 1E-226, 1E-227, 1E-228, 1E-229, 1E-230, 1E-231, 1E-232, 1E-233, 1E-234, 1E-235, 1E-236, 1E-237, 1E-238, 1E-239, 1E-240, 1E-241, 1E-242, 1E-243, 1E-244, 1E-245, 1E-246, 1E-247, 1E-248, 1E-249, 1E-250, 1E-251, 1E-252, 1E-253, 1E-254, 1E-255, 1E-256, 1E-257, 1E-258, 1E-259, 1E-260, 1E-261, 1E-262, 1E-263, 1E-264, 1E-265, 1E-266, 1E-267, 1E-268, 1E-269, 1E-270, 1E-271, 1E-272, 1E-273, 1E-274, 1E-275, 1E-276, 1E-277, 1E-278, 1E-279, 1E-280, 1E-281, 1E-282, 1E-283, 1E-284, 1E-285, 1E-286, 1E-287, 1E-288, 1E-289, 1E-290, 1E-291, 1E-292, 1E-293, 1E-294, 1E-295, 1E-296, 1E-297, 1E-298, 1E-299,\n            1E-300, 1E-301, 1E-302, 1E-303, 1E-304, 1E-305, 1E-306, 1E-307, 1E-308, 1E-309, 1E-310, 1E-311, 1E-312, 1E-313, 1E-314, 1E-315, 1E-316, 1E-317, 1E-318, 1E-319, 1E-320, 1E-321, 1E-322, 1E-323, 1E-324];\n        /**\n         * Returns powers of 10.\n         * Unlike the Math.pow this function produces no decimal garbage.\n         * @param exp Exponent.\n         */\n        function pow10(exp) {\n            debug.assertValue(exp, \"exp\");\n            // Positive & zero\n            if (exp >= 0) {\n                if (exp < Double.POSITIVE_POWERS.length) {\n                    return Double.POSITIVE_POWERS[exp];\n                }\n                else {\n                    return Infinity;\n                }\n            }\n            // Negative\n            exp = -exp;\n            if (exp > 0 && exp < Double.NEGATIVE_POWERS.length) {\n                return Double.NEGATIVE_POWERS[exp];\n            }\n            else {\n                return 0;\n            }\n        }\n        Double.pow10 = pow10;\n        /**\n         * Returns the 10 base logarithm of the number.\n         * Unlike Math.log function this produces integer results with no decimal garbage.\n         * @param val Positive value or zero.\n         */\n        function log10(val) {\n            debug.assert(val >= 0, \"val\");\n            // Fast Log10() algorithm \n            if (val > 1 && val < 1E16) {\n                if (val < 1E8) {\n                    if (val < 1E4) {\n                        if (val < 1E2) {\n                            if (val < 1E1) {\n                                return 0;\n                            }\n                            else {\n                                return 1;\n                            }\n                        }\n                        else {\n                            if (val < 1E3) {\n                                return 2;\n                            }\n                            else {\n                                return 3;\n                            }\n                        }\n                    }\n                    else {\n                        if (val < 1E6) {\n                            if (val < 1E5) {\n                                return 4;\n                            }\n                            else {\n                                return 5;\n                            }\n                        }\n                        else {\n                            if (val < 1E7) {\n                                return 6;\n                            }\n                            else {\n                                return 7;\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (val < 1E12) {\n                        if (val < 1E10) {\n                            if (val < 1E9) {\n                                return 8;\n                            }\n                            else {\n                                return 9;\n                            }\n                        }\n                        else {\n                            if (val < 1E11) {\n                                return 10;\n                            }\n                            else {\n                                return 11;\n                            }\n                        }\n                    }\n                    else {\n                        if (val < 1E14) {\n                            if (val < 1E13) {\n                                return 12;\n                            }\n                            else {\n                                return 13;\n                            }\n                        }\n                        else {\n                            if (val < 1E15) {\n                                return 14;\n                            }\n                            else {\n                                return 15;\n                            }\n                        }\n                    }\n                }\n            }\n            if (val > 1E-16 && val < 1) {\n                if (val < 1E-8) {\n                    if (val < 1E-12) {\n                        if (val < 1E-14) {\n                            if (val < 1E-15) {\n                                return -16;\n                            }\n                            else {\n                                return -15;\n                            }\n                        }\n                        else {\n                            if (val < 1E-13) {\n                                return -14;\n                            }\n                            else {\n                                return -13;\n                            }\n                        }\n                    }\n                    else {\n                        if (val < 1E-10) {\n                            if (val < 1E-11) {\n                                return -12;\n                            }\n                            else {\n                                return -11;\n                            }\n                        }\n                        else {\n                            if (val < 1E-9) {\n                                return -10;\n                            }\n                            else {\n                                return -9;\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (val < 1E-4) {\n                        if (val < 1E-6) {\n                            if (val < 1E-7) {\n                                return -8;\n                            }\n                            else {\n                                return -7;\n                            }\n                        }\n                        else {\n                            if (val < 1E-5) {\n                                return -6;\n                            }\n                            else {\n                                return -5;\n                            }\n                        }\n                    }\n                    else {\n                        if (val < 1E-2) {\n                            if (val < 1E-3) {\n                                return -4;\n                            }\n                            else {\n                                return -3;\n                            }\n                        }\n                        else {\n                            if (val < 1E-1) {\n                                return -2;\n                            }\n                            else {\n                                return -1;\n                            }\n                        }\n                    }\n                }\n            }\n            // JS Math provides only natural log function so we need to calc the 10 base logarithm:\n            // logb(x) = logk(x)/logk(b); \n            var log10 = Math.log(val) / Double.LOG_E_10;\n            return Double.floorWithPrecision(log10);\n        }\n        Double.log10 = log10;\n        /**\n         * Returns a power of 10 representing precision of the number based on the number of meaningful decimal digits.\n         * For example the precision of 56,263.3767 with the 6 meaningful decimal digit is 0.1.\n         * @param x Value.\n         * @param decimalDigits How many decimal digits are meaningfull.\n         */\n        function getPrecision(x, decimalDigits) {\n            if (decimalDigits === undefined) {\n                decimalDigits = Double.DEFAULT_PRECISION_IN_DECIMAL_DIGITS;\n            }\n            else {\n                debug.assert(decimalDigits >= 0, \"decimalDigits\");\n            }\n            if (!x) {\n                return undefined;\n            }\n            var exp = Double.log10(Math.abs(x));\n            if (exp < Double.MIN_EXP) {\n                return 0;\n            }\n            var precisionExp = Math.max(exp - decimalDigits, -Double.NEGATIVE_POWERS.length + 1);\n            return Double.pow10(precisionExp);\n        }\n        Double.getPrecision = getPrecision;\n        /**\n         * Checks if a delta between 2 numbers is less than provided precision.\n         * @param x One value.\n         * @param y Another value.\n         * @param precision Precision value.\n         */\n        function equalWithPrecision(x, y, precision) {\n            precision = applyDefault(precision, Double.DEFAULT_PRECISION);\n            debug.assert(precision >= 0, \"precision\");\n            return x === y || Math.abs(x - y) < precision;\n        }\n        Double.equalWithPrecision = equalWithPrecision;\n        /**\n         * Checks if a first value is less than another taking\n         * into account the loose precision based equality.\n         * @param x One value.\n         * @param y Another value.\n         * @param precision Precision value.\n         */\n        function lessWithPrecision(x, y, precision) {\n            precision = applyDefault(precision, Double.DEFAULT_PRECISION);\n            debug.assert(precision >= 0, \"precision\");\n            return x < y && Math.abs(x - y) > precision;\n        }\n        Double.lessWithPrecision = lessWithPrecision;\n        /**\n         * Checks if a first value is less or equal than another taking\n         * into account the loose precision based equality.\n         * @param x One value.\n         * @param y Another value.\n         * @param precision Precision value.\n         */\n        function lessOrEqualWithPrecision(x, y, precision) {\n            precision = applyDefault(precision, Double.DEFAULT_PRECISION);\n            debug.assert(precision >= 0, \"precision\");\n            return x < y || Math.abs(x - y) < precision;\n        }\n        Double.lessOrEqualWithPrecision = lessOrEqualWithPrecision;\n        /**\n         * Checks if a first value is greater than another taking\n         * into account the loose precision based equality.\n         * @param x One value.\n         * @param y Another value.\n         * @param precision Precision value.\n         */\n        function greaterWithPrecision(x, y, precision) {\n            precision = applyDefault(precision, Double.DEFAULT_PRECISION);\n            debug.assert(precision >= 0, \"precision\");\n            return x > y && Math.abs(x - y) > precision;\n        }\n        Double.greaterWithPrecision = greaterWithPrecision;\n        /**\n         * Checks if a first value is greater or equal to another taking\n         * into account the loose precision based equality.\n         * @param x One value.\n         * @param y Another value.\n         * @param precision Precision value.\n         */\n        function greaterOrEqualWithPrecision(x, y, precision) {\n            precision = applyDefault(precision, Double.DEFAULT_PRECISION);\n            debug.assert(precision >= 0, \"precision\");\n            return x > y || Math.abs(x - y) < precision;\n        }\n        Double.greaterOrEqualWithPrecision = greaterOrEqualWithPrecision;\n        /**\n         * Floors the number unless it's withing the precision distance from the higher int.\n         * @param x One value.\n         * @param precision Precision value.\n         */\n        function floorWithPrecision(x, precision) {\n            precision = applyDefault(precision, Double.DEFAULT_PRECISION);\n            debug.assert(precision >= 0, \"precision\");\n            var roundX = Math.round(x);\n            if (Math.abs(x - roundX) < precision) {\n                return roundX;\n            }\n            else {\n                return Math.floor(x);\n            }\n        }\n        Double.floorWithPrecision = floorWithPrecision;\n        /**\n         * Ceils the number unless it's withing the precision distance from the lower int.\n         * @param x One value.\n         * @param precision Precision value.\n         */\n        function ceilWithPrecision(x, precision) {\n            precision = applyDefault(precision, Double.DEFAULT_PRECISION);\n            debug.assert(precision >= 0, \"precision\");\n            var roundX = Math.round(x);\n            if (Math.abs(x - roundX) < precision) {\n                return roundX;\n            }\n            else {\n                return Math.ceil(x);\n            }\n        }\n        Double.ceilWithPrecision = ceilWithPrecision;\n        /**\n         * Floors the number to the provided precision.\n         * For example 234,578 floored to 1,000 precision is 234,000.\n         * @param x One value.\n         * @param precision Precision value.\n         */\n        function floorToPrecision(x, precision) {\n            precision = applyDefault(precision, Double.DEFAULT_PRECISION);\n            debug.assert(precision >= 0, \"precision\");\n            if (precision === 0 || x === 0) {\n                return x;\n            }\n            //Precision must be a Power of 10\n            return Math.floor(x / precision) * precision;\n        }\n        Double.floorToPrecision = floorToPrecision;\n        /**\n         * Ceils the number to the provided precision.\n         * For example 234,578 floored to 1,000 precision is 235,000.\n         * @param x One value.\n         * @param precision Precision value.\n         */\n        function ceilToPrecision(x, precision) {\n            precision = applyDefault(precision, Double.DEFAULT_PRECISION);\n            debug.assert(precision >= 0, \"precision\");\n            if (precision === 0 || x === 0) {\n                return x;\n            }\n            //Precision must be a Power of 10\n            return Math.ceil(x / precision) * precision;\n        }\n        Double.ceilToPrecision = ceilToPrecision;\n        /**\n         * Rounds the number to the provided precision.\n         * For example 234,578 floored to 1,000 precision is 235,000.\n         * @param x One value.\n         * @param precision Precision value.\n         */\n        function roundToPrecision(x, precision) {\n            precision = applyDefault(precision, Double.DEFAULT_PRECISION);\n            debug.assert(precision >= 0, \"precision\");\n            if (precision === 0 || x === 0) {\n                return x;\n            }\n            //Precision must be a Power of 10\n            var result = Math.round(x / precision) * precision;\n            var decimalDigits = Math.round(Double.log10(Math.abs(x)) - Double.log10(precision)) + 1;\n            if (decimalDigits > 0 && decimalDigits < 16) {\n                result = parseFloat(result.toPrecision(decimalDigits));\n            }\n            return result;\n        }\n        Double.roundToPrecision = roundToPrecision;\n        /**\n         * Returns the value making sure that it's restricted to the provided range.\n         * @param x One value.\n         * @param min Range min boundary.\n         * @param max Range max boundary.\n         */\n        function ensureInRange(x, min, max) {\n            debug.assert(min <= max, \"min must be less or equal to max\");\n            if (x === undefined || x === null) {\n                return x;\n            }\n            if (x < min) {\n                return min;\n            }\n            if (x > max) {\n                return max;\n            }\n            return x;\n        }\n        Double.ensureInRange = ensureInRange;\n        /**\n         * Rounds the value - this method is actually faster than Math.round - used in the graphics utils.\n         * @param x Value to round.\n         */\n        function round(x) {\n            debug.assert(x >= 0, \"x must be greater or equal to 0\");\n            return (0.5 + x) << 0;\n        }\n        Double.round = round;\n        /**\n         * Projects the value from the source range into the target range.\n         * @param value Value to project.\n         * @param fromMin Minimum of the source range.\n         * @param toMin Minimum of the target range.\n         * @param toMax Maximum of the target range.\n         */\n        function project(value, fromMin, fromSize, toMin, toSize) {\n            if (fromSize === 0 || toSize === 0) {\n                if (fromMin <= value && value <= fromMin + fromSize) {\n                    return toMin;\n                }\n                else {\n                    return NaN;\n                }\n            }\n            var relativeX = (value - fromMin) / fromSize;\n            var projectedX = toMin + relativeX * toSize;\n            return projectedX;\n        }\n        Double.project = project;\n        /**\n         * Removes decimal noise.\n         * @param value Value to be processed.\n         */\n        function removeDecimalNoise(value) {\n            return roundToPrecision(value, getPrecision(value));\n        }\n        Double.removeDecimalNoise = removeDecimalNoise;\n        /**\n         * Checks whether the number is integer.\n         * @param value Value to be checked.\n         */\n        function isInteger(value) {\n            return value !== null && value % 1 === 0;\n        }\n        Double.isInteger = isInteger;\n        /**\n         * Dividing by increment will give us count of increments\n         * Round out the rough edges into even integer\n         * Multiply back by increment to get rounded value\n         * e.g. Rounder.toIncrement(0.647291, 0.05) => 0.65\n         * @param value - value to round to nearest increment\n         * @param increment - smallest increment to round toward\n         */\n        function toIncrement(value, increment) {\n            return Math.round(value / increment) * increment;\n        }\n        Double.toIncrement = toIncrement;\n    })(Double = powerbi.Double || (powerbi.Double = {}));\n    function applyDefault(value, defaultValue) {\n        return value !== undefined ? value : defaultValue;\n    }\n})(powerbi || (powerbi = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar jsCommon;\n(function (jsCommon) {\n    var Double = powerbi.Double;\n    var Color;\n    (function (Color) {\n        function rotate(rgbString, rotateFactor) {\n            if (rotateFactor === 0)\n                return rgbString;\n            var originalRgb = parseColorString(rgbString);\n            var originalHsv = rgbToHsv(originalRgb);\n            var rotatedHsv = rotateHsv(originalHsv, rotateFactor);\n            var rotatedRgb = hsvToRgb(rotatedHsv);\n            return hexString(rotatedRgb);\n        }\n        Color.rotate = rotate;\n        function normalizeToHexString(color) {\n            var rgb = parseColorString(color);\n            return hexString(rgb);\n        }\n        Color.normalizeToHexString = normalizeToHexString;\n        function parseColorString(color) {\n            debug.assertValue(color, 'color');\n            if (color.indexOf('#') >= 0) {\n                if (color.length === 7) {\n                    // #RRGGBB\n                    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(color);\n                    if (result == null || result.length < 4)\n                        return;\n                    return {\n                        R: parseInt(result[1], 16),\n                        G: parseInt(result[2], 16),\n                        B: parseInt(result[3], 16),\n                    };\n                }\n                else if (color.length === 4) {\n                    // #RGB\n                    var result = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i.exec(color);\n                    if (result == null || result.length < 4)\n                        return;\n                    return {\n                        R: parseInt(result[1] + result[1], 16),\n                        G: parseInt(result[2] + result[2], 16),\n                        B: parseInt(result[3] + result[3], 16),\n                    };\n                }\n            }\n            else if (color.indexOf('rgb(') >= 0) {\n                // rgb(R, G, B)\n                var result = /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/.exec(color);\n                if (result == null || result.length < 4)\n                    return;\n                return {\n                    R: parseInt(result[1], 10),\n                    G: parseInt(result[2], 10),\n                    B: parseInt(result[3], 10),\n                };\n            }\n            else if (color.indexOf('rgba(') >= 0) {\n                // rgba(R, G, B, A)\n                var result = /^rgba\\((\\d+),\\s*(\\d+),\\s*(\\d+),\\s*(\\d*(?:\\.\\d+)?)\\)$/.exec(color);\n                if (result == null || result.length < 5)\n                    return;\n                return {\n                    R: parseInt(result[1], 10),\n                    G: parseInt(result[2], 10),\n                    B: parseInt(result[3], 10),\n                    A: parseFloat(result[4]),\n                };\n            }\n        }\n        Color.parseColorString = parseColorString;\n        function rgbToHsv(rgbColor) {\n            var s, h;\n            var r = rgbColor.R / 255, g = rgbColor.G / 255, b = rgbColor.B / 255;\n            var min = Math.min(r, Math.min(g, b));\n            var max = Math.max(r, Math.max(g, b));\n            var v = max;\n            var delta = max - min;\n            if (max === 0 || delta === 0) {\n                // R, G, and B must be 0.0, or all the same.\n                // In this case, S is 0.0, and H is undefined.\n                // Using H = 0.0 is as good as any...\n                s = 0;\n                h = 0;\n            }\n            else {\n                s = delta / max;\n                if (r === max) {\n                    // Between Yellow and Magenta\n                    h = (g - b) / delta;\n                }\n                else if (g === max) {\n                    // Between Cyan and Yellow\n                    h = 2 + (b - r) / delta;\n                }\n                else {\n                    // Between Magenta and Cyan\n                    h = 4 + (r - g) / delta;\n                }\n            }\n            // Scale h to be between 0.0 and 1.\n            // This may require adding 1, if the value\n            // is negative.\n            h /= 6;\n            if (h < 0) {\n                h += 1;\n            }\n            return {\n                H: h,\n                S: s,\n                V: v,\n            };\n        }\n        function hsvToRgb(hsvColor) {\n            var r, g, b;\n            var h = hsvColor.H, s = hsvColor.S, v = hsvColor.V;\n            if (s === 0) {\n                // If s is 0, all colors are the same.\n                // This is some flavor of gray.\n                r = v;\n                g = v;\n                b = v;\n            }\n            else {\n                var p, q, t, fractionalSector, sectorNumber, sectorPos;\n                // The color wheel consists of 6 sectors.\n                // Figure out which sector you//re in.\n                sectorPos = h * 6;\n                sectorNumber = Math.floor(sectorPos);\n                // get the fractional part of the sector.\n                // That is, how many degrees into the sector\n                // are you?\n                fractionalSector = sectorPos - sectorNumber;\n                // Calculate values for the three axes\n                // of the color.\n                p = v * (1.0 - s);\n                q = v * (1.0 - (s * fractionalSector));\n                t = v * (1.0 - (s * (1 - fractionalSector)));\n                // Assign the fractional colors to r, g, and b\n                // based on the sector the angle is in.\n                switch (sectorNumber) {\n                    case 0:\n                        r = v;\n                        g = t;\n                        b = p;\n                        break;\n                    case 1:\n                        r = q;\n                        g = v;\n                        b = p;\n                        break;\n                    case 2:\n                        r = p;\n                        g = v;\n                        b = t;\n                        break;\n                    case 3:\n                        r = p;\n                        g = q;\n                        b = v;\n                        break;\n                    case 4:\n                        r = t;\n                        g = p;\n                        b = v;\n                        break;\n                    case 5:\n                        r = v;\n                        g = p;\n                        b = q;\n                        break;\n                }\n            }\n            return {\n                R: Math.floor(r * 255),\n                G: Math.floor(g * 255),\n                B: Math.floor(b * 255),\n            };\n        }\n        function rotateHsv(hsvColor, rotateFactor) {\n            var newH = hsvColor.H + rotateFactor;\n            return {\n                H: newH > 1 ? newH - 1 : newH,\n                S: hsvColor.S,\n                V: hsvColor.V,\n            };\n        }\n        function darken(color, diff) {\n            var flooredNumber = Math.floor(diff);\n            return {\n                R: Math.max(0, color.R - flooredNumber),\n                G: Math.max(0, color.G - flooredNumber),\n                B: Math.max(0, color.B - flooredNumber),\n            };\n        }\n        Color.darken = darken;\n        function rgbString(color) {\n            if (color.A == null)\n                return \"rgb(\" + color.R + \",\" + color.G + \",\" + color.B + \")\";\n            return \"rgba(\" + color.R + \",\" + color.G + \",\" + color.B + \",\" + color.A + \")\";\n        }\n        Color.rgbString = rgbString;\n        function hexString(color) {\n            return \"#\" + componentToHex(color.R) + componentToHex(color.G) + componentToHex(color.B);\n        }\n        Color.hexString = hexString;\n        function componentToHex(hexComponent) {\n            var clamped = Double.ensureInRange(hexComponent, 0, 255);\n            var hex = clamped.toString(16).toUpperCase();\n            return hex.length === 1 ? \"0\" + hex : hex;\n        }\n    })(Color = jsCommon.Color || (jsCommon.Color = {}));\n})(jsCommon || (jsCommon = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar jsCommon;\n(function (jsCommon) {\n    /**\n     * CSS constants.\n     */\n    var CssConstants;\n    (function (CssConstants) {\n        function createClassAndSelector(className) {\n            return {\n                class: className,\n                selector: '.' + className,\n            };\n        }\n        CssConstants.createClassAndSelector = createClassAndSelector;\n        CssConstants.styleAttribute = 'style';\n        CssConstants.pixelUnits = 'px';\n        CssConstants.heightProperty = 'height';\n        CssConstants.widthProperty = 'width';\n        CssConstants.topProperty = 'top';\n        CssConstants.bottomProperty = 'bottom';\n        CssConstants.leftProperty = 'left';\n        CssConstants.rightProperty = 'right';\n        CssConstants.marginTopProperty = 'margin-top';\n        CssConstants.marginLeftProperty = 'margin-left';\n        CssConstants.displayProperty = 'display';\n        CssConstants.backgroundProperty = 'background';\n        CssConstants.backgroundColorProperty = 'background-color';\n        CssConstants.backgroundRepeatProperty = 'background-repeat';\n        CssConstants.backgroundSizeProperty = 'background-size';\n        CssConstants.backgroundImageProperty = 'background-image';\n        CssConstants.textShadowProperty = 'text-shadow';\n        CssConstants.textAlignProperty = 'text-align';\n        CssConstants.borderTopWidthProperty = 'border-top-width';\n        CssConstants.borderBottomWidthProperty = 'border-bottom-width';\n        CssConstants.borderLeftWidthProperty = 'border-left-width';\n        CssConstants.borderRightWidthProperty = 'border-right-width';\n        CssConstants.fontSizeProperty = 'font-size';\n        CssConstants.fontWeightProperty = 'font-weight';\n        CssConstants.colorProperty = 'color';\n        CssConstants.opacityProperty = 'opacity';\n        CssConstants.paddingLeftProperty = 'padding-left';\n        CssConstants.paddingRightProperty = 'padding-right';\n        CssConstants.positionProperty = 'position';\n        CssConstants.maxWidthProperty = 'max-width';\n        CssConstants.minWidthProperty = 'min-width';\n        CssConstants.overflowProperty = 'overflow';\n        CssConstants.overflowXProperty = 'overflow-x';\n        CssConstants.overflowYProperty = 'overflow-y';\n        CssConstants.transformProperty = 'transform';\n        CssConstants.webkitTransformProperty = '-webkit-transform';\n        CssConstants.cursorProperty = 'cursor';\n        CssConstants.visibilityProperty = 'visibility';\n        CssConstants.absoluteValue = 'absolute';\n        CssConstants.zeroPixelValue = '0px';\n        CssConstants.autoValue = 'auto';\n        CssConstants.hiddenValue = 'hidden';\n        CssConstants.noneValue = 'none';\n        CssConstants.blockValue = 'block';\n        CssConstants.inlineBlockValue = 'inline-block';\n        CssConstants.transparentValue = 'transparent';\n        CssConstants.boldValue = 'bold';\n        CssConstants.visibleValue = 'visible';\n        CssConstants.tableRowValue = 'table-row';\n        CssConstants.coverValue = 'cover';\n        CssConstants.pointerValue = 'pointer';\n        CssConstants.scrollValue = 'scroll';\n    })(CssConstants = jsCommon.CssConstants || (jsCommon.CssConstants = {}));\n})(jsCommon || (jsCommon = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n/**\n * Defines a Debug object. Calls to any functions in this object removed by the minifier.\n * The functions within this class are not minified away, so we use the preprocessor-style\n * comments to have the minifier remove those as well.\n */\n///#DEBUG\nvar debug;\n(function (debug) {\n    /**\n     * Asserts that the condition is true, fails otherwise.\n     */\n    function assert(condition, message) {\n        if (condition !== true) {\n            assertFail(message || ('condition: ' + condition));\n        }\n    }\n    debug.assert = assert;\n    /**\n     * Asserts that the value is neither null nor undefined, fails otherwise.\n     */\n    function assertValue(value, message) {\n        if (value === null || value === undefined) {\n            assertFail(message || ('condition: ' + value));\n        }\n    }\n    debug.assertValue = assertValue;\n    /**\n     * Asserts that the value is neither null nor undefined, and has a length property that returns greater than zero, fails otherwise.\n     */\n    function assertNonEmpty(value, message) {\n        if (!(value != null && value.length > 0)) {\n            assertFail(message || ('condition: ' + value));\n        }\n    }\n    debug.assertNonEmpty = assertNonEmpty;\n    /**\n     * Makes no assertion on the given value.\n     * This is documentation/placeholder that a value is possibly null or undefined (unlike assertValue).\n     */\n    function assertAnyValue(value, message) {\n    }\n    debug.assertAnyValue = assertAnyValue;\n    function assertFail(message) {\n        (debug.assertFailFunction || alert)('Debug Assert failed: ' + message);\n    }\n    debug.assertFail = assertFail;\n})(debug || (debug = {}));\n///#ENDDEBUG \n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar jsCommon;\n(function (jsCommon) {\n    var Errors;\n    (function (Errors) {\n        function infoNavAppAlreadyPresent() {\n            return {\n                name: 'infoNavAppAlreadyPresent',\n                message: 'Cannot initialize embedded scenario when the InfoNav App is already present in this context',\n                stack: getExceptionStackTrace()\n            };\n        }\n        Errors.infoNavAppAlreadyPresent = infoNavAppAlreadyPresent;\n        function invalidOperation(message) {\n            return {\n                name: 'invalidOperation',\n                message: message,\n                stack: getExceptionStackTrace()\n            };\n        }\n        Errors.invalidOperation = invalidOperation;\n        function argument(argumentName, message) {\n            return {\n                name: 'invalidArgumentError',\n                argument: argumentName,\n                message: message,\n                stack: getExceptionStackTrace()\n            };\n        }\n        Errors.argument = argument;\n        function argumentNull(argumentName) {\n            return {\n                name: 'argumentNull',\n                argument: argumentName,\n                message: 'Argument was null',\n                stack: getExceptionStackTrace()\n            };\n        }\n        Errors.argumentNull = argumentNull;\n        function argumentUndefined(argumentName) {\n            return {\n                name: 'argumentUndefined',\n                argument: argumentName,\n                message: 'Argument was undefined',\n                stack: getExceptionStackTrace()\n            };\n        }\n        Errors.argumentUndefined = argumentUndefined;\n        function argumentOutOfRange(argumentName) {\n            return {\n                name: 'argumentOutOfRange',\n                argument: argumentName,\n                message: 'Argument was out of range',\n                stack: getExceptionStackTrace()\n            };\n        }\n        Errors.argumentOutOfRange = argumentOutOfRange;\n        function pureVirtualMethodException(className, methodName) {\n            return {\n                name: 'pureVirtualMethodException',\n                message: 'This method must be overriden by the derived class:' + className + '.' + methodName,\n                stack: getExceptionStackTrace()\n            };\n        }\n        Errors.pureVirtualMethodException = pureVirtualMethodException;\n        function notImplementedException(message) {\n            return {\n                name: 'notImplementedException',\n                message: message,\n                stack: getExceptionStackTrace()\n            };\n        }\n        Errors.notImplementedException = notImplementedException;\n        function getExceptionStackTrace() {\n            return getStackTrace(/*leadingFramesToRemove*/ 2);\n        }\n    })(Errors = jsCommon.Errors || (jsCommon.Errors = {}));\n    /**\n     * Captures the stack trace, if available.\n     * It optionally takes the number of frames to remove from the stack trace.\n     * By default, it removes the last frame to consider the calling type's\n     * constructor and the temporary error used to capture the stack trace (below).\n     * More levels can be requested as needed e..g. when an error is created\n     * from a helper method. <Min requirement: IE10, Chrome, Firefox, Opera>.\n     */\n    function getStackTrace(leadingFramesToRemove) {\n        if (leadingFramesToRemove === void 0) { leadingFramesToRemove = 1; }\n        var stackTrace, stackSegments;\n        try {\n            // needs to throw for stack trace to work in IE\n            throw new Error();\n        }\n        catch (error) {\n            stackTrace = error.stack;\n            if (stackTrace != null) {\n                stackSegments = stackTrace.split('\\n');\n                stackSegments.splice(1, leadingFramesToRemove);\n                // Finally\n                stackTrace = stackSegments.join('\\n');\n            }\n        }\n        return stackTrace;\n    }\n    jsCommon.getStackTrace = getStackTrace;\n})(jsCommon || (jsCommon = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n$.fn.multiline = function (text) {\n    this.text(text);\n    this.html(this.html().replace(/\\n/g, '<br/>'));\n    return this;\n};\n$.fn.togglePanelControl = function () {\n    return this.each(function () {\n        $(this).addClass(\"ui-accordion ui-accordion-icons ui-widget ui-helper-reset\")\n            .find(\".accordionHeader\")\n            .addClass(\"ui-accordion-header ui-helper-reset ui-state-default ui-corner-top ui-corner-bottom\")\n            .hover(function () {\n            $(this).toggleClass(\"ui-state-hover\");\n        })\n            .prepend('<span class=\"ui-icon ui-icon-triangle-1-e\"></span>')\n            .click(function () {\n            $(this)\n                .toggleClass(\"ui-accordion-header-active ui-state-active ui-state-default ui-corner-bottom\")\n                .find(\"> .ui-icon\").toggleClass(\"ui-icon-triangle-1-e ui-icon-triangle-1-s\").end()\n                .next().slideToggle();\n            return false;\n        })\n            .next()\n            .addClass(\"ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom\")\n            .hide();\n    });\n};\nvar jsCommon;\n(function (jsCommon) {\n    var JQueryConstants;\n    (function (JQueryConstants) {\n        JQueryConstants.VisibleSelector = ':visible';\n    })(JQueryConstants = jsCommon.JQueryConstants || (jsCommon.JQueryConstants = {}));\n})(jsCommon || (jsCommon = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar jsCommon;\n(function (jsCommon) {\n    /**\n     * Represents a lazily instantiated value.\n     */\n    var Lazy = (function () {\n        function Lazy(factoryMethod) {\n            jsCommon.Utility.throwIfNullOrUndefined(factoryMethod, this, 'constructor', 'factoryMethod');\n            this.factoryMethod = factoryMethod;\n        }\n        Lazy.prototype.getValue = function () {\n            if (this.factoryMethod !== null) {\n                this.value = this.factoryMethod();\n                // Optimization: Release the factoryMethod, as it could be holding a large object graph.\n                this.factoryMethod = null;\n            }\n            return this.value;\n        };\n        return Lazy;\n    })();\n    jsCommon.Lazy = Lazy;\n})(jsCommon || (jsCommon = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar powerbi;\n(function (powerbi) {\n    var Prototype;\n    (function (Prototype) {\n        /**\n         * Returns a new object with the provided obj as its prototype.\n         */\n        function inherit(obj, extension) {\n            debug.assertValue(obj, 'obj');\n            function wrapCtor() { }\n            ;\n            wrapCtor.prototype = obj;\n            var inherited = new wrapCtor();\n            if (extension)\n                extension(inherited);\n            return inherited;\n        }\n        Prototype.inherit = inherit;\n        /**\n         * Returns a new object with the provided obj as its prototype\n         * if, and only if, the prototype has not been previously set\n         */\n        function inheritSingle(obj) {\n            debug.assertValue(obj, 'obj');\n            var proto = Object.getPrototypeOf(obj);\n            if (proto === Object.prototype || proto === Array.prototype)\n                obj = inherit(obj);\n            return obj;\n        }\n        Prototype.inheritSingle = inheritSingle;\n        /**\n         * Uses the provided callback function to selectively replace contents in the provided array.\n         * @return A new array with those values overriden\n         * or undefined if no overrides are necessary.\n         */\n        function overrideArray(prototype, override) {\n            if (!prototype)\n                return;\n            var overwritten;\n            for (var i = 0, len = prototype.length; i < len; i++) {\n                var value = override(prototype[i]);\n                if (value) {\n                    if (!overwritten)\n                        overwritten = inherit(prototype);\n                    overwritten[i] = value;\n                }\n            }\n            return overwritten;\n        }\n        Prototype.overrideArray = overrideArray;\n    })(Prototype = powerbi.Prototype || (powerbi.Prototype = {}));\n})(powerbi || (powerbi = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar jsCommon;\n(function (jsCommon) {\n    var Formatting;\n    (function (Formatting) {\n        var regexCache;\n        /**\n         * Translate .NET format into something supported by jQuery.Globalize.\n         */\n        function findDateFormat(value, format, cultureName) {\n            switch (format) {\n                case \"m\":\n                    // Month + day\n                    format = \"M\";\n                    break;\n                case \"O\":\n                case \"o\":\n                    // Roundtrip\n                    format = \"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'0000'\";\n                    break;\n                case \"R\":\n                case \"r\":\n                    // RFC1123 pattern - - time must be converted to UTC before formatting \n                    value = new Date(value.getUTCFullYear(), value.getUTCMonth(), value.getUTCDate(), value.getUTCHours(), value.getUTCMinutes(), value.getUTCSeconds(), value.getUTCMilliseconds());\n                    format = \"ddd, dd MMM yyyy HH':'mm':'ss 'GMT'\";\n                    break;\n                case \"s\":\n                    // Sortable - should use invariant culture\n                    format = \"S\";\n                    break;\n                case \"u\":\n                    // Universal sortable - should convert to UTC before applying the \"yyyy'-'MM'-'dd HH':'mm':'ss'Z' format.\n                    value = new Date(value.getUTCFullYear(), value.getUTCMonth(), value.getUTCDate(), value.getUTCHours(), value.getUTCMinutes(), value.getUTCSeconds(), value.getUTCMilliseconds());\n                    format = \"yyyy'-'MM'-'dd HH':'mm':'ss'Z'\";\n                    break;\n                case \"U\":\n                    // Universal full - the pattern is same as F but the time must be converted to UTC before formatting\n                    value = new Date(value.getUTCFullYear(), value.getUTCMonth(), value.getUTCDate(), value.getUTCHours(), value.getUTCMinutes(), value.getUTCSeconds(), value.getUTCMilliseconds());\n                    format = \"F\";\n                    break;\n                case \"y\":\n                case \"Y\":\n                    // Year and month\n                    switch (cultureName) {\n                        case \"default\":\n                        case \"en\":\n                        case \"en-US\":\n                            format = \"MMMM, yyyy\"; // Fix the default year-month pattern for english\n                            break;\n                        default:\n                            format = \"Y\"; // For other cultures - use the localized pattern\n                    }\n                    break;\n            }\n            return { value: value, format: format };\n        }\n        Formatting.findDateFormat = findDateFormat;\n        /**\n         * Translates unsupported .NET custom format expressions to the custom expressions supported by JQuery.Globalize.\n         */\n        function fixDateTimeFormat(format) {\n            // Fix for the \"K\" format (timezone): \n            //The js dates don't have a kind property so we'll support only local kind which is equavalent to zzz format.\n            format = format.replace(/%K/g, \"zzz\");\n            format = format.replace(/K/g, \"zzz\");\n            format = format.replace(/fffffff/g, \"fff0000\");\n            format = format.replace(/ffffff/g, \"fff000\");\n            format = format.replace(/fffff/g, \"fff00\");\n            format = format.replace(/ffff/g, \"fff0\");\n            // Fix for the 5 digit year: \"yyyyy\" format. \n            //The Globalize doesn't support dates greater than 9999 so we replace the \"yyyyy\" with \"0yyyy\".\n            format = format.replace(/yyyyy/g, \"0yyyy\");\n            // Fix for the 3 digit year: \"yyy\" format. \n            //The Globalize doesn't support this formatting so we need to replace it with the 4 digit year \"yyyy\" format.\n            format = format.replace(/(^y|^)yyy(^y|$)/g, \"yyyy\");\n            if (!regexCache) {\n                // Creating Regexes for cases \"Using single format specifier\" \n                //- http://msdn.microsoft.com/en-us/library/8kb3ddd4.aspx#UsingSingleSpecifiers\n                // This is not supported from The Globalize.\n                // The case covers all single \"%\" lead specifier (like \"%d\" but not %dd) \n                // The cases as single \"%d\" are filtered in if the bellow.\n                // (?!S) where S is the specifier make sure that we only one symbol for specifier.\n                regexCache = [\"d\", \"f\", \"F\", \"g\", \"h\", \"H\", \"K\", \"m\", \"M\", \"s\", \"t\", \"y\", \"z\", \":\", \"/\"].map(function (s) {\n                    return { r: new RegExp(\"\\%\" + s + \"(?!\" + s + \")\", \"g\"), s: s };\n                });\n            }\n            if (format.indexOf(\"%\") !== -1 && format.length > 2) {\n                for (var i = 0; i < regexCache.length; i++) {\n                    format = format.replace(regexCache[i].r, regexCache[i].s);\n                }\n            }\n            return format;\n        }\n        Formatting.fixDateTimeFormat = fixDateTimeFormat;\n    })(Formatting = jsCommon.Formatting || (jsCommon.Formatting = {}));\n})(jsCommon || (jsCommon = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar jsCommon;\n(function (jsCommon) {\n    var doc = document, headElement = doc.head, firstScriptInHeadElement = headElement.getElementsByTagName('script')[0], linkElement = doc.createElement('link'), scriptElement = doc.createElement('script'), styleSheetLoaded = [], javaScriptFilesLoaded = [], javaScriptFilesLoading = [];\n    linkElement.setAttribute('rel', 'stylesheet');\n    function requires(dependency, to) {\n        if (to === void 0) { to = $.noop; }\n        loadStyleSheets(dependency.cssFiles || []);\n        var scriptsToRun = dependency.javaScriptFilesWithCallback || [];\n        if (dependency.javaScriptFiles) {\n            for (var i = 0, len = dependency.javaScriptFiles.length; i < len; ++i) {\n                scriptsToRun.push({ javascriptFile: dependency.javaScriptFiles[i] });\n            }\n        }\n        loadJavaScriptFiles(scriptsToRun, to);\n    }\n    jsCommon.requires = requires;\n    /**\n     * Private Helpers.\n     */\n    function loadStyleSheets(hrefList) {\n        hrefList.forEach(function (href) {\n            if (styleSheetLoaded.indexOf(href) === -1) {\n                styleSheetLoaded.push(href);\n                loadStyleSheet(href);\n            }\n        });\n    }\n    function loadJavaScriptFiles(scripts, callback) {\n        var loadingCount = scripts.length, parsingCount = loadingCount, sourceCodeList = [];\n        function parseIfLoadingComplete() {\n            if (!--loadingCount) {\n                parseJavaScriptSourceCodes(scripts, sourceCodeList);\n            }\n        }\n        function makeCallbackIfParsingComplete() {\n            if (!--parsingCount) {\n                callback();\n            }\n        }\n        scripts.forEach(function (script, index) {\n            var file = script.javascriptFile;\n            if (javaScriptFilesLoaded.indexOf(file) === -1) {\n                if (file in javaScriptFilesLoading) {\n                    javaScriptFilesLoading[file].push(function () {\n                        parseIfLoadingComplete();\n                        makeCallbackIfParsingComplete();\n                    });\n                }\n                else {\n                    javaScriptFilesLoading[file] = [function () {\n                            makeCallbackIfParsingComplete();\n                        }];\n                    if (isExternalUrl(file)) {\n                        sourceCodeList[index] = script;\n                        parseIfLoadingComplete();\n                    }\n                    else {\n                        loadJavaScriptSourceCode(file, function (sourceCode) {\n                            sourceCodeList[index] = { javascriptFile: sourceCode };\n                            parseIfLoadingComplete();\n                        });\n                    }\n                }\n            }\n            else {\n                parseIfLoadingComplete();\n                makeCallbackIfParsingComplete();\n            }\n        });\n    }\n    function loadStyleSheet(href) {\n        var link = linkElement.cloneNode();\n        link.href = href;\n        if (firstScriptInHeadElement) {\n            headElement.insertBefore(link, firstScriptInHeadElement);\n        }\n        else {\n            headElement.appendChild(link);\n        }\n    }\n    function loadJavaScriptSourceCode(src, onload) {\n        webGet(src, function () {\n            onload(this.responseText);\n        });\n    }\n    function parseJavaScript(script, onComplete) {\n        if (onComplete === void 0) { onComplete = $.noop; }\n        if (!script) {\n            onComplete();\n            return;\n        }\n        var sourceCodeOrFileName = script.javascriptFile;\n        var targetCallback = onComplete;\n        if (script.onLoadCallback) {\n            var promiseAsCallback = function () {\n                script.onLoadCallback().then(onComplete);\n            };\n            targetCallback = promiseAsCallback;\n        }\n        isExternalUrl(sourceCodeOrFileName)\n            ? loadExternalJavaScriptFile(sourceCodeOrFileName, targetCallback)\n            : parseInternalJavaScriptCode(sourceCodeOrFileName, targetCallback);\n    }\n    function parseInternalJavaScriptCode(sourceCode, onComplete) {\n        if (onComplete === void 0) { onComplete = $.noop; }\n        var script;\n        if (sourceCode) {\n            script = scriptElement.cloneNode();\n            script.setAttribute('type', 'text/javascript');\n            script.innerHTML = sourceCode;\n            headElement.appendChild(script);\n        }\n        setTimeout(onComplete, 0);\n    }\n    function loadExternalJavaScriptFile(src, onload) {\n        var script;\n        if (src) {\n            script = scriptElement.cloneNode();\n            script.setAttribute('src', src);\n            script.setAttribute('charset', 'utf-8');\n            script.onload = onload;\n            headElement.appendChild(script);\n        }\n    }\n    function parseJavaScriptSourceCodes(scripts, sourceCodeList) {\n        asyncLoop(sourceCodeList, parseJavaScript, /*on all files parsed*/ function () {\n            scripts.forEach(function (script) {\n                var file = script.javascriptFile;\n                var listeners = javaScriptFilesLoading[file];\n                if (listeners) {\n                    listeners.forEach(function (listener) {\n                        listener();\n                    });\n                }\n                delete javaScriptFilesLoading[file];\n                if (javaScriptFilesLoaded.indexOf(file) === -1) {\n                    javaScriptFilesLoaded.push(file);\n                }\n            });\n        });\n    }\n    function webGet(src, onload, onerror) {\n        var xhr = new XMLHttpRequest();\n        try {\n            xhr.open('GET', src, true);\n            xhr.onload = onload;\n            xhr.onerror = onerror;\n            xhr.send(null);\n        }\n        catch (e) {\n        }\n    }\n    function isExternalUrl(url) {\n        var origin = location.protocol + '//' + location.host + '/';\n        return /^http[s]?:\\/\\/.+/i.test(url) && url.indexOf(origin) !== 0;\n    }\n    function _() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n    }\n    function asyncSteps() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (args.length === 0) {\n            return;\n        }\n        var steps = [], i = args.length;\n        while (i--) {\n            (function (j) {\n                steps[j] = function () {\n                    args[j](steps[j + 1] || _);\n                };\n            })(i);\n        }\n        steps[0]();\n    }\n    function asyncLoop(enumerable, func, callback) {\n        var steps = [], i = 0, len = enumerable.length;\n        for (; i < len - 1; i++) {\n            (function (i) {\n                steps[i] = function (next) {\n                    func(enumerable[i], next);\n                };\n            }(i));\n        }\n        steps[len - 1] = function (next) {\n            func(enumerable[len - 1], callback);\n        };\n        asyncSteps.apply(null, steps);\n    }\n})(jsCommon || (jsCommon = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar powerbi;\n(function (powerbi) {\n    function createJQueryPromiseFactory() {\n        return new JQueryPromiseFactory();\n    }\n    powerbi.createJQueryPromiseFactory = createJQueryPromiseFactory;\n    /**\n     * jQuery-based implementation of IPromiseFactory.\n     * This is useful for cases when Angular is not present, or when immediate promise resolving (not tied to Angular digest cycle) is desired.\n     */\n    var JQueryPromiseFactory = (function () {\n        function JQueryPromiseFactory() {\n        }\n        JQueryPromiseFactory.prototype.defer = function () {\n            return new JQueryDeferredWrapper($.Deferred());\n        };\n        JQueryPromiseFactory.prototype.reject = function (reason) {\n            var deferred = this.defer();\n            deferred.reject(reason);\n            return deferred.promise;\n        };\n        JQueryPromiseFactory.prototype.resolve = function (value) {\n            var deferred = this.defer();\n            deferred.resolve(value);\n            return deferred.promise;\n        };\n        JQueryPromiseFactory.prototype.all = function (promises) {\n            var unwrappedPromises = jQuery.map(promises, function (value) {\n                return value && value.promise ? value.promise : value;\n            });\n            return new JQueryPromiseWrapper($.when.apply($, unwrappedPromises));\n        };\n        JQueryPromiseFactory.prototype.when = function (value) {\n            var unwrappedPromise = value && value.promise ? value.promise : value;\n            return new JQueryPromiseWrapper($.when(unwrappedPromise));\n        };\n        return JQueryPromiseFactory;\n    })();\n    /**\n     * Implements IDeferred via a wrapped a jQuery Deferred.\n     */\n    var JQueryDeferredWrapper = (function () {\n        function JQueryDeferredWrapper(deferred) {\n            debug.assertValue(deferred, 'deferred');\n            this.deferred = deferred;\n            this.promise = new JQueryPromiseWrapper(deferred.promise());\n        }\n        JQueryDeferredWrapper.prototype.resolve = function (value) {\n            this.deferred.resolve(value);\n        };\n        JQueryDeferredWrapper.prototype.reject = function (reason) {\n            this.deferred.reject(reason);\n        };\n        return JQueryDeferredWrapper;\n    })();\n    /**\n     * Implements IDeferred via a wrapped a jQuery Promise.\n     */\n    var JQueryPromiseWrapper = (function () {\n        function JQueryPromiseWrapper(promise) {\n            debug.assertValue(promise, 'promise');\n            this.promise = promise;\n        }\n        JQueryPromiseWrapper.prototype.then = function (a, b) {\n            return new JQueryPromiseWrapper(this.promise.then(JQueryPromiseWrapper.wrapCallback(a), JQueryPromiseWrapper.wrapCallback(b)));\n        };\n        JQueryPromiseWrapper.prototype.catch = function (callback) {\n            return this.then(null, callback);\n        };\n        JQueryPromiseWrapper.prototype.finally = function (callback) {\n            this.promise.always(JQueryPromiseWrapper.wrapCallback(callback));\n            return this;\n        };\n        /**\n         * Wraps a callback, which may return a IPromise.\n         */\n        JQueryPromiseWrapper.wrapCallback = function (callback) {\n            if (callback)\n                return function (arg) {\n                    var value = callback(arg);\n                    // If the callback returns a Promise, unwrap that to allow jQuery to chain.\n                    if (value instanceof JQueryPromiseWrapper)\n                        return value.promise;\n                    return value;\n                };\n            return callback;\n        };\n        return JQueryPromiseWrapper;\n    })();\n})(powerbi || (powerbi = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar powerbi;\n(function (powerbi) {\n    var LocalStorageService = (function () {\n        function LocalStorageService() {\n        }\n        LocalStorageService.prototype.getData = function (key) {\n            try {\n                if (localStorage) {\n                    var value = localStorage[key];\n                    if (value) {\n                        return JSON.parse(value);\n                    }\n                }\n            }\n            catch (exception) { }\n            return null;\n        };\n        LocalStorageService.prototype.setData = function (key, data) {\n            try {\n                if (localStorage) {\n                    localStorage[key] = JSON.stringify(data);\n                }\n            }\n            catch (e) { }\n        };\n        return LocalStorageService;\n    })();\n    var EphemeralStorageService = (function () {\n        function EphemeralStorageService(clearCacheInterval) {\n            this.cache = {};\n            this.clearCacheInterval = (clearCacheInterval != null)\n                ? clearCacheInterval\n                : EphemeralStorageService.defaultClearCacheInterval;\n            this.clearCache();\n        }\n        EphemeralStorageService.prototype.getData = function (key) {\n            return this.cache[key];\n        };\n        EphemeralStorageService.prototype.setData = function (key, data) {\n            var _this = this;\n            this.cache[key] = data;\n            if (this.clearCacheTimerId == null) {\n                this.clearCacheTimerId = setTimeout(function () { return _this.clearCache(); }, this.clearCacheInterval);\n            }\n        };\n        EphemeralStorageService.prototype.clearCache = function () {\n            this.cache = {};\n            this.clearCacheTimerId = undefined;\n        };\n        EphemeralStorageService.defaultClearCacheInterval = (1000 * 60 * 60 * 24); // 1 day\n        return EphemeralStorageService;\n    })();\n    powerbi.EphemeralStorageService = EphemeralStorageService;\n    powerbi.localStorageService = new LocalStorageService();\n    powerbi.ephemeralStorageService = new EphemeralStorageService();\n})(powerbi || (powerbi = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar jsCommon;\n(function (jsCommon) {\n    var WordBreaker;\n    (function (WordBreaker) {\n        var SPACE = ' ';\n        var BREAKERS_REGEX = /[\\s\\n]+/g;\n        function search(index, content, backward) {\n            if (backward) {\n                for (var i = index - 1; i > -1; i--) {\n                    if (hasBreakers(content[i]))\n                        return i + 1;\n                }\n            }\n            else {\n                for (var i = index, ilen = content.length; i < ilen; i++) {\n                    if (hasBreakers(content[i]))\n                        return i;\n                }\n            }\n            return backward ? 0 : content.length;\n        }\n        /**\n         * Find the word nearest the cursor specified within content\n         * @param index - point within content to search forward/backward from\n         * @param content - string to search\n        */\n        function find(index, content) {\n            debug.assert(index >= 0 && index <= content.length, 'index within content string bounds');\n            var result = { start: 0, end: 0 };\n            if (content.length === 0)\n                return result;\n            result.start = search(index, content, true);\n            result.end = search(index, content, false);\n            return result;\n        }\n        WordBreaker.find = find;\n        /**\n         * Test for presence of breakers within content\n         * @param content - string to test\n        */\n        function hasBreakers(content) {\n            BREAKERS_REGEX.lastIndex = 0;\n            return BREAKERS_REGEX.test(content);\n        }\n        WordBreaker.hasBreakers = hasBreakers;\n        /**\n         * Count the number of pieces when broken by BREAKERS_REGEX\n         * ~2.7x faster than WordBreaker.split(content).length\n         * @param content - string to break and count\n        */\n        function wordCount(content) {\n            var count = 1;\n            BREAKERS_REGEX.lastIndex = 0;\n            BREAKERS_REGEX.exec(content);\n            while (BREAKERS_REGEX.lastIndex !== 0) {\n                count++;\n                BREAKERS_REGEX.exec(content);\n            }\n            return count;\n        }\n        WordBreaker.wordCount = wordCount;\n        function getMaxWordWidth(content, textWidthMeasurer, properties) {\n            var words = split(content);\n            var maxWidth = 0;\n            for (var _i = 0; _i < words.length; _i++) {\n                var w = words[_i];\n                properties.text = w;\n                maxWidth = Math.max(maxWidth, textWidthMeasurer(properties));\n            }\n            return maxWidth;\n        }\n        WordBreaker.getMaxWordWidth = getMaxWordWidth;\n        function split(content) {\n            return content.split(BREAKERS_REGEX);\n        }\n        function getWidth(content, properties, textWidthMeasurer) {\n            properties.text = content;\n            return textWidthMeasurer(properties);\n        }\n        function truncate(content, properties, truncator, maxWidth) {\n            properties.text = content;\n            return truncator(properties, maxWidth);\n        }\n        /**\n         * Split content by breakers (words) and greedy fit as many words\n         * into each index in the result based on max width and number of lines\n         * e.g. Each index in result corresponds to a line of content\n         *      when used by AxisHelper.LabelLayoutStrategy.wordBreak\n         * @param content - string to split\n         * @param properties - text properties to be used by @param:textWidthMeasurer\n         * @param textWidthMeasurer - function to calculate width of given text content\n         * @param maxWidth - maximum allowed width of text content in each result\n         * @param maxNumLines - maximum number of results we will allow, valid values must be greater than 0\n         * @param truncator - (optional) if specified, used as a function to truncate content to a given width\n        */\n        function splitByWidth(content, properties, textWidthMeasurer, maxWidth, maxNumLines, truncator) {\n            // Default truncator returns string as-is\n            truncator = truncator ? truncator : function (properties, maxWidth) { return properties.text; };\n            var result = [];\n            var words = split(content);\n            var usedWidth = 0;\n            var wordsInLine = [];\n            for (var _i = 0; _i < words.length; _i++) {\n                var word = words[_i];\n                // Last line? Just add whatever is left\n                if ((maxNumLines > 0) && (result.length >= maxNumLines - 1)) {\n                    wordsInLine.push(word);\n                    continue;\n                }\n                // Determine width if we add this word\n                // Account for SPACE we will add when joining...\n                var wordWidth = wordsInLine.length === 0\n                    ? getWidth(word, properties, textWidthMeasurer)\n                    : getWidth(SPACE + word, properties, textWidthMeasurer);\n                // If width would exceed max width,\n                // then push used words and start new split result\n                if (usedWidth + wordWidth > maxWidth) {\n                    // Word alone exceeds max width, just add it.\n                    if (wordsInLine.length === 0) {\n                        result.push(truncate(word, properties, truncator, maxWidth));\n                        usedWidth = 0;\n                        wordsInLine = [];\n                        continue;\n                    }\n                    result.push(truncate(wordsInLine.join(SPACE), properties, truncator, maxWidth));\n                    usedWidth = 0;\n                    wordsInLine = [];\n                }\n                // ...otherwise, add word and continue\n                wordsInLine.push(word);\n                usedWidth += wordWidth;\n            }\n            // Push remaining words onto result\n            result.push(truncate(wordsInLine.join(SPACE), properties, truncator, maxWidth));\n            return result;\n        }\n        WordBreaker.splitByWidth = splitByWidth;\n    })(WordBreaker = jsCommon.WordBreaker || (jsCommon.WordBreaker = {}));\n})(jsCommon || (jsCommon = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar powerbi;\n(function (powerbi) {\n    var TextMeasurementService;\n    (function (TextMeasurementService) {\n        var ellipsis = '…';\n        var OverflowingText = jsCommon.CssConstants.createClassAndSelector('overflowingText');\n        var spanElement;\n        var svgTextElement;\n        var canvasCtx;\n        /**\n         * Idempotent function for adding the elements to the DOM.\n         */\n        function ensureDOM() {\n            if (spanElement)\n                return;\n            spanElement = $('<span/>');\n            $('body').append(spanElement);\n            //The style hides the svg element from the canvas, preventing canvas from scrolling down to show svg black square.\n            svgTextElement = d3.select($('body').get(0))\n                .append('svg')\n                .style({\n                'height': '0px',\n                'width': '0px',\n                'position': 'absolute'\n            })\n                .append('text');\n            canvasCtx = $('<canvas/>').get(0).getContext(\"2d\");\n        }\n        /**\n         * Removes spanElement from DOM.\n         */\n        function removeSpanElement() {\n            if (spanElement && spanElement.remove) {\n                spanElement.remove();\n            }\n            spanElement = null;\n        }\n        TextMeasurementService.removeSpanElement = removeSpanElement;\n        /**\n         * This method measures the width of the text with the given SVG text properties.\n         * @param textProperties The text properties to use for text measurement.\n         */\n        function measureSvgTextWidth(textProperties) {\n            debug.assertValue(textProperties, 'textProperties');\n            debug.assert(_.isEmpty(textProperties.fontSize) || textProperties.fontSize.indexOf(\"px\") !== -1, \"TextProperties' text size should be in px.\");\n            ensureDOM();\n            canvasCtx.font = textProperties.fontSize + ' ' + textProperties.fontFamily;\n            return canvasCtx.measureText(textProperties.text).width;\n        }\n        TextMeasurementService.measureSvgTextWidth = measureSvgTextWidth;\n        /**\n         * This method return the rect with the given SVG text properties.\n         * @param textProperties The text properties to use for text measurement.\n         */\n        function measureSvgTextRect(textProperties) {\n            debug.assertValue(textProperties, 'textProperties');\n            debug.assert(_.isEmpty(textProperties.fontSize) || textProperties.fontSize.indexOf(\"px\") !== -1, \"TextProperties' text size should be in px.\");\n            ensureDOM();\n            svgTextElement.style(null);\n            svgTextElement\n                .text(textProperties.text)\n                .attr({\n                'visibility': 'hidden',\n                'font-family': textProperties.fontFamily,\n                'font-size': textProperties.fontSize,\n                'font-weight': textProperties.fontWeight,\n                'font-style': textProperties.fontStyle,\n                'white-space': textProperties.whiteSpace || 'nowrap'\n            });\n            // We're expecting the browser to give a synchronous measurement here\n            // We're using SVGTextElement because it works across all browsers \n            return svgTextElement.node().getBBox();\n        }\n        TextMeasurementService.measureSvgTextRect = measureSvgTextRect;\n        /**\n         * This method measures the height of the text with the given SVG text properties.\n         * @param textProperties The text properties to use for text measurement.\n         */\n        function measureSvgTextHeight(textProperties) {\n            return measureSvgTextRect(textProperties).height;\n        }\n        TextMeasurementService.measureSvgTextHeight = measureSvgTextHeight;\n        /**\n         * This method returns the text Rect with the given SVG text properties.\n         * Does NOT return text width; obliterates text value\n         * @param {TextProperties} textProperties - The text properties to use for text measurement\n         */\n        function estimateSvgTextRect(textProperties) {\n            debug.assertValue(textProperties, 'textProperties');\n            debug.assert(_.isEmpty(textProperties.fontSize) || textProperties.fontSize.indexOf(\"px\") !== -1, \"TextProperties' text size should be in px.\");\n            var propertiesKey = textProperties.fontFamily + textProperties.fontSize;\n            var rect = powerbi.ephemeralStorageService.getData(propertiesKey);\n            if (rect == null) {\n                // To estimate we check the height of a particular character, once it is cached, subsequent\n                // calls should always get the height from the cache (regardless of the text).\n                var estimatedTextProperties = {\n                    fontFamily: textProperties.fontFamily,\n                    fontSize: textProperties.fontSize,\n                    text: \"M\",\n                };\n                rect = measureSvgTextRect(estimatedTextProperties);\n                // NOTE: In some cases (disconnected/hidden DOM) we may provide incorrect measurement results (zero sized bounding-box), so\n                // we only store values in the cache if we are confident they are correct.\n                if (rect.height > 0)\n                    powerbi.ephemeralStorageService.setData(propertiesKey, rect);\n            }\n            return rect;\n        }\n        /**\n         * This method returns the text Rect with the given SVG text properties.\n         * @param {TextProperties} textProperties - The text properties to use for text measurement\n         */\n        function estimateSvgTextBaselineDelta(textProperties) {\n            var rect = estimateSvgTextRect(textProperties);\n            return rect.y + rect.height;\n        }\n        TextMeasurementService.estimateSvgTextBaselineDelta = estimateSvgTextBaselineDelta;\n        /**\n         * This method estimates the height of the text with the given SVG text properties.\n         * @param {TextProperties} textProperties - The text properties to use for text measurement\n         */\n        function estimateSvgTextHeight(textProperties, tightFightForNumeric) {\n            if (tightFightForNumeric === void 0) { tightFightForNumeric = false; }\n            var height = estimateSvgTextRect(textProperties).height;\n            //TODO: replace it with new baseline calculation\n            if (tightFightForNumeric)\n                height *= 0.7;\n            return height;\n        }\n        TextMeasurementService.estimateSvgTextHeight = estimateSvgTextHeight;\n        /**\n         * This method measures the width of the svgElement.\n         * @param svgElement The SVGTextElement to be measured.\n         */\n        function measureSvgTextElementWidth(svgElement) {\n            debug.assertValue(svgElement, 'svgElement');\n            return measureSvgTextWidth(getSvgMeasurementProperties(svgElement));\n        }\n        TextMeasurementService.measureSvgTextElementWidth = measureSvgTextElementWidth;\n        /**\n         * This method fetches the text measurement properties of the given DOM element.\n         * @param element The selector for the DOM Element.\n         */\n        function getMeasurementProperties(element) {\n            debug.assertValue(element, 'element');\n            return {\n                text: element.val() || element.text(),\n                fontFamily: element.css('font-family'),\n                fontSize: element.css('font-size'),\n                fontWeight: element.css('font-weight'),\n                fontStyle: element.css('font-style'),\n                whiteSpace: element.css('white-space')\n            };\n        }\n        TextMeasurementService.getMeasurementProperties = getMeasurementProperties;\n        /**\n         * This method fetches the text measurement properties of the given SVG text element.\n         * @param svgElement The SVGTextElement to be measured.\n         */\n        function getSvgMeasurementProperties(svgElement) {\n            debug.assertValue(svgElement, 'svgElement');\n            var style = window.getComputedStyle(svgElement, null);\n            return {\n                text: svgElement.textContent,\n                fontFamily: style.fontFamily,\n                fontSize: style.fontSize,\n                fontWeight: style.fontWeight,\n                fontStyle: style.fontStyle,\n                whiteSpace: style.whiteSpace\n            };\n        }\n        TextMeasurementService.getSvgMeasurementProperties = getSvgMeasurementProperties;\n        /**\n         * This method returns the width of a div element.\n         * @param element The div element.\n         */\n        function getDivElementWidth(element) {\n            debug.assert(element.is('div'), 'Given element is not a div type. Cannot get width');\n            return getComputedStyle(element[0]).width;\n        }\n        TextMeasurementService.getDivElementWidth = getDivElementWidth;\n        /**\n         * Compares labels text size to the available size and renders ellipses when the available size is smaller.\n         * @param textProperties The text properties (including text content) to use for text measurement.\n         * @param maxWidth The maximum width available for rendering the text.\n         */\n        function getTailoredTextOrDefault(textProperties, maxWidth) {\n            debug.assertValue(textProperties, 'properties');\n            debug.assertValue(textProperties.text, 'properties.text');\n            debug.assert(_.isEmpty(textProperties.fontSize) || textProperties.fontSize.indexOf(\"px\") !== -1, \"TextProperties' text size should be in px.\");\n            ensureDOM();\n            var strLength = textProperties.text.length;\n            if (strLength === 0)\n                return textProperties.text;\n            var width = measureSvgTextWidth(textProperties);\n            if (width < maxWidth)\n                return textProperties.text;\n            // Create a copy of the textProperties so we don't modify the one that's passed in.\n            var copiedTextProperties = powerbi.Prototype.inherit(textProperties);\n            // Take the properties and apply them to svgTextElement\n            // Then, do the binary search to figure out the substring we want\n            // Set the substring on textElement argument\n            var text = copiedTextProperties.text = ellipsis + copiedTextProperties.text;\n            var min = 1;\n            var max = text.length;\n            var i = ellipsis.length;\n            while (min <= max) {\n                // num | 0 prefered to Math.floor(num) for performance benefits\n                i = (min + max) / 2 | 0;\n                copiedTextProperties.text = text.substr(0, i);\n                width = measureSvgTextWidth(copiedTextProperties);\n                if (maxWidth > width)\n                    min = i + 1;\n                else if (maxWidth < width)\n                    max = i - 1;\n                else\n                    break;\n            }\n            // Since the search algorithm almost never finds an exact match,\n            // it will pick one of the closest two, which could result in a\n            // value bigger with than 'maxWidth' thus we need to go back by \n            // one to guarantee a smaller width than 'maxWidth'.\n            copiedTextProperties.text = text.substr(0, i);\n            width = measureSvgTextWidth(copiedTextProperties);\n            if (width > maxWidth)\n                i--;\n            return text.substr(ellipsis.length, i - ellipsis.length) + ellipsis;\n        }\n        TextMeasurementService.getTailoredTextOrDefault = getTailoredTextOrDefault;\n        /**\n         * Compares labels text size to the available size and renders ellipses when the available size is smaller.\n         * @param textElement The SVGTextElement containing the text to render.\n         * @param maxWidth The maximum width available for rendering the text.\n         */\n        function svgEllipsis(textElement, maxWidth) {\n            debug.assertValue(textElement, 'textElement');\n            var properties = getSvgMeasurementProperties(textElement);\n            var originalText = properties.text;\n            var tailoredText = getTailoredTextOrDefault(properties, maxWidth);\n            if (originalText !== tailoredText) {\n                textElement.textContent = tailoredText;\n            }\n        }\n        TextMeasurementService.svgEllipsis = svgEllipsis;\n        /**\n         * Word break textContent of <text> SVG element into <tspan>s\n         * Each tspan will be the height of a single line of text\n         * @param textElement - the SVGTextElement containing the text to wrap\n         * @param maxWidth - the maximum width available\n         * @param maxHeight - the maximum height available (defaults to single line)\n         * @param linePadding - (optional) padding to add to line height\n         */\n        function wordBreak(textElement, maxWidth, maxHeight, linePadding) {\n            if (linePadding === void 0) { linePadding = 0; }\n            debug.assertValue(textElement, 'textElement');\n            var properties = getSvgMeasurementProperties(textElement);\n            var height = estimateSvgTextHeight(properties) + linePadding;\n            var maxNumLines = Math.max(1, Math.floor(maxHeight / height));\n            var node = d3.select(textElement);\n            // Save y of parent textElement to apply as first tspan dy\n            var firstDY = node.attr('y');\n            // Store and clear text content\n            var labelText = textElement.textContent;\n            textElement.textContent = null;\n            // Append a tspan for each word broken section\n            var words = jsCommon.WordBreaker.splitByWidth(labelText, properties, measureSvgTextWidth, maxWidth, maxNumLines);\n            for (var i = 0, ilen = words.length; i < ilen; i++) {\n                properties.text = words[i];\n                node\n                    .append('tspan')\n                    .attr({\n                    'x': 0,\n                    'dy': i === 0 ? firstDY : height,\n                })\n                    .text(getTailoredTextOrDefault(properties, maxWidth));\n            }\n        }\n        TextMeasurementService.wordBreak = wordBreak;\n        /**\n         * Word break textContent of span element into <span>s\n         * Each span will be the height of a single line of text\n         * @param textElement - the element containing the text to wrap\n         * @param maxWidth - the maximum width available\n         * @param maxHeight - the maximum height available (defaults to single line)\n         * @param linePadding - (optional) padding to add to line height\n         */\n        function wordBreakOverflowingText(textElement, maxWidth, maxHeight, linePadding) {\n            if (linePadding === void 0) { linePadding = 0; }\n            debug.assertValue(textElement, 'textElement');\n            var properties = getSvgMeasurementProperties(textElement);\n            var height = estimateSvgTextHeight(properties) + linePadding;\n            var maxNumLines = Math.max(1, Math.floor(maxHeight / height));\n            // Store and clear text content\n            var labelText = textElement.textContent;\n            textElement.textContent = null;\n            // Append a span for each word broken section\n            var words = jsCommon.WordBreaker.splitByWidth(labelText, properties, measureSvgTextWidth, maxWidth, maxNumLines);\n            // splitByWidth() occasionally returns unnecessary empty strings, so get rid of them.\n            // TODO: Fix splitByWidth.\n            words = _.compact(words);\n            var spanItem = d3.select(textElement)\n                .selectAll(OverflowingText.selector)\n                .data(words, function (d) { return $.inArray(d, words); });\n            spanItem\n                .enter()\n                .append(\"span\")\n                .classed(OverflowingText.class, true)\n                .text(function (d) { return d; })\n                .style(\"width\", jsCommon.PixelConverter.toString(maxWidth));\n        }\n        TextMeasurementService.wordBreakOverflowingText = wordBreakOverflowingText;\n    })(TextMeasurementService = powerbi.TextMeasurementService || (powerbi.TextMeasurementService = {}));\n})(powerbi || (powerbi = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar jsCommon;\n(function (jsCommon) {\n    /**\n     * Responsible for throttling input function.\n     */\n    var ThrottleUtility = (function () {\n        function ThrottleUtility(delay) {\n            this.timerFactory = jsCommon.TimerPromiseFactory.instance;\n            this.delay = 0;\n            if (delay) {\n                this.delay = delay;\n            }\n        }\n        ThrottleUtility.prototype.run = function (fn) {\n            var _this = this;\n            if (!this.fn) {\n                this.fn = fn;\n                this.timerFactory.create(this.delay).done(function () { return _this.timerComplete(_this.fn); });\n            }\n            else {\n                this.fn = fn;\n            }\n        };\n        /**\n         * Note: Public for testing purpose.\n         */\n        ThrottleUtility.prototype.timerComplete = function (fn) {\n            // run fn\n            fn();\n            // clear fn\n            this.fn = null;\n        };\n        return ThrottleUtility;\n    })();\n    jsCommon.ThrottleUtility = ThrottleUtility;\n})(jsCommon || (jsCommon = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar jsCommon;\n(function (jsCommon) {\n    /**\n     * Responsible for creating timer promises.\n     */\n    var TimerPromiseFactory = (function () {\n        function TimerPromiseFactory() {\n        }\n        /**\n         * {@inheritDoc}\n         */\n        TimerPromiseFactory.prototype.create = function (delayInMs) {\n            debug.assertValue(delayInMs, 'delayInMs');\n            debug.assert(delayInMs >= 0, 'delayInMs must be a positive value.');\n            var deferred = $.Deferred();\n            window.setTimeout(function () { return deferred.resolve(); }, delayInMs);\n            return deferred;\n        };\n        TimerPromiseFactory.instance = new TimerPromiseFactory();\n        return TimerPromiseFactory;\n    })();\n    jsCommon.TimerPromiseFactory = TimerPromiseFactory;\n})(jsCommon || (jsCommon = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar jsCommon;\n(function (jsCommon) {\n    /**\n     * Http Status code we are interested.\n     */\n    (function (HttpStatusCode) {\n        HttpStatusCode[HttpStatusCode[\"OK\"] = 200] = \"OK\";\n        HttpStatusCode[HttpStatusCode[\"BadRequest\"] = 400] = \"BadRequest\";\n        HttpStatusCode[HttpStatusCode[\"Unauthorized\"] = 401] = \"Unauthorized\";\n        HttpStatusCode[HttpStatusCode[\"Forbidden\"] = 403] = \"Forbidden\";\n        HttpStatusCode[HttpStatusCode[\"RequestEntityTooLarge\"] = 413] = \"RequestEntityTooLarge\";\n    })(jsCommon.HttpStatusCode || (jsCommon.HttpStatusCode = {}));\n    var HttpStatusCode = jsCommon.HttpStatusCode;\n    /**\n     * Other HTTP Constants.\n     */\n    var HttpConstants;\n    (function (HttpConstants) {\n        HttpConstants.ApplicationOctetStream = 'application/octet-stream';\n        HttpConstants.MultiPartFormData = 'multipart/form-data';\n    })(HttpConstants = jsCommon.HttpConstants || (jsCommon.HttpConstants = {}));\n    /**\n     * Extensions to String class.\n     */\n    var StringExtensions;\n    (function (StringExtensions) {\n        var HtmlTagRegex = new RegExp('[<>]', 'g');\n        function format() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            var s = args[0];\n            if (isNullOrUndefinedOrWhiteSpaceString(s))\n                return s;\n            for (var i = 0; i < args.length - 1; i++) {\n                var reg = new RegExp(\"\\\\{\" + i + \"\\\\}\", \"gm\");\n                s = s.replace(reg, args[i + 1]);\n            }\n            return s;\n        }\n        StringExtensions.format = format;\n        /**\n         * Compares two strings for equality, ignoring case.\n         */\n        function equalIgnoreCase(a, b) {\n            return StringExtensions.normalizeCase(a) === StringExtensions.normalizeCase(b);\n        }\n        StringExtensions.equalIgnoreCase = equalIgnoreCase;\n        function startsWithIgnoreCase(a, b) {\n            var normalizedSearchString = StringExtensions.normalizeCase(b);\n            return StringExtensions.normalizeCase(a).indexOf(normalizedSearchString) === 0;\n        }\n        StringExtensions.startsWithIgnoreCase = startsWithIgnoreCase;\n        function startsWith(a, b) {\n            return a.indexOf(b) === 0;\n        }\n        StringExtensions.startsWith = startsWith;\n        /** Determines whether a string contains a specified substring (while ignoring case). */\n        function containsIgnoreCase(source, substring) {\n            if (source == null)\n                return false;\n            return source.toLowerCase().indexOf(substring.toLowerCase().toString()) !== -1;\n        }\n        StringExtensions.containsIgnoreCase = containsIgnoreCase;\n        /**\n         * Normalizes case for a string.\n         * Used by equalIgnoreCase method.\n         */\n        function normalizeCase(value) {\n            Utility.throwIfNullOrUndefined(value, StringExtensions, 'normalizeCase', 'value');\n            return value.toUpperCase();\n        }\n        StringExtensions.normalizeCase = normalizeCase;\n        /**\n         * Is string null or empty or undefined?\n         * @return True if the value is null or undefined or empty string,\n         * otherwise false.\n         */\n        function isNullOrEmpty(value) {\n            return (value == null) || (value.length === 0);\n        }\n        StringExtensions.isNullOrEmpty = isNullOrEmpty;\n        /**\n         * Returns true if the string is null, undefined, empty, or only includes white spaces.\n         * @return True if the str is null, undefined, empty, or only includes white spaces,\n         * otherwise false.\n         */\n        function isNullOrUndefinedOrWhiteSpaceString(str) {\n            return StringExtensions.isNullOrEmpty(str) || StringExtensions.isNullOrEmpty(str.trim());\n        }\n        StringExtensions.isNullOrUndefinedOrWhiteSpaceString = isNullOrUndefinedOrWhiteSpaceString;\n        /**\n         * Returns a value indicating whether the str contains any whitespace.\n         */\n        function containsWhitespace(str) {\n            Utility.throwIfNullOrUndefined(str, this, 'containsWhitespace', 'str');\n            var expr = /\\s/;\n            return expr.test(str);\n        }\n        StringExtensions.containsWhitespace = containsWhitespace;\n        /**\n         * Returns a value indicating whether the str is a whitespace string.\n         */\n        function isWhitespace(str) {\n            Utility.throwIfNullOrUndefined(str, this, 'isWhitespace', 'str');\n            return str.trim() === '';\n        }\n        StringExtensions.isWhitespace = isWhitespace;\n        /**\n         * Returns the string with any trailing whitespace from str removed.\n         */\n        function trimTrailingWhitespace(str) {\n            Utility.throwIfNullOrUndefined(str, this, 'trimTrailingWhitespace', 'str');\n            return str.replace(/\\s+$/, '');\n        }\n        StringExtensions.trimTrailingWhitespace = trimTrailingWhitespace;\n        /**\n         * Returns the string with any leading and trailing whitespace from str removed.\n         */\n        function trimWhitespace(str) {\n            Utility.throwIfNullOrUndefined(str, this, 'trimWhitespace', 'str');\n            return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n        }\n        StringExtensions.trimWhitespace = trimWhitespace;\n        /**\n         * Returns length difference between the two provided strings.\n         */\n        function getLengthDifference(left, right) {\n            Utility.throwIfNullOrUndefined(left, this, 'getLengthDifference', 'left');\n            Utility.throwIfNullOrUndefined(right, this, 'getLengthDifference', 'right');\n            return Math.abs(left.length - right.length);\n        }\n        StringExtensions.getLengthDifference = getLengthDifference;\n        /**\n         * Repeat char or string several times.\n         * @param char The string to repeat.\n         * @param count How many times to repeat the string.\n         */\n        function repeat(char, count) {\n            var result = \"\";\n            for (var i = 0; i < count; i++) {\n                result += char;\n            }\n            return result;\n        }\n        StringExtensions.repeat = repeat;\n        /**\n         * Replace all the occurrences of the textToFind in the text with the textToReplace.\n         * @param text The original string.\n         * @param textToFind Text to find in the original string.\n         * @param textToReplace New text replacing the textToFind.\n         */\n        function replaceAll(text, textToFind, textToReplace) {\n            if (!textToFind)\n                return text;\n            var pattern = escapeStringForRegex(textToFind);\n            return text.replace(new RegExp(pattern, 'gi'), textToReplace);\n        }\n        StringExtensions.replaceAll = replaceAll;\n        function ensureUniqueNames(names) {\n            debug.assertValue(names, 'names');\n            var usedNames = {};\n            // Make sure we are giving fair chance for all columns to stay with their original name\n            // First we fill the used names map to contain all the original unique names from the list.\n            for (var _i = 0; _i < names.length; _i++) {\n                var name_1 = names[_i];\n                usedNames[name_1] = false;\n            }\n            var uniqueNames = [];\n            // Now we go over all names and find a unique name for each\n            for (var _a = 0; _a < names.length; _a++) {\n                var name_2 = names[_a];\n                var uniqueName = name_2;\n                // If the (original) column name is already taken lets try to find another name\n                if (usedNames[uniqueName]) {\n                    var counter = 0;\n                    // Find a name that is not already in the map\n                    while (usedNames[uniqueName] !== undefined) {\n                        uniqueName = name_2 + \".\" + (++counter);\n                    }\n                }\n                uniqueNames.push(uniqueName);\n                usedNames[uniqueName] = true;\n            }\n            return uniqueNames;\n        }\n        StringExtensions.ensureUniqueNames = ensureUniqueNames;\n        /**\n         * Returns a name that is not specified in the values.\n         */\n        function findUniqueName(usedNames, baseName) {\n            debug.assertValue(usedNames, 'usedNames');\n            debug.assertValue(baseName, 'baseName');\n            // Find a unique name\n            var i = 0, uniqueName = baseName;\n            while (usedNames[uniqueName]) {\n                uniqueName = baseName + (++i);\n            }\n            return uniqueName;\n        }\n        StringExtensions.findUniqueName = findUniqueName;\n        function constructCommaSeparatedList(list, resourceProvider, maxValue) {\n            if (!list || list.length === 0)\n                return '';\n            if (maxValue === null || maxValue === undefined)\n                maxValue = Number.MAX_VALUE;\n            var length = Math.min(maxValue, list.length);\n            var replacedList = [];\n            // Only need to replace user entries of {0} and {1} since we build the list in pairs.\n            for (var j = 0; j < 2; j++) {\n                var targetValue = '{' + j + '}';\n                var replaceValue = '_|_<' + j + '>_|_';\n                for (var i = 0; i < length; i++) {\n                    if (list[i].indexOf(targetValue) > -1) {\n                        list[i] = list[i].replace(targetValue, replaceValue);\n                        replacedList.push({ targetValue: targetValue, replaceValue: replaceValue });\n                    }\n                }\n            }\n            var commaSeparatedList = '';\n            for (var i = 0; i < length; i++) {\n                if (i === 0)\n                    commaSeparatedList = list[i];\n                else\n                    commaSeparatedList = StringExtensions.format(resourceProvider.get('FilterRestatement_Comma'), commaSeparatedList, list[i]);\n            }\n            for (var i = 0; i < replacedList.length; i++) {\n                commaSeparatedList = commaSeparatedList.replace(replacedList[i].replaceValue, replacedList[i].targetValue);\n            }\n            return commaSeparatedList;\n        }\n        StringExtensions.constructCommaSeparatedList = constructCommaSeparatedList;\n        function escapeStringForRegex(s) {\n            return s.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1');\n        }\n        StringExtensions.escapeStringForRegex = escapeStringForRegex;\n        /**\n         * Remove file name reserved characters <>:\"/\\|?* from input string.\n         */\n        function normalizeFileName(fileName) {\n            debug.assertValue(fileName, 'fileName');\n            return fileName.replace(/[\\<\\>\\:\"\\/\\\\\\|\\?*]/g, '');\n        }\n        StringExtensions.normalizeFileName = normalizeFileName;\n        /**\n         * Similar to JSON.stringify, but strips away escape sequences so that the resulting\n         * string is human-readable (and parsable by JSON formatting/validating tools).\n         */\n        function stringifyAsPrettyJSON(object) {\n            //let specialCharacterRemover = (key: string, value: string) => value.replace(/[^\\w\\s]/gi, '');\n            return JSON.stringify(object /*, specialCharacterRemover*/);\n        }\n        StringExtensions.stringifyAsPrettyJSON = stringifyAsPrettyJSON;\n        /**\n         * Derive a CLS-compliant name from a specified string.  If no allowed characters are present, return a fallback string instead.\n         * TODO (6708134): this should have a fully Unicode-aware implementation\n         */\n        function deriveClsCompliantName(input, fallback) {\n            debug.assertValue(input, 'input');\n            var result = input.replace(/^[^A-Za-z]*/g, '').replace(/[ :\\.\\/\\\\\\-\\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000]/g, '_').replace(/[\\W]/g, '');\n            return result.length > 0 ? result : fallback;\n        }\n        StringExtensions.deriveClsCompliantName = deriveClsCompliantName;\n        /** Performs cheap sanitization by stripping away HTML tag (<>) characters. */\n        function stripTagDelimiters(s) {\n            return s.replace(HtmlTagRegex, '');\n        }\n        StringExtensions.stripTagDelimiters = stripTagDelimiters;\n    })(StringExtensions = jsCommon.StringExtensions || (jsCommon.StringExtensions = {}));\n    /**\n     * The general utility class.\n     */\n    var Utility = (function () {\n        function Utility() {\n        }\n        /**\n         * Ensures the specified value is not null or undefined. Throws a relevent exception if it is.\n         * @param value The value to check.\n         * @param context The context from which the check originated.\n         * @param methodName The name of the method that initiated the check.\n         * @param parameterName The parameter name of the value to check.\n         */\n        Utility.throwIfNullOrUndefined = function (value, context, methodName, parameterName) {\n            if (value === null) {\n                Utility.throwException(jsCommon.Errors.argumentNull(Utility.getComponentName(context) + methodName + '.' + parameterName));\n            }\n            else if (typeof (value) === Utility.Undefined) {\n                Utility.throwException(jsCommon.Errors.argumentUndefined(Utility.getComponentName(context) + methodName + '.' + parameterName));\n            }\n        };\n        /**\n         * Ensures the specified value is not null, undefined or empty. Throws a relevent exception if it is.\n         * @param value The value to check.\n         * @param context The context from which the check originated.\n         * @param methodName The name of the method that initiated the check.\n         * @param parameterName The parameter name of the value to check.\n         */\n        Utility.throwIfNullOrEmpty = function (value, context, methodName, parameterName) {\n            Utility.throwIfNullOrUndefined(value, context, methodName, parameterName);\n            if (!value.length) {\n                Utility.throwException(jsCommon.Errors.argumentOutOfRange(Utility.getComponentName(context) + methodName + '.' + parameterName));\n            }\n        };\n        /**\n         * Ensures the specified string is not null, undefined or empty. Throws a relevent exception if it is.\n         * @param value The value to check.\n         * @param context The context from which the check originated.\n         * @param methodName The name of the method that initiated the check.\n         * @param parameterName The parameter name of the value to check.\n         */\n        Utility.throwIfNullOrEmptyString = function (value, context, methodName, parameterName) {\n            Utility.throwIfNullOrUndefined(value, context, methodName, parameterName);\n            if (value.length < 1) {\n                Utility.throwException(jsCommon.Errors.argumentOutOfRange(Utility.getComponentName(context) + methodName + '.' + parameterName));\n            }\n        };\n        /**\n         * Ensures the specified value is not null, undefined, whitespace or empty. Throws a relevent exception if it is.\n         * @param value The value to check.\n         * @param context The context from which the check originated.\n         * @param methodName The name of the method that initiated the check.\n         * @param parameterName The parameter name of the value to check.\n         */\n        Utility.throwIfNullEmptyOrWhitespaceString = function (value, context, methodName, parameterName) {\n            Utility.throwIfNullOrUndefined(value, context, methodName, parameterName);\n            if (StringExtensions.isNullOrUndefinedOrWhiteSpaceString(value)) {\n                Utility.throwException(jsCommon.Errors.argumentOutOfRange(Utility.getComponentName(context) + methodName + '.' + parameterName));\n            }\n        };\n        /**\n         * Ensures the specified condition is true. Throws relevant exception if it isn't.\n         * @param condition The condition to check.\n         * @param context The context from which the check originated.\n         * @param methodName The name of the method that initiated the check.\n         * @param parameterName The parameter name against which the condition is checked.\n         */\n        Utility.throwIfNotTrue = function (condition, context, methodName, parameterName) {\n            if (!condition) {\n                Utility.throwException(jsCommon.Errors.argument(parameterName, Utility.getComponentName(context) + methodName + '.' + parameterName));\n            }\n        };\n        /**\n         * Checks whether the provided value is a 'string'.\n         * @param value The value to test.\n         */\n        Utility.isString = function (value) {\n            return ((typeof value) === 'string');\n        };\n        /**\n         * Checks whether the provided value is a 'boolean'.\n         * @param value The value to test.\n         */\n        Utility.isBoolean = function (value) {\n            return ((typeof value) === 'boolean');\n        };\n        /**\n         * Checks whether the provided value is a 'number'.\n         * @param value The value to test.\n         */\n        Utility.isNumber = function (value) {\n            return ((typeof value) === 'number');\n        };\n        /**\n         * Checks whether the provided value is a Date instance.\n         * @param value The value to test.\n         */\n        Utility.isDate = function (value) {\n            return Utility.isObject(value) && (value instanceof Date);\n        };\n        /**\n         * Checks whether the provided value is an 'object'.\n         * @param value The value to test.\n         */\n        Utility.isObject = function (value) {\n            return (value != null) && ((typeof value) === 'object');\n        };\n        /**\n         * Checks whether the provided value is null or undefined.\n         * @param value The value to test.\n         */\n        Utility.isNullOrUndefined = function (value) {\n            return (value === null) || (typeof (value) === Utility.Undefined);\n        };\n        /**\n         * Combine a base url and a path.\n         * @param baseUrl The base url.\n         * @param path The path to add on to the base url.\n         * @returns The combined url.\n         */\n        Utility.urlCombine = function (baseUrl, path) {\n            Utility.throwIfNullOrUndefined(baseUrl, null, \"urlCombine\", \"baseUrl\");\n            Utility.throwIfNullOrUndefined(path, null, \"urlCombine\", \"path\");\n            // should any of the components be empty, fail gracefuly - this is important when using the test page\n            if (StringExtensions.isNullOrUndefinedOrWhiteSpaceString(path)) {\n                return baseUrl;\n            }\n            if (StringExtensions.isNullOrUndefinedOrWhiteSpaceString(baseUrl)) {\n                return path;\n            }\n            var finalUrl = baseUrl;\n            if (finalUrl.charAt(finalUrl.length - 1) === '/') {\n                if (path.charAt(0) === '/')\n                    path = path.slice(1);\n            }\n            else {\n                if (path.charAt(0) !== '/')\n                    path = '/' + path;\n            }\n            return finalUrl + path;\n        };\n        Utility.getAbsoluteUri = function (path) {\n            Utility.throwIfNullOrUndefined(path, null, \"getAbsoluteUri\", \"path\");\n            var url = path;\n            // Make absolute\n            if (url && url.indexOf('http') === -1) {\n                url = Utility.urlCombine(clusterUri, url);\n            }\n            return url;\n        };\n        Utility.getStaticResourceUri = function (path) {\n            Utility.throwIfNullOrUndefined(path, null, \"getStaticResourceUri\", \"path\");\n            var url = path;\n            // Make absolute\n            if (url && url.indexOf('http') === -1) {\n                url = jsCommon.Utility.urlCombine(Utility.staticContentLocation, url);\n            }\n            return url;\n        };\n        Utility.getComponentName = function (context) {\n            return !context ? '' : (typeof context).toString() + '.';\n        };\n        Utility.throwException = function (e) {\n            jsCommon.Trace.error(StringExtensions.format(\"Throwing exception: {0}\", JSON.stringify(e)), \n            /*includeStackTrace*/ e.stack != null ? false : true);\n            throw e;\n        };\n        Utility.createClassSelector = function (className) {\n            Utility.throwIfNullOrEmptyString(className, null, 'CreateClassSelector', 'className');\n            return '.' + className;\n        };\n        Utility.createIdSelector = function (id) {\n            Utility.throwIfNullOrEmptyString(id, null, 'CreateIdSelector', 'id');\n            return '#' + id;\n        };\n        /**\n         * Creates a client-side Guid string.\n         * @returns A string representation of a Guid.\n         */\n        Utility.generateGuid = function () {\n            var guid = \"\", idx = 0;\n            for (idx = 0; idx < 32; idx += 1) {\n                var guidDigitsItem = Math.random() * 16 | 0;\n                switch (idx) {\n                    case 8:\n                    case 12:\n                    case 16:\n                    case 20:\n                        guid += \"-\";\n                        break;\n                }\n                guid += guidDigitsItem.toString(16);\n            }\n            return guid;\n        };\n        /**\n         * Try extract a cookie from {@link document.cookie} identified by key.\n         */\n        Utility.getCookieValue = function (key) {\n            // the cookie is of the format <key1=value1>; <key2=value2>. Split by ';', then by '=' \n            // to search for the key\n            var keyValuePairs = document.cookie.split(';');\n            for (var i = 0; i < keyValuePairs.length; i++) {\n                var keyValue = keyValuePairs[i];\n                var split = keyValue.split('=');\n                if (split.length > 0 && split[0].trim() === key) {\n                    return keyValue.substr(keyValue.indexOf('=') + 1);\n                }\n            }\n            return null;\n        };\n        /**\n         * Extracts the protocol://hostname section of a url.\n         * @param url The URL from which to extract the section.\n         * @returns The protocol://hostname portion of the given URL.\n         */\n        Utility.getDomainForUrl = function (url) {\n            var hrefObject = Utility.getHrefObjectFromUrl(url);\n            return hrefObject.prop('protocol') + '//' + hrefObject.prop('hostname');\n        };\n        /**\n         * Extracts the hostname and absolute path sections of a url.\n         * @param url The URL from which to extract the section.\n         * @returns The hostname and absolute path portion of the given URL.\n         */\n        Utility.getHostNameForUrl = function (url) {\n            var hrefObject = Utility.getHrefObjectFromUrl(url);\n            return Utility.urlCombine(hrefObject.prop('hostname'), hrefObject.prop('pathname'));\n        };\n        /**\n         * Return the original url with query string stripped.\n         * @param url The URL from which to extract the section.\n         * @returns the original url with query string stripped.\n         */\n        Utility.getUrlWithoutQueryString = function (url) {\n            var hrefObject = Utility.getHrefObjectFromUrl(url);\n            return hrefObject.prop('protocol') + '//' + Utility.urlCombine(hrefObject.prop('host'), hrefObject.prop('pathname'));\n        };\n        /**\n         * Extracts the protocol section of a url.\n         * @param url The URL from which to extract the section.\n         * @returns The protocol for the current URL.\n         */\n        Utility.getProtocolFromUrl = function (url) {\n            return Utility.getHrefObjectFromUrl(url).prop('protocol').replace(':', '');\n        };\n        /**\n         * Returns a formatted href object from a URL.\n         * @param url The URL used to generate the object.\n         * @returns A jQuery object with the url.\n         */\n        Utility.getHrefObjectFromUrl = function (url) {\n            var aObject = $('<a>');\n            aObject = aObject.prop('href', url);\n            return aObject;\n        };\n        /**\n         * Converts a WCF representation of a dictionary to a JavaScript dictionary.\n         * @param wcfDictionary The WCF dictionary to convert.\n         * @returns The native JavaScript representation of this dictionary.\n         */\n        Utility.convertWcfToJsDictionary = function (wcfDictionary) {\n            // convert the WCF JSON representation of a dictionary\n            // to JS dictionary.\n            // WCF representation: [{\"Key\": Key, \"Value\": Value}..]\n            // JS representation: [Key: Value ..]\n            var result = {};\n            for (var i = 0; i < wcfDictionary.length; i++) {\n                var keyValuePair = wcfDictionary[i];\n                result[keyValuePair['Key']] = keyValuePair['Value'];\n            }\n            return result;\n        };\n        Utility.getDateFromWcfJsonString = function (jsonDate, fromUtcMilliseconds) {\n            if (StringExtensions.isNullOrEmpty(jsonDate)) {\n                return null;\n            }\n            var begIndex = jsonDate.indexOf('(');\n            var endIndex = jsonDate.indexOf(')');\n            if (begIndex !== -1 && endIndex !== -1) {\n                var milliseconds = parseInt(jsonDate.substring(begIndex + 1, endIndex), 10);\n                if (fromUtcMilliseconds) {\n                    return new Date(milliseconds);\n                }\n                else {\n                    var retValue = new Date(0);\n                    retValue.setUTCMilliseconds(milliseconds);\n                    return retValue;\n                }\n            }\n            return null;\n        };\n        /**\n         * Get the outer html of the given jquery object.\n         * @param content The jquery object.\n         * @returns The entire html representation of the object.\n         */\n        Utility.getOuterHtml = function (content) {\n            return $('<div>').append(content).html();\n        };\n        /**\n         * Comparison Method: Compares two integer numbers.\n         * @param a An integer value.\n         * @param b An integer value.\n         * @returns The comparison result.\n         */\n        Utility.compareInt = function (a, b) {\n            return a - b;\n        };\n        /**\n         * Return the index of the smallest value in a numerical array.\n         * @param a A numeric array.\n         * @returns The index of the smallest value in the array.\n         */\n        Utility.getIndexOfMinValue = function (a) {\n            var retValue = 0;\n            var currentMinValue = a[0];\n            for (var i = 0; i < a.length; i++) {\n                if (a[i] < currentMinValue) {\n                    currentMinValue = a[i];\n                    retValue = i;\n                }\n            }\n            return retValue;\n        };\n        /**\n         * Extracts a url from a background image attribute in the format of: url('www.foobar.com/image.png').\n         * @param input The value of the background-image attribute.\n         * @returns The extracted url.\n         */\n        Utility.extractUrlFromCssBackgroundImage = function (input) {\n            return input.replace(/\"/g, \"\").replace(/url\\(|\\)$/ig, \"\");\n        };\n        /**\n         * Verifies image data url of images.\n         */\n        Utility.isValidImageDataUrl = function (url) {\n            var regex = new RegExp('data:(image\\/(png|jpg|jpeg|gif|svg))');\n            return regex.test(url);\n        };\n        /**\n         * Downloads a content string as a file.\n         * @param content Content stream.\n         * @param fileName File name to use.\n         */\n        Utility.saveAsFile = function (content, fileName) {\n            var contentBlob = new Blob([content], { type: HttpConstants.ApplicationOctetStream });\n            var url = window['webkitURL'] || URL;\n            var urlLink = url.createObjectURL(contentBlob);\n            var fileNameLink = fileName || urlLink;\n            // IE support, use msSaveOrOpenBlob API\n            if (window.navigator.msSaveOrOpenBlob) {\n                window.navigator.msSaveOrOpenBlob(contentBlob, fileNameLink);\n                return;\n            }\n            // WebKit-based browser support requires generating an anchor tag with\n            // download attribute set to blob store and triggering a click event to invoke \n            // a download to file action\n            var hyperlink = document.createElement('a');\n            hyperlink.href = urlLink;\n            hyperlink.target = '_blank';\n            hyperlink['download'] = fileNameLink;\n            document.body.appendChild(hyperlink);\n            hyperlink.click();\n            document.body.removeChild(hyperlink);\n        };\n        /**\n         * Helper method to get the simple type name from a typed object.\n         * @param obj The typed object.\n         * @returns The simple type name for the object.\n         */\n        Utility.getType = function (obj) {\n            Utility.throwIfNullEmptyOrWhitespaceString(obj.__type, this, 'getType', 'obj');\n            var parts = obj.__type.split(\":\");\n            if (parts.length !== 2) {\n                jsCommon.Errors.argument(\"obj.__type\", \"Type String not in expected format [Type]#[Namespace]: \" + obj.__type);\n            }\n            if (parts[1] !== Utility.TypeNamespace) {\n                jsCommon.Errors.argument(\"obj.__type\", \"Type Namespace not expected: \" + parts[1]);\n            }\n            return parts[0];\n        };\n        /**\n         * Check if an element supports a specific event type.\n         * @param eventName The name of the event.\n         * @param element The element to test for event support.\n         * @returns Whether the even is supported on the provided element.\n         */\n        Utility.isEventSupported = function (eventName, element) {\n            eventName = 'on' + eventName;\n            var isSupported = (eventName in element);\n            if (!isSupported) {\n                // if we can't use setAttribute try a generic element\n                if (!element.setAttribute) {\n                    element = document.createElement('div');\n                }\n                if (element.setAttribute && element.removeAttribute) {\n                    element.setAttribute(eventName, '');\n                    isSupported = typeof element[eventName] === 'function';\n                    // if the property was created - remove it\n                    if (typeof element[eventName] !== 'undefined') {\n                        element[eventName] = null;\n                    }\n                    element.removeAttribute(eventName);\n                }\n            }\n            element = null;\n            return isSupported;\n        };\n        Utility.toPixel = function (pixelAmount) {\n            Utility.throwIfNullOrUndefined(pixelAmount, this, \"toPixel\", \"pixelAmount\");\n            return pixelAmount.toString() + jsCommon.CssConstants.pixelUnits;\n        };\n        Utility.getPropertyCount = function (object) {\n            Utility.throwIfNullOrUndefined(object, this, \"getPropertyCount\", \"object\");\n            return Object.getOwnPropertyNames(object).length;\n        };\n        /**\n         * Check if an element supports a specific event type.\n         * @param filePath File path.\n         * @returns File extension.\n         */\n        Utility.getFileExtension = function (filePath) {\n            if (filePath) {\n                var index = filePath.lastIndexOf('.');\n                if (index >= 0)\n                    return filePath.substr(index + 1);\n            }\n            return '';\n        };\n        /**\n         * Extract the filename out of a full path delimited by '\\' or '/'.\n         * @param filePath File path.\n         * @returns filename File name.\n         */\n        Utility.extractFileNameFromPath = function (filePath) {\n            return filePath.replace(/^.*[\\\\\\/]/, '');\n        };\n        /**\n         * This method indicates whether window.clipboardData is supported.\n         * For example, clipboard support for Windows Store apps is currently disabled\n         * since window.clipboardData is unsupported (it raises access denied error)\n         * since clipboard in Windows Store is being\n         * achieved through Windows.ApplicationModel.DataTransfer.Clipboard class.\n         */\n        Utility.canUseClipboard = function () {\n            return (typeof MSApp === \"undefined\");\n        };\n        Utility.is64BitOperatingSystem = function () {\n            return navigator.userAgent.indexOf(\"WOW64\") !== -1 ||\n                navigator.userAgent.indexOf(\"Win64\") !== -1;\n        };\n        Utility.parseNumber = function (value, defaultValue) {\n            if (value === null)\n                return null;\n            if (value === undefined)\n                return defaultValue;\n            var result = Number(value);\n            if (isFinite(result))\n                return result;\n            if (isNaN(result) && !(typeof value === \"number\" || value === \"NaN\"))\n                return defaultValue;\n            return result;\n        };\n        Utility.getURLParamValue = function (name) {\n            var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n            if (results == null) {\n                return null;\n            }\n            else {\n                return results[1] || 0;\n            }\n        };\n        /**\n         * Return local timezone.\n         * This function uses summer and winter offset to determine local time zone.\n         * The result localTimeZoneString must be a subset of the strings used by server,\n         * as documented here: https://msdn.microsoft.com/en-us/library/gg154758.aspx (Dynamic Daylight Savings Time (Compact 2013)).\n         * @return Local timezone string or UTC if timezone cannot be found.\n         */\n        Utility.getLocalTimeZoneString = function () {\n            var timeSummer = new Date(Date.UTC(2005, 6, 30, 0, 0, 0, 0));\n            var summerOffset = -1 * timeSummer.getTimezoneOffset();\n            var timeWinter = new Date(Date.UTC(2005, 12, 30, 0, 0, 0, 0));\n            var winterOffset = -1 * timeWinter.getTimezoneOffset();\n            var localTimeZoneString;\n            if (-720 === summerOffset && -720 === winterOffset) {\n                localTimeZoneString = 'Dateline Standard Time';\n            }\n            else if (-660 === summerOffset && -660 === winterOffset) {\n                localTimeZoneString = 'UTC-11';\n            }\n            else if (-660 === summerOffset && -660 === winterOffset) {\n                localTimeZoneString = 'Samoa Standard Time';\n            }\n            else if (-600 === summerOffset && -600 === winterOffset) {\n                localTimeZoneString = 'Hawaiian Standard Time';\n            }\n            else if (-480 === summerOffset && -540 === winterOffset) {\n                localTimeZoneString = 'Alaskan Standard Time';\n            }\n            else if (-420 === summerOffset && -480 === winterOffset) {\n                localTimeZoneString = 'Pacific Standard Time';\n            }\n            else if (-420 === summerOffset && -420 === winterOffset) {\n                localTimeZoneString = 'US Mountain Standard Time';\n            }\n            else if (-360 === summerOffset && -420 === winterOffset) {\n                localTimeZoneString = 'Mountain Standard Time';\n            }\n            else if (-360 === summerOffset && -360 === winterOffset) {\n                localTimeZoneString = 'Central America Standard Time';\n            }\n            else if (-300 === summerOffset && -360 === winterOffset) {\n                localTimeZoneString = 'Central Standard Time';\n            }\n            else if (-300 === summerOffset && -300 === winterOffset) {\n                localTimeZoneString = 'SA Pacific Standard Time';\n            }\n            else if (-240 === summerOffset && -300 === winterOffset) {\n                localTimeZoneString = 'Eastern Standard Time';\n            }\n            else if (-270 === summerOffset && -270 === winterOffset) {\n                localTimeZoneString = 'Venezuela Standard Time';\n            }\n            else if (-240 === summerOffset && -240 === winterOffset) {\n                localTimeZoneString = 'SA Western Standard Time';\n            }\n            else if (-240 === summerOffset && -180 === winterOffset) {\n                localTimeZoneString = 'Central Brazilian Standard Time';\n            }\n            else if (-180 === summerOffset && -240 === winterOffset) {\n                localTimeZoneString = 'Atlantic Standard Time';\n            }\n            else if (-180 === summerOffset && -180 === winterOffset) {\n                localTimeZoneString = 'Montevideo Standard Time';\n            }\n            else if (-180 === summerOffset && -120 === winterOffset) {\n                localTimeZoneString = 'E. South America Standard Time';\n            }\n            else if (-150 === summerOffset && -210 === winterOffset) {\n                localTimeZoneString = 'Mid-Atlantic Standard Time';\n            }\n            else if (-120 === summerOffset && -120 === winterOffset) {\n                localTimeZoneString = 'SA Eastern Standard Time';\n            }\n            else if (0 === summerOffset && 0 === winterOffset) {\n                localTimeZoneString = 'UTC';\n            }\n            else if (60 === summerOffset && 0 === winterOffset) {\n                localTimeZoneString = 'GMT Standard Time';\n            }\n            else if (60 === summerOffset && 120 === winterOffset) {\n                localTimeZoneString = 'Namibia Standard Time';\n            }\n            else if (120 === summerOffset && 60 === winterOffset) {\n                localTimeZoneString = 'Romance Standard Time';\n            }\n            else if (120 === summerOffset && 120 === winterOffset) {\n                localTimeZoneString = 'South Africa Standard Time';\n            }\n            else if (180 === summerOffset && 120 === winterOffset) {\n                localTimeZoneString = 'GTB Standard Time';\n            }\n            else if (180 === summerOffset && 180 === winterOffset) {\n                localTimeZoneString = 'E. Africa Standard Time';\n            }\n            else if (240 === summerOffset && 180 === winterOffset) {\n                localTimeZoneString = 'Russian Standard Time';\n            }\n            else if (240 === summerOffset && 240 === winterOffset) {\n                localTimeZoneString = 'Arabian Standard Time';\n            }\n            else if (270 === summerOffset && 210 === winterOffset) {\n                localTimeZoneString = 'Iran Standard Time';\n            }\n            else if (270 === summerOffset && 270 === winterOffset) {\n                localTimeZoneString = 'Afghanistan Standard Time';\n            }\n            else if (300 === summerOffset && 240 === winterOffset) {\n                localTimeZoneString = 'Pakistan Standard Time';\n            }\n            else if (300 === summerOffset && 300 === winterOffset) {\n                localTimeZoneString = 'West Asia Standard Time';\n            }\n            else if (330 === summerOffset && 330 === winterOffset) {\n                localTimeZoneString = 'India Standard Time';\n            }\n            else if (345 === summerOffset && 345 === winterOffset) {\n                localTimeZoneString = 'Nepal Standard Time';\n            }\n            else if (360 === summerOffset && 300 === winterOffset) {\n                localTimeZoneString = 'N. Central Asia Standard Time';\n            }\n            else if (360 === summerOffset && 360 === winterOffset) {\n                localTimeZoneString = 'Central Asia Standard Time';\n            }\n            else if (390 === summerOffset && 390 === winterOffset) {\n                localTimeZoneString = 'Myanmar Standard Time';\n            }\n            else if (420 === summerOffset && 360 === winterOffset) {\n                localTimeZoneString = 'North Asia Standard Time';\n            }\n            else if (420 === summerOffset && 420 === winterOffset) {\n                localTimeZoneString = 'SE Asia Standard Time';\n            }\n            else if (480 === summerOffset && 420 === winterOffset) {\n                localTimeZoneString = 'North Asia East Standard Time';\n            }\n            else if (480 === summerOffset && 480 === winterOffset) {\n                localTimeZoneString = 'China Standard Time';\n            }\n            else if (540 === summerOffset && 480 === winterOffset) {\n                localTimeZoneString = 'Yakutsk Standard Time';\n            }\n            else if (540 === summerOffset && 540 === winterOffset) {\n                localTimeZoneString = 'Tokyo Standard Time';\n            }\n            else if (570 === summerOffset && 570 === winterOffset) {\n                localTimeZoneString = 'Cen. Australia Standard Time';\n            }\n            else if (600 === summerOffset && 600 === winterOffset) {\n                localTimeZoneString = 'E. Australia Standard Time';\n            }\n            else if (600 === summerOffset && 660 === winterOffset) {\n                localTimeZoneString = 'AUS Eastern Standard Time';\n            }\n            else if (660 === summerOffset && 600 === winterOffset) {\n                localTimeZoneString = 'Tasmania Standard Time';\n            }\n            else if (660 === summerOffset && 660 === winterOffset) {\n                localTimeZoneString = 'West Pacific Standard Time';\n            }\n            else if (690 === summerOffset && 690 === winterOffset) {\n                localTimeZoneString = 'Central Pacific Standard Time';\n            }\n            else if (720 === summerOffset && 660 === winterOffset) {\n                localTimeZoneString = 'Magadan Standard Time';\n            }\n            else if (720 === summerOffset && 720 === winterOffset) {\n                localTimeZoneString = 'Fiji Standard Time';\n            }\n            else if (720 === summerOffset && 780 === winterOffset) {\n                localTimeZoneString = 'New Zealand Standard Time';\n            }\n            else if (780 === summerOffset && 780 === winterOffset) {\n                localTimeZoneString = 'Tonga Standard Time';\n            }\n            else {\n                localTimeZoneString = 'UTC';\n            }\n            return localTimeZoneString;\n        };\n        Utility.TypeNamespace = 'http://schemas.microsoft.com/sqlbi/2013/01/NLRuntimeService';\n        Utility.JsonContentType = 'application/json';\n        Utility.JpegContentType = 'image/jpeg';\n        Utility.XJavascriptContentType = 'application/x-javascript';\n        Utility.JsonDataType = 'json';\n        Utility.BlobDataType = 'blob';\n        Utility.HttpGetMethod = 'GET';\n        Utility.HttpPostMethod = 'POST';\n        Utility.HttpPutMethod = 'PUT';\n        Utility.HttpDeleteMethod = 'DELETE';\n        Utility.HttpContentTypeHeader = 'Content-Type';\n        Utility.HttpAcceptHeader = 'Accept';\n        Utility.Undefined = 'undefined';\n        Utility.staticContentLocation = window.location.protocol + '//' + window.location.host;\n        return Utility;\n    })();\n    jsCommon.Utility = Utility;\n    var VersionUtility = (function () {\n        function VersionUtility() {\n        }\n        /**\n         * Compares 2 version strings.\n         * @param versionA The first version string.\n         * @param versionB The second version string.\n         * @returns A result for the comparison.\n         */\n        VersionUtility.compareVersions = function (versionA, versionB) {\n            var a = versionA.split('.').map(parseFloat);\n            var b = versionB.split('.').map(parseFloat);\n            var versionParts = Math.max(a.length, b.length);\n            for (var i = 0; i < versionParts; i++) {\n                var partA = a[i] || 0;\n                var partB = b[i] || 0;\n                if (partA > partB)\n                    return 1;\n                if (partA < partB)\n                    return -1;\n            }\n            return 0;\n        };\n        return VersionUtility;\n    })();\n    jsCommon.VersionUtility = VersionUtility;\n    var PerformanceUtil;\n    (function (PerformanceUtil) {\n        var PerfMarker = (function () {\n            function PerfMarker(name) {\n                this._name = name;\n                this._start = PerfMarker.begin(name);\n            }\n            PerfMarker.begin = function (name) {\n                if (window.performance === undefined || performance.mark === undefined)\n                    return;\n                if (console.time) {\n                    console.time(name);\n                }\n                name = 'Begin ' + name;\n                performance.mark(name);\n                return name;\n            };\n            PerfMarker.prototype.end = function () {\n                if (window.performance === undefined || performance.mark === undefined || performance.measure === undefined)\n                    return;\n                var name = this._name;\n                var end = 'End ' + name;\n                performance.mark(end);\n                performance.measure(name, this._start, end);\n                if (console.timeEnd) {\n                    console.timeEnd(name);\n                }\n            };\n            return PerfMarker;\n        })();\n        PerformanceUtil.PerfMarker = PerfMarker;\n        function create(name) {\n            return new PerfMarker(name);\n        }\n        PerformanceUtil.create = create;\n    })(PerformanceUtil = jsCommon.PerformanceUtil || (jsCommon.PerformanceUtil = {}));\n    var DeferUtility;\n    (function (DeferUtility) {\n        /**\n         * Wraps a callback and returns a new function.\n         * The function can be called many times but the callback\n         * will only be executed once on the next frame.\n         * Use this to throttle big UI updates and access to DOM.\n         */\n        function deferUntilNextFrame(callback) {\n            var isWaiting, args, context;\n            if (!window.requestAnimationFrame) {\n                window.requestAnimationFrame = function (func) { return setTimeout(func, 1000 / 50); };\n            }\n            return function () {\n                if (!isWaiting) {\n                    isWaiting = true;\n                    args = arguments;\n                    context = this;\n                    window.requestAnimationFrame(function () {\n                        isWaiting = false;\n                        callback.apply(context, args);\n                    });\n                }\n            };\n        }\n        DeferUtility.deferUntilNextFrame = deferUntilNextFrame;\n    })(DeferUtility = jsCommon.DeferUtility || (jsCommon.DeferUtility = {}));\n})(jsCommon || (jsCommon = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar jsCommon;\n(function (jsCommon) {\n    var TraceItem = (function () {\n        function TraceItem(text, type, sessionId, requestId) {\n            this.text = text;\n            this.type = type;\n            this.sessionId = sessionId;\n            this.requestId = requestId;\n            this.timeStamp = new Date();\n        }\n        TraceItem.prototype.toString = function () {\n            var resultString = '';\n            resultString += (jsCommon.StringExtensions.format('{0} ({1}): {2}', TraceItem.traceTypeStrings[this.type], this.timeStamp.toUTCString(), this.text));\n            if (this.requestId)\n                resultString += ('\\n(Request id: ' + this.requestId + ')');\n            return resultString;\n        };\n        TraceItem.traceTypeStrings = [\n            'INFORMATION',\n            'VERBOSE',\n            'WARNING',\n            'ERROR',\n            'EXPECTEDERROR',\n            'UNEXPECTEDERROR',\n            'FATAL',\n        ];\n        return TraceItem;\n    })();\n    jsCommon.TraceItem = TraceItem;\n})(jsCommon || (jsCommon = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar jsCommon;\n(function (jsCommon) {\n    var UrlUtils;\n    (function (UrlUtils) {\n        var urlRegex = /http[s]?:\\/\\/(\\S)+/gi;\n        var imageUrlRegex = /http[s]?:\\/\\/(\\S)+(png|jpg|jpeg|gif|svg)/gi;\n        function isValidUrl(value) {\n            if (jsCommon.StringExtensions.isNullOrEmpty(value))\n                return false;\n            var match = jsCommon.RegExpExtensions.run(urlRegex, value);\n            if (!!match && match.index === 0)\n                return true;\n            return false;\n        }\n        UrlUtils.isValidUrl = isValidUrl;\n        /* Tests whether a URL is valid.\n         * @param url The url to be tested.\n         * @returns Whether the provided url is valid.\n         **/\n        function isValidImageUrl(url) {\n            if (_.isEmpty(url))\n                return false;\n            var match = jsCommon.RegExpExtensions.run(imageUrlRegex, url);\n            if (!!match && match.index === 0)\n                return true;\n            return false;\n        }\n        UrlUtils.isValidImageUrl = isValidImageUrl;\n        function findAllValidUrls(text) {\n            if (jsCommon.StringExtensions.isNullOrEmpty(text))\n                return [];\n            // Find all urls in the text.\n            // TODO: This could potentially be expensive, maybe include a cap here for text with many urls?\n            var urlRanges = [];\n            var matches;\n            var start = 0;\n            while ((matches = jsCommon.RegExpExtensions.run(urlRegex, text, start)) !== null) {\n                var url = matches[0];\n                var end = matches.index + url.length;\n                urlRanges.push({\n                    start: matches.index,\n                    end: end,\n                    text: url,\n                });\n                start = end;\n            }\n            return urlRanges;\n        }\n        UrlUtils.findAllValidUrls = findAllValidUrls;\n    })(UrlUtils = jsCommon.UrlUtils || (jsCommon.UrlUtils = {}));\n})(jsCommon || (jsCommon = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar jsCommon;\n(function (jsCommon) {\n    /**\n     * Extensions for Enumerations.\n     */\n    var EnumExtensions;\n    (function (EnumExtensions) {\n        /**\n         * Gets a value indicating whether the value has the bit flags set.\n         */\n        function hasFlag(value, flag) {\n            debug.assert(!!flag, 'flag must be specified and nonzero.');\n            return (value & flag) === flag;\n        }\n        EnumExtensions.hasFlag = hasFlag;\n        /**\n         * Sets a value of a flag without modifying any other flags.\n         */\n        function setFlag(value, flag) {\n            debug.assert(!!flag, \"flag must be specified and nonzero.\");\n            return value |= flag;\n        }\n        EnumExtensions.setFlag = setFlag;\n        /**\n         * Resets a value of a flag without modifying any other flags.\n         */\n        function resetFlag(value, flag) {\n            debug.assert(!!flag, \"flag must be specified and nonzero.\");\n            return value &= ~flag;\n        }\n        EnumExtensions.resetFlag = resetFlag;\n        /**\n         * According to the TypeScript Handbook, this is safe to do.\n         */\n        function toString(enumType, value) {\n            return enumType[value];\n        }\n        EnumExtensions.toString = toString;\n    })(EnumExtensions = jsCommon.EnumExtensions || (jsCommon.EnumExtensions = {}));\n    /**\n     * Extensions to String class.\n     */\n    var StringExtensions;\n    (function (StringExtensions) {\n        /**\n         * Checks if a string ends with a sub-string.\n         */\n        function endsWith(str, suffix) {\n            debug.assertValue(str, 'str');\n            debug.assertValue(suffix, 'suffix');\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\n        }\n        StringExtensions.endsWith = endsWith;\n    })(StringExtensions = jsCommon.StringExtensions || (jsCommon.StringExtensions = {}));\n    var LogicExtensions;\n    (function (LogicExtensions) {\n        function XOR(a, b) {\n            return (a || b) && !(a && b);\n        }\n        LogicExtensions.XOR = XOR;\n    })(LogicExtensions = jsCommon.LogicExtensions || (jsCommon.LogicExtensions = {}));\n    var JsonComparer;\n    (function (JsonComparer) {\n        /**\n         * Performs JSON-style comparison of two objects.\n         */\n        function equals(x, y) {\n            if (x === y)\n                return true;\n            return JSON.stringify(x) === JSON.stringify(y);\n        }\n        JsonComparer.equals = equals;\n    })(JsonComparer = jsCommon.JsonComparer || (jsCommon.JsonComparer = {}));\n    /**\n     * Values are in terms of 'pt'\n     * Convert to pixels using PixelConverter.fromPoint\n     */\n    var TextSizeDefaults;\n    (function (TextSizeDefaults) {\n        /**\n         * Stored in terms of 'pt'\n         * Convert to pixels using PixelConverter.fromPoint\n         */\n        TextSizeDefaults.TextSizeMin = 8;\n        /**\n         * Stored in terms of 'pt'\n         * Convert to pixels using PixelConverter.fromPoint\n         */\n        TextSizeDefaults.TextSizeMax = 40;\n        var TextSizeRange = TextSizeDefaults.TextSizeMax - TextSizeDefaults.TextSizeMin;\n        /**\n         * Returns the percentage of this value relative to the TextSizeMax\n         * @param textSize - should be given in terms of 'pt'\n         */\n        function getScale(textSize) {\n            return (textSize - TextSizeDefaults.TextSizeMin) / TextSizeRange;\n        }\n        TextSizeDefaults.getScale = getScale;\n    })(TextSizeDefaults = jsCommon.TextSizeDefaults || (jsCommon.TextSizeDefaults = {}));\n    var PixelConverter;\n    (function (PixelConverter) {\n        var PxPtRatio = 4 / 3;\n        var PixelString = 'px';\n        /**\n         * Appends 'px' to the end of number value for use as pixel string in styles\n         */\n        function toString(px) {\n            return px + PixelString;\n        }\n        PixelConverter.toString = toString;\n        /**\n         * Converts point value (pt) to pixels\n         * Returns a string for font-size property\n         * e.g. fromPoint(8) => '24px'\n         */\n        function fromPoint(pt) {\n            return toString(fromPointToPixel(pt));\n        }\n        PixelConverter.fromPoint = fromPoint;\n        /**\n         * Converts point value (pt) to pixels\n         * Returns a number for font-size property\n         * e.g. fromPoint(8) => 24px\n         */\n        function fromPointToPixel(pt) {\n            return (PxPtRatio * pt);\n        }\n        PixelConverter.fromPointToPixel = fromPointToPixel;\n        /**\n         * Converts pixel value (px) to pt\n         * e.g. toPoint(24) => 8\n         */\n        function toPoint(px) {\n            return px / PxPtRatio;\n        }\n        PixelConverter.toPoint = toPoint;\n    })(PixelConverter = jsCommon.PixelConverter || (jsCommon.PixelConverter = {}));\n    var RegExpExtensions;\n    (function (RegExpExtensions) {\n        /**\n         * Runs exec on regex starting from 0 index\n         * This is the expected behavior but RegExp actually remember\n         * the last index they stopped at (found match at) and will\n         * return unexpected results when run in sequence.\n         * @param regex - regular expression object\n         * @param value - string to search wiht regex\n         * @param start - index within value to start regex\n         */\n        function run(regex, value, start) {\n            debug.assertValue(regex, 'regex');\n            regex.lastIndex = start || 0;\n            return regex.exec(value);\n        }\n        RegExpExtensions.run = run;\n    })(RegExpExtensions = jsCommon.RegExpExtensions || (jsCommon.RegExpExtensions = {}));\n})(jsCommon || (jsCommon = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar jsCommon;\n(function (jsCommon) {\n    var ConsoleTracer = (function () {\n        function ConsoleTracer() {\n        }\n        ConsoleTracer.prototype.logTrace = function (trace) {\n            if (DEBUG) {\n                switch (trace.type) {\n                    case jsCommon.TraceType.Information:\n                        console.info(trace.toString());\n                        break;\n                    case jsCommon.TraceType.UnexpectedError:\n                    case jsCommon.TraceType.Error:\n                    case jsCommon.TraceType.Fatal:\n                        console.error(trace.toString());\n                        break;\n                    case jsCommon.TraceType.ExpectedError:\n                    case jsCommon.TraceType.Warning:\n                        console.warn(trace.toString());\n                        break;\n                    case jsCommon.TraceType.Verbose:\n                        console.log(trace.toString());\n                        break;\n                    default:\n                        console.log(trace.toString());\n                        break;\n                }\n            }\n        };\n        return ConsoleTracer;\n    })();\n    jsCommon.ConsoleTracer = ConsoleTracer;\n    var Trace;\n    (function (Trace) {\n        var traceMaxCount = 1000;\n        var traces = new Array(traceMaxCount);\n        var lastTraceIndex = -1;\n        var defaultListener = new ConsoleTracer();\n        var listeners = new Array(defaultListener);\n        /**\n         * Trace a warning. Please ensure that no PII is being logged.\n         */\n        function warning(text, requestId) {\n            debug.assertValue(text, 'text');\n            logTraceInternal(new jsCommon.TraceItem(text, jsCommon.TraceType.Warning, requestId));\n        }\n        Trace.warning = warning;\n        /**\n         * Trace an error. Please ensure that no PII is being logged.\n         */\n        function error(text, includeStackTrace, requestId) {\n            debug.assertValue(text, 'text');\n            if (includeStackTrace)\n                text = jsCommon.StringExtensions.format(\"{0}.\\nStack:\\n{1}\", text, jsCommon.getStackTrace());\n            logTraceInternal(new jsCommon.TraceItem(text, jsCommon.TraceType.Error, requestId));\n        }\n        Trace.error = error;\n        /**\n         * Trace an information. Please ensure that no PII is being logged.\n         */\n        function verbose(text, requestId) {\n            debug.assertValue(text, 'text');\n            logTraceInternal(new jsCommon.TraceItem(text, jsCommon.TraceType.Verbose, requestId));\n        }\n        Trace.verbose = verbose;\n        function addListener(listener) {\n            debug.assertValue(listener, 'listener');\n            listeners.push(listener);\n        }\n        Trace.addListener = addListener;\n        function removeListener(listener) {\n            debug.assertValue(listener, 'listener');\n            var index = listeners.indexOf(listener);\n            if (index >= 0)\n                listeners.splice(index, 1);\n        }\n        Trace.removeListener = removeListener;\n        function resetListeners() {\n            listeners = new Array(defaultListener);\n        }\n        Trace.resetListeners = resetListeners;\n        function reset() {\n            lastTraceIndex = -1;\n        }\n        Trace.reset = reset;\n        function getTraces() {\n            if (lastTraceIndex < 0)\n                return;\n            var result = new Array(lastTraceIndex + 1);\n            for (var i = 0; i <= lastTraceIndex; i++)\n                result[i] = traces[i];\n            return result;\n        }\n        Trace.getTraces = getTraces;\n        /**\n         * Note: Used for unit-test only.\n         */\n        function disableDefaultListener() {\n            removeListener(defaultListener);\n        }\n        Trace.disableDefaultListener = disableDefaultListener;\n        function enableDefaultListener() {\n            addListener(defaultListener);\n        }\n        Trace.enableDefaultListener = enableDefaultListener;\n        function logTraceInternal(trace) {\n            if ((lastTraceIndex + 1) >= traceMaxCount)\n                reset();\n            traces[++lastTraceIndex] = trace;\n            for (var i = 0, len = listeners.length; i < len; i++)\n                listeners[i].logTrace(trace);\n        }\n    })(Trace = jsCommon.Trace || (jsCommon.Trace = {}));\n})(jsCommon || (jsCommon = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar jsCommon;\n(function (jsCommon) {\n    /**\n     * The types of possible traces within the system, this aligns to the traces available in Cloud Platform.\n     */\n    (function (TraceType) {\n        TraceType[TraceType[\"Information\"] = 0] = \"Information\";\n        TraceType[TraceType[\"Verbose\"] = 1] = \"Verbose\";\n        TraceType[TraceType[\"Warning\"] = 2] = \"Warning\";\n        TraceType[TraceType[\"Error\"] = 3] = \"Error\";\n        TraceType[TraceType[\"ExpectedError\"] = 4] = \"ExpectedError\";\n        TraceType[TraceType[\"UnexpectedError\"] = 5] = \"UnexpectedError\";\n        TraceType[TraceType[\"Fatal\"] = 6] = \"Fatal\";\n    })(jsCommon.TraceType || (jsCommon.TraceType = {}));\n    var TraceType = jsCommon.TraceType;\n})(jsCommon || (jsCommon = {}));\n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar jsCommon;\n(function (jsCommon) {\n    /**\n     * JavaScript files.\n     */\n    var MSMapcontrol = 'https://ecn.dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=7.0&s=1&onscriptload=globalMapControlLoaded';\n    /**\n     * Map loading logic.\n     */\n    var MSMapcontrolLoaded = false;\n    var WaitForMSMapLoad = null;\n    var PowerViewPackage = {\n        javaScriptFiles: [\n            powerbi.build + '/externals/pv/webclient.js'\n        ],\n        cssFiles: [\n            powerbi.build + '/externals/pv/Styles/_all.css'\n        ],\n        javaScriptFilesWithCallback: [\n            { javascriptFile: MSMapcontrol, onLoadCallback: waitForMapControlLoaded }\n        ]\n    };\n    function ensurePowerView(action) {\n        if (action === void 0) { action = _.noop; }\n        jsCommon.requires(PowerViewPackage, action);\n    }\n    jsCommon.ensurePowerView = ensurePowerView;\n    var MapPackage = {\n        javaScriptFilesWithCallback: [\n            { javascriptFile: MSMapcontrol, onLoadCallback: waitForMapControlLoaded }\n        ]\n    };\n    function ensureMap(locale, action) {\n        var mapPackageWithLocale = powerbi.Prototype.inherit(MapPackage);\n        if (!_.isEmpty(locale)) {\n            mapPackageWithLocale.javaScriptFilesWithCallback[0].javascriptFile = MSMapcontrol.concat('&mkt=' + locale);\n        }\n        jsCommon.requires(mapPackageWithLocale, action);\n    }\n    jsCommon.ensureMap = ensureMap;\n    function mapControlLoaded() {\n        MSMapcontrolLoaded = true;\n        if (WaitForMSMapLoad) {\n            WaitForMSMapLoad.resolve();\n            WaitForMSMapLoad = undefined;\n        }\n    }\n    jsCommon.mapControlLoaded = mapControlLoaded;\n    function waitForMapControlLoaded() {\n        var task;\n        if (!MSMapcontrolLoaded) {\n            task = WaitForMSMapLoad = $.Deferred();\n        }\n        else {\n            task = $.Deferred();\n            task.resolve();\n        }\n        return task.promise();\n    }\n    jsCommon.waitForMapControlLoaded = waitForMapControlLoaded;\n})(jsCommon || (jsCommon = {}));\n/* tslint:disable:no-unused-variable */\nvar globalMapControlLoaded = function () {\n    // Map requires a function in the global namespace to callback once loaded\n    jsCommon.mapControlLoaded();\n};\n/* tslint:enable:no-unused-variable */ \n/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\nvar InJs;\n(function (InJs) {\n    /**\n     * The types of possible traces within the system, this aligns to the traces available in Cloud Platform.\n     */\n    (function (TraceType) {\n        TraceType[TraceType[\"information\"] = 0] = \"information\";\n        TraceType[TraceType[\"verbose\"] = 1] = \"verbose\";\n        TraceType[TraceType[\"warning\"] = 2] = \"warning\";\n        TraceType[TraceType[\"error\"] = 3] = \"error\";\n        TraceType[TraceType[\"expectedError\"] = 4] = \"expectedError\";\n        TraceType[TraceType[\"unexpectedError\"] = 5] = \"unexpectedError\";\n        TraceType[TraceType[\"fatal\"] = 6] = \"fatal\";\n    })(InJs.TraceType || (InJs.TraceType = {}));\n    var TraceType = InJs.TraceType;\n})(InJs || (InJs = {}));\n\n\n","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule powerbi {\n    export declare let build;\n} ","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule powerbi {\n    export const CategoryTypes = {\n        Address: \"Address\",\n        City: \"City\",\n        Continent: \"Continent\",\n        CountryRegion: \"Country\", // The text has to stay \"Country\" because it is used as a key in the geocoding caching dictionary\n        County: \"County\",\n        Longitude: \"Longitude\",\n        Latitude: \"Latitude\",\n        Place: \"Place\",\n        PostalCode: \"PostalCode\",\n        StateOrProvince: \"StateOrProvince\"\n    };\n\n    export interface IGeoTaggingAnalyzerService {\n        isLongitudeOrLatitude(fieldRefName: string): boolean;\n        isGeographic(fieldRefName: string): boolean;\n        isGeocodable(fieldRefName: string): boolean;\n        getFieldType(fieldName: string): string;\n        isGeoshapable(fieldRefName: string): boolean;\n    }\n\n    export function createGeoTaggingAnalyzerService(getLocalized: (string) => string): IGeoTaggingAnalyzerService {\n        return new GeoTaggingAnalyzerService(getLocalized);\n    }\n\n    const EnglishBackup = {\n        GeotaggingString_Continent: \"continent\",\n        GeotaggingString_Continents: \"continents\",\n        GeotaggingString_Country: \"country\",\n        GeotaggingString_Countries: \"countries\",\n        GeotaggingString_State: \"state\",\n        GeotaggingString_States: \"states\",\n        GeotaggingString_City: \"city\",\n        GeotaggingString_Cities: \"cities\",\n        GeotaggingString_Town: \"town\",\n        GeotaggingString_Towns: \"towns\",\n        GeotaggingString_Province: \"province\",\n        GeotaggingString_Provinces: \"provinces\",\n        GeotaggingString_County: \"county\",\n        GeotaggingString_Counties: \"counties\",\n        GeotaggingString_Village: \"village\",\n        GeotaggingString_Villages: \"villages\",\n        GeotaggingString_Post: \"post\",\n        GeotaggingString_Zip: \"zip\",\n        GeotaggingString_Code: \"code\",\n        GeotaggingString_Place: \"place\",\n        GeotaggingString_Places: \"places\",\n        GeotaggingString_Address: \"address\",\n        GeotaggingString_Addresses: \"addresses\",\n        GeotaggingString_Street: \"street\",\n        GeotaggingString_Streets: \"streets\",\n        GeotaggingString_Longitude: \"longitude\",\n        GeotaggingString_Longitude_Short: \"lon\",\n        GeotaggingString_Latitude: \"latitude\",\n        GeotaggingString_Latitude_Short: \"lat\",\n        GeotaggingString_PostalCode: \"postal code\",\n        GeotaggingString_PostalCodes: \"postal codes\",\n        GeotaggingString_ZipCode: \"zip code\",\n        GeotaggingString_ZipCodes: \"zip codes\",\n        GeotaggingString_Territory: \"territory\",\n        GeotaggingString_Territories: \"territories\",\n        GeotaggingString_VRMBackCompat_CountryRegion: \"CountryRegion\",\n        GeotaggingString_VRMBackCompat_StateOrProvince: \"StateOrProvince\",\n    };\n\n    export class GeoTaggingAnalyzerService implements IGeoTaggingAnalyzerService {\n        private GeotaggingString_Continent;\n        private GeotaggingString_Continents;\n        private GeotaggingString_Country;\n        private GeotaggingString_Countries;\n        private GeotaggingString_State;\n        private GeotaggingString_States;\n        private GeotaggingString_City;\n        private GeotaggingString_Cities;\n        private GeotaggingString_Town;\n        private GeotaggingString_Towns;\n        private GeotaggingString_Province;\n        private GeotaggingString_Provinces;\n        private GeotaggingString_County;\n        private GeotaggingString_Counties;\n        private GeotaggingString_Village;\n        private GeotaggingString_Villages;\n        private GeotaggingString_Post;\n        private GeotaggingString_Zip;\n        private GeotaggingString_Code;\n        private GeotaggingString_Place;\n        private GeotaggingString_Places;\n        private GeotaggingString_Address;\n        private GeotaggingString_Addresses;\n        private GeotaggingString_Street;\n        private GeotaggingString_Streets;\n        private GeotaggingString_Longitude;\n        private GeotaggingString_Longitude_Short;\n        private GeotaggingString_Latitude;\n        private GeotaggingString_Latitude_Short;\n        private GeotaggingString_PostalCode;\n        private GeotaggingString_PostalCodes;\n        private GeotaggingString_ZipCode;\n        private GeotaggingString_ZipCodes;\n        private GeotaggingString_Territory;\n        private GeotaggingString_Territories;\n        private GeotaggingString_VRMBackCompat_CountryRegion = \"CountryRegion\";\n        private GeotaggingString_VRMBackCompat_StateOrProvince = \"StateOrProvince\";\n\n        constructor(getLocalized: (string) => string) {\n            this.GeotaggingString_Continent = getLocalized(\"GeotaggingString_Continent\").toLowerCase();\n            this.GeotaggingString_Continents = getLocalized(\"GeotaggingString_Continents\").toLowerCase();\n            this.GeotaggingString_Country = getLocalized(\"GeotaggingString_Country\").toLowerCase();\n            this.GeotaggingString_Countries = getLocalized(\"GeotaggingString_Countries\").toLowerCase();\n            this.GeotaggingString_State = getLocalized(\"GeotaggingString_State\").toLowerCase();\n            this.GeotaggingString_States = getLocalized(\"GeotaggingString_States\").toLowerCase();\n            this.GeotaggingString_City = getLocalized(\"GeotaggingString_City\").toLowerCase();\n            this.GeotaggingString_Cities = getLocalized(\"GeotaggingString_Cities\").toLowerCase();\n            this.GeotaggingString_Town = getLocalized(\"GeotaggingString_Town\").toLowerCase();\n            this.GeotaggingString_Towns = getLocalized(\"GeotaggingString_Towns\").toLowerCase();\n            this.GeotaggingString_Province = getLocalized(\"GeotaggingString_Province\").toLowerCase();\n            this.GeotaggingString_Provinces = getLocalized(\"GeotaggingString_Provinces\").toLowerCase();\n            this.GeotaggingString_County = getLocalized(\"GeotaggingString_County\").toLowerCase();\n            this.GeotaggingString_Counties = getLocalized(\"GeotaggingString_Counties\").toLowerCase();\n            this.GeotaggingString_Village = getLocalized(\"GeotaggingString_Village\").toLowerCase();\n            this.GeotaggingString_Villages = getLocalized(\"GeotaggingString_Villages\").toLowerCase();\n            this.GeotaggingString_Post = getLocalized(\"GeotaggingString_Post\").toLowerCase();\n            this.GeotaggingString_Zip = getLocalized(\"GeotaggingString_Zip\").toLowerCase();\n            this.GeotaggingString_Code = getLocalized(\"GeotaggingString_Code\").toLowerCase();\n            this.GeotaggingString_Place = getLocalized(\"GeotaggingString_Place\").toLowerCase();\n            this.GeotaggingString_Places = getLocalized(\"GeotaggingString_Places\").toLowerCase();\n            this.GeotaggingString_Address = getLocalized(\"GeotaggingString_Address\").toLowerCase();\n            this.GeotaggingString_Addresses = getLocalized(\"GeotaggingString_Addresses\").toLowerCase();\n            this.GeotaggingString_Street = getLocalized(\"GeotaggingString_Street\").toLowerCase();\n            this.GeotaggingString_Streets = getLocalized(\"GeotaggingString_Streets\").toLowerCase();\n            this.GeotaggingString_Longitude = getLocalized(\"GeotaggingString_Longitude\").toLowerCase();\n            this.GeotaggingString_Longitude_Short = getLocalized(\"GeotaggingString_Longitude_Short\").toLowerCase();\n            this.GeotaggingString_Latitude = getLocalized(\"GeotaggingString_Latitude\").toLowerCase();\n            this.GeotaggingString_Latitude_Short = getLocalized(\"GeotaggingString_Latitude_Short\").toLowerCase();\n            this.GeotaggingString_PostalCode = getLocalized(\"GeotaggingString_PostalCode\").toLowerCase();\n            this.GeotaggingString_PostalCodes = getLocalized(\"GeotaggingString_PostalCodes\").toLowerCase();\n            this.GeotaggingString_ZipCode = getLocalized(\"GeotaggingString_ZipCode\").toLowerCase();\n            this.GeotaggingString_ZipCodes = getLocalized(\"GeotaggingString_ZipCodes\").toLowerCase();\n            this.GeotaggingString_Territory = getLocalized(\"GeotaggingString_Territory\").toLowerCase();\n            this.GeotaggingString_Territories = getLocalized(\"GeotaggingString_Territories\").toLowerCase();\n        }\n\n        public isLongitudeOrLatitude(fieldRefName: string): boolean {\n            return this.isLongitude(fieldRefName) ||\n                this.isLatitude(fieldRefName);\n        }\n\n        public isGeographic(fieldRefName: string): boolean {\n            return this.isLongitudeOrLatitude(fieldRefName) ||\n                this.isGeocodable(fieldRefName);\n        }\n\n        public isGeocodable(fieldRefName: string): boolean {\n            return this.isAddress(fieldRefName) ||\n                this.isCity(fieldRefName) ||\n                this.isContinent(fieldRefName) ||\n                this.isCountry(fieldRefName) ||\n                this.isCounty(fieldRefName) ||\n                this.isStateOrProvince(fieldRefName) ||\n                this.isPlace(fieldRefName) ||\n                this.isPostalCode(fieldRefName) ||\n                this.isTerritory(fieldRefName);\n        }\n\n        public isGeoshapable(fieldRefName: string): boolean {\n            return this.isCity(fieldRefName) ||\n                this.isCountry(fieldRefName) ||\n                this.isCounty(fieldRefName) ||\n                this.isStateOrProvince(fieldRefName) ||\n                this.isPostalCode(fieldRefName) ||\n                this.isTerritory(fieldRefName) ||\n                this.isGeoshapableEnglish(fieldRefName);\n        }\n\n        private isGeoshapableEnglish(fieldRefName: string): boolean {\n            return this.isEnglishCity(fieldRefName) ||\n                this.isEnglishCountry(fieldRefName) ||\n                this.isEnglishCounty(fieldRefName) ||\n                this.isEnglishStateOrProvince(fieldRefName) ||\n                this.isEnglishPostalCode(fieldRefName) ||\n                this.isEnglishTerritory(fieldRefName);\n        }\n\n        private isAddress(fieldRefName: string): boolean {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                this.GeotaggingString_Address,\n                this.GeotaggingString_Addresses,\n                this.GeotaggingString_Street,\n                this.GeotaggingString_Streets\n            ]);\n        }\n\n        private isPlace(fieldRefName: string): boolean {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                this.GeotaggingString_Place,\n                this.GeotaggingString_Places\n            ]);\n        }\n\n        private isCity(fieldRefName: string): boolean {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                this.GeotaggingString_City,\n                this.GeotaggingString_Cities,\n                this.GeotaggingString_Town,\n                this.GeotaggingString_Towns,\n                this.GeotaggingString_Village,\n                this.GeotaggingString_Villages\n            ]);\n        }\n\n        private isStateOrProvince(fieldRefName: string): boolean {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                this.GeotaggingString_State,\n                this.GeotaggingString_States,\n                this.GeotaggingString_Province,\n                this.GeotaggingString_Provinces,\n                this.GeotaggingString_VRMBackCompat_StateOrProvince,\n            ]);\n        }\n\n        private isCountry(fieldRefName: string): boolean {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                this.GeotaggingString_Country,\n                this.GeotaggingString_Countries,\n                this.GeotaggingString_VRMBackCompat_CountryRegion\n            ]);\n        }\n\n        private isCounty(fieldRefName: string): boolean {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                this.GeotaggingString_County,\n                this.GeotaggingString_Counties\n            ]);\n        }\n\n        private isContinent(fieldRefName: string): boolean {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                this.GeotaggingString_Continent,\n                this.GeotaggingString_Continents\n            ]);\n        }\n\n        private isPostalCode(fieldRefName: string): boolean {\n            let result =\n                (GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                    this.GeotaggingString_Post,\n                    this.GeotaggingString_Zip])\n                    && GeoTaggingAnalyzerService.hasMatches(fieldRefName, [this.GeotaggingString_Code])) ||\n                GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                    this.GeotaggingString_PostalCode,\n                    this.GeotaggingString_PostalCodes,\n                    this.GeotaggingString_ZipCode,\n                    this.GeotaggingString_ZipCodes\n                ]);\n\n            //Check again for strings without whitespace\n            if (!result) {\n                let whiteSpaceRegex = /\\s+/;\n                let fieldNameWithoutWhitespace = fieldRefName.replace(whiteSpaceRegex, \"\");\n                result = GeoTaggingAnalyzerService.hasMatches(fieldNameWithoutWhitespace, [\n                    this.GeotaggingString_PostalCode.replace(whiteSpaceRegex, ''),\n                    this.GeotaggingString_PostalCodes.replace(whiteSpaceRegex, ''),\n                    this.GeotaggingString_ZipCode.replace(whiteSpaceRegex, ''),\n                    this.GeotaggingString_ZipCodes.replace(whiteSpaceRegex, '')\n                ]);\n            }\n\n            return result;\n        }\n\n        private isLongitude(fieldRefName: string): boolean {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [this.GeotaggingString_Longitude])\n                || GeoTaggingAnalyzerService.hasMatches(fieldRefName, [this.GeotaggingString_Longitude_Short], true /* useStrict */);\n        }\n\n        private isLatitude(fieldRefName: string): boolean {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [this.GeotaggingString_Latitude])\n                || GeoTaggingAnalyzerService.hasMatches(fieldRefName, [this.GeotaggingString_Latitude_Short], true /* useStrict */);\n        }\n\n        private isTerritory(fieldRefName: string): boolean {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                this.GeotaggingString_Territory,\n                this.GeotaggingString_Territories\n            ]);\n        }\n\n        private static hasMatches(fieldName: string, possibleMatches: string[], useStrict?: boolean): boolean {\n            let nonWordRegex = /\\W/;\n            let value = fieldName.toLowerCase();\n            for (let i = 0, len = possibleMatches.length; i < len; i++) {\n                let possibleMatch = possibleMatches[i].toLowerCase();\n                if (!useStrict) {\n                    if (value.indexOf(possibleMatch) > -1)\n                        return true;\n                }\n                else {\n                    let indexofpossibleMatch = value.indexOf(possibleMatch);\n                    if (indexofpossibleMatch > -1) {\n                        let wordEndFlag, wordBeginFlag: boolean;\n                        wordEndFlag = wordBeginFlag = true;\n                        if (indexofpossibleMatch - 1 > 0)\n                            wordBeginFlag = nonWordRegex.test(value[indexofpossibleMatch - 1]);\n                        if (indexofpossibleMatch + possibleMatch.length < value.length)\n                            wordEndFlag = nonWordRegex.test(value[indexofpossibleMatch + possibleMatch.length]);\n                        if (wordBeginFlag && wordEndFlag)\n                            return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        public getFieldType(fieldName: string): string {\n            if (fieldName == null)\n                return undefined;\n            if (this.isLatitude(fieldName))\n                return CategoryTypes.Latitude;\n            if (this.isLongitude(fieldName))\n                return CategoryTypes.Longitude;\n            if (this.isPostalCode(fieldName))\n                return CategoryTypes.PostalCode;\n            if (this.isAddress(fieldName))\n                return CategoryTypes.Address;\n            if (this.isPlace(fieldName))\n                return CategoryTypes.Place;\n            if (this.isCity(fieldName))\n                return CategoryTypes.City;\n            if (this.isCountry(fieldName))\n                return CategoryTypes.CountryRegion;\n            if (this.isCounty(fieldName))\n                return CategoryTypes.County;\n            if (this.isStateOrProvince(fieldName))\n                return CategoryTypes.StateOrProvince;\n            if (this.isContinent(fieldName))\n                return CategoryTypes.Continent;\n            return this.getEnglishFieldType(fieldName);\n        }\n\n        private isEnglishAddress(fieldRefName: string): boolean {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                EnglishBackup.GeotaggingString_Address,\n                EnglishBackup.GeotaggingString_Addresses,\n                EnglishBackup.GeotaggingString_Street,\n                EnglishBackup.GeotaggingString_Streets\n            ]);\n        }\n\n        private isEnglishPlace(fieldRefName: string): boolean {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                EnglishBackup.GeotaggingString_Place,\n                EnglishBackup.GeotaggingString_Places\n            ]);\n        }\n\n        private isEnglishCity(fieldRefName: string): boolean {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                EnglishBackup.GeotaggingString_City,\n                EnglishBackup.GeotaggingString_Cities,\n                EnglishBackup.GeotaggingString_Town,\n                EnglishBackup.GeotaggingString_Towns,\n                EnglishBackup.GeotaggingString_Village,\n                EnglishBackup.GeotaggingString_Villages\n            ]);\n        }\n\n        private isEnglishStateOrProvince(fieldRefName: string): boolean {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                EnglishBackup.GeotaggingString_State,\n                EnglishBackup.GeotaggingString_States,\n                EnglishBackup.GeotaggingString_Province,\n                EnglishBackup.GeotaggingString_Provinces,\n                EnglishBackup.GeotaggingString_VRMBackCompat_StateOrProvince,\n            ]);\n        }\n\n        private isEnglishCountry(fieldRefName: string): boolean {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                EnglishBackup.GeotaggingString_Country,\n                EnglishBackup.GeotaggingString_Countries,\n                EnglishBackup.GeotaggingString_VRMBackCompat_CountryRegion\n            ]);\n        }\n\n        private isEnglishCounty(fieldRefName: string): boolean {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                EnglishBackup.GeotaggingString_County,\n                EnglishBackup.GeotaggingString_Counties\n            ]);\n        }\n\n        private isEnglishContinent(fieldRefName: string): boolean {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                EnglishBackup.GeotaggingString_Continent,\n                EnglishBackup.GeotaggingString_Continents\n            ]);\n        }\n\n        private isEnglishPostalCode(fieldRefName: string): boolean {\n            let result =\n                (GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                    EnglishBackup.GeotaggingString_Post,\n                    EnglishBackup.GeotaggingString_Zip])\n                && GeoTaggingAnalyzerService.hasMatches(fieldRefName, [this.GeotaggingString_Code])) ||\n                GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                    EnglishBackup.GeotaggingString_PostalCode,\n                    EnglishBackup.GeotaggingString_PostalCodes,\n                    EnglishBackup.GeotaggingString_ZipCode,\n                    EnglishBackup.GeotaggingString_ZipCodes\n                ]);\n\n            //Check again for strings without whitespace\n            if (!result) {\n                let whiteSpaceRegexPattern = new RegExp('\\s');\n                result = GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                    EnglishBackup.GeotaggingString_PostalCode.replace(whiteSpaceRegexPattern, ''),\n                    EnglishBackup.GeotaggingString_PostalCodes.replace(whiteSpaceRegexPattern, ''),\n                    EnglishBackup.GeotaggingString_ZipCode.replace(whiteSpaceRegexPattern, ''),\n                    EnglishBackup.GeotaggingString_ZipCodes.replace(whiteSpaceRegexPattern, '')\n                ]);\n            }\n\n            return result;\n        }\n\n        private isEnglishLongitude(fieldRefName: string): boolean {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                EnglishBackup.GeotaggingString_Longitude,\n                EnglishBackup.GeotaggingString_Longitude_Short\n            ]);\n        }\n\n        private isEnglishLatitude(fieldRefName: string): boolean {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                EnglishBackup.GeotaggingString_Latitude,\n                EnglishBackup.GeotaggingString_Latitude_Short\n            ]);\n        }\n\n        protected isEnglishTerritory(fieldRefName: string): boolean {\n            return GeoTaggingAnalyzerService.hasMatches(fieldRefName, [\n                EnglishBackup.GeotaggingString_Territory,\n                EnglishBackup.GeotaggingString_Territories\n            ]);\n        }\n\n        private getEnglishFieldType(fieldName: string): string {\n            if (fieldName == null)\n                return undefined;\n            if (this.isEnglishLatitude(fieldName))\n                return CategoryTypes.Latitude;\n            if (this.isEnglishLongitude(fieldName))\n                return CategoryTypes.Longitude;\n            if (this.isEnglishPostalCode(fieldName))\n                return CategoryTypes.PostalCode;\n            if (this.isEnglishAddress(fieldName))\n                return CategoryTypes.Address;\n            if (this.isEnglishPlace(fieldName))\n                return CategoryTypes.Place;\n            if (this.isEnglishCity(fieldName))\n                return CategoryTypes.City;\n            if (this.isEnglishCountry(fieldName))\n                return CategoryTypes.CountryRegion;\n            if (this.isEnglishCounty(fieldName))\n                return CategoryTypes.County;\n            if (this.isEnglishStateOrProvince(fieldName))\n                return CategoryTypes.StateOrProvince;\n            if (this.isEnglishContinent(fieldName))\n                return CategoryTypes.Continent;\n            return undefined;\n        }\n    }\n} ","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\ndeclare var DEBUG: boolean;\n\nif (typeof DEBUG === 'undefined') var DEBUG = true;","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule powerbi {\n    import IStringResourceProvider = jsCommon.IStringResourceProvider;\n\n    export interface ILocalizableError {\n        getDetails(resourceProvider: IStringResourceProvider): ErrorDetails;\n    }\n\n    export interface IClientError extends ILocalizableError {\n        code: string;\n        debugInfo?: string;\n        ignorable?: boolean;\n        requestId?: string;\n    }\n\n    export interface IClientWarning extends ILocalizableError {\n        code: string;\n        columnNameFromIndex: (index: number) => string;\n    }\n\n    export class UnknownClientError implements IClientError {\n        public get code(): string {\n            return 'UnknownClientError';\n        }\n        public get ignorable(): boolean {\n            return false;\n        }\n\n        public getDetails(resourceProvider: IStringResourceProvider): ErrorDetails {\n            let details: ErrorDetails = {\n                message: resourceProvider.get('ClientError_UnknownClientErrorValue'),\n                additionalErrorInfo: [{ errorInfoKey: resourceProvider.get('ClientError_UnknownClientErrorKey'), errorInfoValue: resourceProvider.get('ClientError_UnknownClientErrorValue'), }],\n            };\n\n            return details;\n        }\n    }\n\n    export class HttpClientError implements IClientError {\n        private httpRequestId: string;\n        private httpStatusCode: number;\n        \n        constructor(httpStatusCode: number, requestId: string) {\n            debug.assertValue(httpStatusCode, 'httpStatusCode');\n            debug.assertValue(requestId, 'requestId');\n            this.httpStatusCode = httpStatusCode;\n            this.httpRequestId = requestId;\n        }\n\n        public get code(): string {\n            return 'HttpClientError';\n        }\n\n        public get ignorable(): boolean {\n            return false;\n        }\n\n        public get requestId(): string {\n            return this.httpRequestId;\n        }\n\n        public getDetails(resourceProvider: IStringResourceProvider): ErrorDetails {\n            // Use a general error message for a HTTP request failure, since we currently do not know of any specifc error cases at this point in time.\n            let details: ErrorDetails = {\n                message: null,\n                additionalErrorInfo: [\n                    { errorInfoKey: resourceProvider.get('DsrError_Key'), errorInfoValue: resourceProvider.get('DsrError_UnknownErrorValue')},\n                    { errorInfoKey: resourceProvider.get('ClientError_HttpResponseStatusCodeKey'), errorInfoValue: this.httpStatusCode.toString() }],\n            };\n\n            return details;\n        }\n    }\n\n    export class IgnorableClientError implements IClientError {\n        public get code(): string {\n            return 'IgnorableClientError';\n        }\n        public get ignorable(): boolean {\n            return true;\n        }\n\n        public getDetails(resourceProvider: IStringResourceProvider): ErrorDetails {\n            let details: ErrorDetails = {\n                message: '',\n                additionalErrorInfo: [],\n            };\n\n            return details;\n        }\n    }\n}  ","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule jsCommon {\n    export interface ArrayIdItems<T> extends Array<T> {\n        withId(id: number): T;\n    }\n\n    export interface ArrayNamedItems<T> extends Array<T> {\n        withName(name: string): T;\n    }\n\n    export module ArrayExtensions {\n        /**\n         * Returns items that exist in target and other.\n         */\n        export function intersect<T>(target: T[], other: T[]): T[] {\n            let result: T[] = [];\n            for (let i = target.length - 1; i >= 0; --i) {\n                if (other.indexOf(target[i]) !== -1) {\n                    result.push(target[i]);\n                }\n            }\n            return result;\n        }\n\n        /**\n         * Return elements exists in target but not exists in other.\n         */\n        export function diff<T>(target: T[], other: T[]): T[] {\n            let result: T[] = [];\n            for (let i = target.length - 1; i >= 0; --i) {\n                let value: T = target[i];\n                if (other.indexOf(value) === -1) {\n                    result.push(value);\n                }\n            }\n            return result;\n        }\n\n        /** \n         * Return an array with only the distinct items in the source. \n         */\n        export function distinct<T>(source: T[]): T[] {\n            let result: T[] = [];\n            for (let i = 0, len = source.length; i < len; i++) {\n                let value: T = source[i];\n                if (result.indexOf(value) === -1) {\n                    result.push(value);\n                }\n            }\n            return result;\n        }\n        \n        /**\n         * Pushes content of source onto target,\n         * for parts of course that do not already exist in target.\n         */\n        export function union<T>(target: T[], source: T[]): void {\n            for (let i = 0, len = source.length; i < len; ++i) {\n                unionSingle(target, source[i]);\n            }\n        }\n\n        /**\n         * Pushes value onto target, if value does not already exist in target.\n         */\n        export function unionSingle<T>(target: T[], value: T): void {\n            if (target.indexOf(value) < 0) {\n                target.push(value);\n            }\n        }\n        \n        /**\n         * Returns an array with a range of items from source,\n         * including the startIndex & endIndex.\n         */\n        export function range<T>(source: T[], startIndex: number, endIndex: number): T[] {\n            debug.assert(startIndex >= 0 && startIndex < source.length, 'startIndex is out of range.');\n            debug.assert(endIndex >= 0 && endIndex < source.length, 'endIndex is out of range.');\n\n            let result: T[] = [];\n            for (let i = startIndex; i <= endIndex; ++i) {\n                result.push(source[i]);\n            }\n            return result;\n        }\n\n        /**\n         * Returns an array that includes items from source, up to the specified count.\n         */\n        export function take<T>(source: T[], count: number): T[] {\n            debug.assert(count >= 0, 'Count is negative.');\n            debug.assert(count <= source.length, 'Count is too large.');\n\n            let result: T[] = [];\n            for (let i = 0; i < count; ++i) {\n                result.push(source[i]);\n            }\n            return result;\n        }\n\n        export function copy<T>(source: T[]): T[] {\n            debug.assertValue(source, 'source');\n\n            return take(source, source.length);\n        }\n\n        /**\n         * Returns a value indicating whether the arrays have the same values in the same sequence.\n         */\n        export function sequenceEqual<T>(left: T[], right: T[], comparison: (x: T, y: T) => boolean): boolean {\n            debug.assertValue(comparison, 'comparison');\n\n            if (left === right) {\n                return true;\n            }\n\n            if (!!left !== !!right) {\n                return false;\n            }\n\n            let len = left.length;\n            if (len !== right.length) {\n                return false;\n            }\n\n            let i = 0;\n            while (i < len && comparison(left[i], right[i])) {\n                ++i;\n            }\n\n            return i === len;\n        }\n\n        /**\n         * Returns null if the specified array is empty.  \n         * Otherwise returns the specified array.\n         */\n        export function emptyToNull<T>(array: T[]): T[] {\n            if (array && array.length === 0) {\n                return null;\n            }\n            return array;\n        }\n\n        export function indexOf<T>(array: T[], predicate: (T) => boolean): number {\n            debug.assertValue(array, 'array');\n            debug.assertValue(predicate, 'predicate');\n\n            for (let i = 0, len = array.length; i < len; ++i) {\n                if (predicate(array[i])) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n\n        /**\n         * Returns a copy of the array rotated by the specified offset.\n         */\n        export function rotate<T>(array: T[], offset: number): T[] {\n            if (offset === 0)\n                return array.slice();\n\n            let rotated = array.slice(offset);\n            Array.prototype.push.apply(rotated, array.slice(0, offset));\n\n            return rotated;\n        }\n\n        export function createWithId<T>(): ArrayIdItems<T> {\n            return extendWithId<T>([]);\n        }\n\n        export function extendWithId<T>(array: { id: number }[]): ArrayIdItems<T> {\n            debug.assertValue(array, 'array');\n\n            let extended: ArrayIdItems<T> = <any>array;\n            extended.withId = withId;\n\n            return extended;\n        }\n\n        /**\n         * Finds and returns the first item with a matching ID.\n         */\n        export function findWithId<T>(array: T[], id: number): T {\n            for (let i = 0, len = array.length; i < len; i++) {\n                let item = array[i];\n                if ((<any>item).id === id)\n                    return item;\n            }\n        }\n\n        function withId<T>(id: number): T {\n            return ArrayExtensions.findWithId<T>(this, id);\n        }\n\n        export function createWithName<T>(): ArrayNamedItems<T> {\n            return extendWithName<T>([]);\n        }\n\n        export function extendWithName<T>(array: { name: string }[]): ArrayNamedItems<T> {\n            debug.assertValue(array, 'array');\n\n            let extended: ArrayNamedItems<T> = <any>array;\n            extended.withName = withName;\n\n            return extended;\n        }\n\n        export function findItemWithName<T>(array: T[], name: string): T {\n            let index = indexWithName(array, name);\n            if (index >= 0)\n                return array[index];\n        }\n\n        export function indexWithName<T>(array: T[], name: string): number {\n            for (let i = 0, len = array.length; i < len; i++) {\n                let item = array[i];\n                if ((<any>item).name === name)\n                    return i;\n            }\n\n            return -1;\n        }\n\n        /**\n         * Finds and returns the first item with a matching name.\n         */\n        function withName<T>(name: string): T {\n            let array: T[] = this;\n            return findItemWithName(array, name);\n        }\n\n        /**\n         * Deletes all items from the array.\n         */\n        export function clear(array: any[]): void {\n            if (!array)\n                return;\n\n            while (array.length > 0)\n                array.pop();\n        }\n\n        export function isUndefinedOrEmpty(array: any[]): boolean {\n            if (!array || array.length === 0) {\n                return true;\n            }\n            return false;\n        }\n\n        export function swap<T>(array: T[], firstIndex: number, secondIndex: number): void {\n            let temp = array[firstIndex];\n            array[firstIndex] = array[secondIndex];\n            array[secondIndex] = temp;\n        }\n\n        export function isInArray<T>(array: T[], lookupItem: T, compareCallback: (item1: T, item2: T) => boolean): boolean {\n            return _.any(array, item => compareCallback(item, lookupItem));\n        }\n    }\n} ","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule InJs {\n    export module DomFactory {\n\n        export function div(): JQuery {\n            return $('<div/>');\n        }\n\n        export function span(): JQuery {\n            return $('<span/>');\n        }\n\n        export function checkbox(): JQuery {\n            return $('<input type=\"checkbox\"/>');\n        }\n\n        export function ul(): JQuery {\n            return $('<ul/>');\n        }\n\n        export function li(): JQuery {\n            return $('<li/>');\n        }\n\n        export function button(): JQuery {\n            return $('<input type=\"button\"/>');\n        }\n\n        export function select(): JQuery {\n            return $('<select/>');\n        }\n\n        export function textBox(): JQuery {\n            return $('<input type=\"text\"/>');\n        }\n\n        export function img(): JQuery {\n            return $('<img/>');\n        }\n\n        export function iframe(): JQuery {\n            return $('<iframe/>');\n        }\n    }\n}","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule powerbi {\n\n    /**\n     * Module Double contains a set of constants and precision based utility methods \n     * for dealing with doubles and their decimal garbage in the javascript.\n     */\n    export module Double {\n\n        // Constants.\n        export const MIN_VALUE = -Number.MAX_VALUE;\n        export const MAX_VALUE = Number.MAX_VALUE;\n        export const MIN_EXP = -308;\n        export const MAX_EXP = 308;\n        export const EPSILON = 1E-323;\n        export const DEFAULT_PRECISION = 0.0001;\n        export const DEFAULT_PRECISION_IN_DECIMAL_DIGITS = 12;\n        export const LOG_E_10 = Math.log(10);\n        export const POSITIVE_POWERS = [\n            1E0, 1E1, 1E2, 1E3, 1E4, 1E5, 1E6, 1E7, 1E8, 1E9, 1E10, 1E11, 1E12, 1E13, 1E14, 1E15, 1E16, 1E17, 1E18, 1E19, 1E20, 1E21, 1E22, 1E23, 1E24, 1E25, 1E26, 1E27, 1E28, 1E29, 1E30, 1E31, 1E32, 1E33, 1E34, 1E35, 1E36, 1E37, 1E38, 1E39, 1E40, 1E41, 1E42, 1E43, 1E44, 1E45, 1E46, 1E47, 1E48, 1E49, 1E50, 1E51, 1E52, 1E53, 1E54, 1E55, 1E56, 1E57, 1E58, 1E59, 1E60, 1E61, 1E62, 1E63, 1E64, 1E65, 1E66, 1E67, 1E68, 1E69, 1E70, 1E71, 1E72, 1E73, 1E74, 1E75, 1E76, 1E77, 1E78, 1E79, 1E80, 1E81, 1E82, 1E83, 1E84, 1E85, 1E86, 1E87, 1E88, 1E89, 1E90, 1E91, 1E92, 1E93, 1E94, 1E95, 1E96, 1E97, 1E98, 1E99,\n            1E100, 1E101, 1E102, 1E103, 1E104, 1E105, 1E106, 1E107, 1E108, 1E109, 1E110, 1E111, 1E112, 1E113, 1E114, 1E115, 1E116, 1E117, 1E118, 1E119, 1E120, 1E121, 1E122, 1E123, 1E124, 1E125, 1E126, 1E127, 1E128, 1E129, 1E130, 1E131, 1E132, 1E133, 1E134, 1E135, 1E136, 1E137, 1E138, 1E139, 1E140, 1E141, 1E142, 1E143, 1E144, 1E145, 1E146, 1E147, 1E148, 1E149, 1E150, 1E151, 1E152, 1E153, 1E154, 1E155, 1E156, 1E157, 1E158, 1E159, 1E160, 1E161, 1E162, 1E163, 1E164, 1E165, 1E166, 1E167, 1E168, 1E169, 1E170, 1E171, 1E172, 1E173, 1E174, 1E175, 1E176, 1E177, 1E178, 1E179, 1E180, 1E181, 1E182, 1E183, 1E184, 1E185, 1E186, 1E187, 1E188, 1E189, 1E190, 1E191, 1E192, 1E193, 1E194, 1E195, 1E196, 1E197, 1E198, 1E199,\n            1E200, 1E201, 1E202, 1E203, 1E204, 1E205, 1E206, 1E207, 1E208, 1E209, 1E210, 1E211, 1E212, 1E213, 1E214, 1E215, 1E216, 1E217, 1E218, 1E219, 1E220, 1E221, 1E222, 1E223, 1E224, 1E225, 1E226, 1E227, 1E228, 1E229, 1E230, 1E231, 1E232, 1E233, 1E234, 1E235, 1E236, 1E237, 1E238, 1E239, 1E240, 1E241, 1E242, 1E243, 1E244, 1E245, 1E246, 1E247, 1E248, 1E249, 1E250, 1E251, 1E252, 1E253, 1E254, 1E255, 1E256, 1E257, 1E258, 1E259, 1E260, 1E261, 1E262, 1E263, 1E264, 1E265, 1E266, 1E267, 1E268, 1E269, 1E270, 1E271, 1E272, 1E273, 1E274, 1E275, 1E276, 1E277, 1E278, 1E279, 1E280, 1E281, 1E282, 1E283, 1E284, 1E285, 1E286, 1E287, 1E288, 1E289, 1E290, 1E291, 1E292, 1E293, 1E294, 1E295, 1E296, 1E297, 1E298, 1E299,\n            1E300, 1E301, 1E302, 1E303, 1E304, 1E305, 1E306, 1E307, 1E308];\n        export const NEGATIVE_POWERS = [\n            1E0, 1E-1, 1E-2, 1E-3, 1E-4, 1E-5, 1E-6, 1E-7, 1E-8, 1E-9, 1E-10, 1E-11, 1E-12, 1E-13, 1E-14, 1E-15, 1E-16, 1E-17, 1E-18, 1E-19, 1E-20, 1E-21, 1E-22, 1E-23, 1E-24, 1E-25, 1E-26, 1E-27, 1E-28, 1E-29, 1E-30, 1E-31, 1E-32, 1E-33, 1E-34, 1E-35, 1E-36, 1E-37, 1E-38, 1E-39, 1E-40, 1E-41, 1E-42, 1E-43, 1E-44, 1E-45, 1E-46, 1E-47, 1E-48, 1E-49, 1E-50, 1E-51, 1E-52, 1E-53, 1E-54, 1E-55, 1E-56, 1E-57, 1E-58, 1E-59, 1E-60, 1E-61, 1E-62, 1E-63, 1E-64, 1E-65, 1E-66, 1E-67, 1E-68, 1E-69, 1E-70, 1E-71, 1E-72, 1E-73, 1E-74, 1E-75, 1E-76, 1E-77, 1E-78, 1E-79, 1E-80, 1E-81, 1E-82, 1E-83, 1E-84, 1E-85, 1E-86, 1E-87, 1E-88, 1E-89, 1E-90, 1E-91, 1E-92, 1E-93, 1E-94, 1E-95, 1E-96, 1E-97, 1E-98, 1E-99,\n            1E-100, 1E-101, 1E-102, 1E-103, 1E-104, 1E-105, 1E-106, 1E-107, 1E-108, 1E-109, 1E-110, 1E-111, 1E-112, 1E-113, 1E-114, 1E-115, 1E-116, 1E-117, 1E-118, 1E-119, 1E-120, 1E-121, 1E-122, 1E-123, 1E-124, 1E-125, 1E-126, 1E-127, 1E-128, 1E-129, 1E-130, 1E-131, 1E-132, 1E-133, 1E-134, 1E-135, 1E-136, 1E-137, 1E-138, 1E-139, 1E-140, 1E-141, 1E-142, 1E-143, 1E-144, 1E-145, 1E-146, 1E-147, 1E-148, 1E-149, 1E-150, 1E-151, 1E-152, 1E-153, 1E-154, 1E-155, 1E-156, 1E-157, 1E-158, 1E-159, 1E-160, 1E-161, 1E-162, 1E-163, 1E-164, 1E-165, 1E-166, 1E-167, 1E-168, 1E-169, 1E-170, 1E-171, 1E-172, 1E-173, 1E-174, 1E-175, 1E-176, 1E-177, 1E-178, 1E-179, 1E-180, 1E-181, 1E-182, 1E-183, 1E-184, 1E-185, 1E-186, 1E-187, 1E-188, 1E-189, 1E-190, 1E-191, 1E-192, 1E-193, 1E-194, 1E-195, 1E-196, 1E-197, 1E-198, 1E-199,\n            1E-200, 1E-201, 1E-202, 1E-203, 1E-204, 1E-205, 1E-206, 1E-207, 1E-208, 1E-209, 1E-210, 1E-211, 1E-212, 1E-213, 1E-214, 1E-215, 1E-216, 1E-217, 1E-218, 1E-219, 1E-220, 1E-221, 1E-222, 1E-223, 1E-224, 1E-225, 1E-226, 1E-227, 1E-228, 1E-229, 1E-230, 1E-231, 1E-232, 1E-233, 1E-234, 1E-235, 1E-236, 1E-237, 1E-238, 1E-239, 1E-240, 1E-241, 1E-242, 1E-243, 1E-244, 1E-245, 1E-246, 1E-247, 1E-248, 1E-249, 1E-250, 1E-251, 1E-252, 1E-253, 1E-254, 1E-255, 1E-256, 1E-257, 1E-258, 1E-259, 1E-260, 1E-261, 1E-262, 1E-263, 1E-264, 1E-265, 1E-266, 1E-267, 1E-268, 1E-269, 1E-270, 1E-271, 1E-272, 1E-273, 1E-274, 1E-275, 1E-276, 1E-277, 1E-278, 1E-279, 1E-280, 1E-281, 1E-282, 1E-283, 1E-284, 1E-285, 1E-286, 1E-287, 1E-288, 1E-289, 1E-290, 1E-291, 1E-292, 1E-293, 1E-294, 1E-295, 1E-296, 1E-297, 1E-298, 1E-299,\n            1E-300, 1E-301, 1E-302, 1E-303, 1E-304, 1E-305, 1E-306, 1E-307, 1E-308, 1E-309, 1E-310, 1E-311, 1E-312, 1E-313, 1E-314, 1E-315, 1E-316, 1E-317, 1E-318, 1E-319, 1E-320, 1E-321, 1E-322, 1E-323, 1E-324];\n\n        /**\n         * Returns powers of 10. \n         * Unlike the Math.pow this function produces no decimal garbage.\n         * @param exp Exponent.\n         */\n        export function pow10(exp: number): number {\n            debug.assertValue(exp, \"exp\");\n\n            // Positive & zero\n            if (exp >= 0) {\n                if (exp < Double.POSITIVE_POWERS.length) {\n                    return Double.POSITIVE_POWERS[exp];\n                } else {\n                    return Infinity;\n                }\n            }\n            // Negative\n            exp = -exp;\n            if (exp > 0 && exp < Double.NEGATIVE_POWERS.length) { // if exp==int.MIN_VALUE then changing the sign will overflow and keep the number negative - we need to check for exp > 0 to filter out this corner case\n                return Double.NEGATIVE_POWERS[exp];\n            } else {\n                return 0;\n            }\n        }\n\n        /** \n         * Returns the 10 base logarithm of the number.\n         * Unlike Math.log function this produces integer results with no decimal garbage.\n         * @param val Positive value or zero.\n         */\n        export function log10(val: number): number {\n            debug.assert(val >= 0, \"val\");\n\n            // Fast Log10() algorithm \n            if (val > 1 && val < 1E16) {\n                if (val < 1E8) {\n                    if (val < 1E4) {\n                        if (val < 1E2) {\n                            if (val < 1E1) {\n                                return 0;\n                            } else {\n                                return 1;\n                            }\n                        } else {\n                            if (val < 1E3) {\n                                return 2;\n                            } else {\n                                return 3;\n                            }\n                        }\n                    } else {\n                        if (val < 1E6) {\n                            if (val < 1E5) {\n                                return 4;\n                            } else {\n                                return 5;\n                            }\n                        } else {\n                            if (val < 1E7) {\n                                return 6;\n                            } else {\n                                return 7;\n                            }\n                        }\n                    }\n                } else {\n                    if (val < 1E12) {\n                        if (val < 1E10) {\n                            if (val < 1E9) {\n                                return 8;\n                            } else {\n                                return 9;\n                            }\n                        } else {\n                            if (val < 1E11) {\n                                return 10;\n                            } else {\n                                return 11;\n                            }\n                        }\n                    } else {\n                        if (val < 1E14) {\n                            if (val < 1E13) {\n                                return 12;\n                            } else {\n                                return 13;\n                            }\n                        } else {\n                            if (val < 1E15) {\n                                return 14;\n                            } else {\n                                return 15;\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (val > 1E-16 && val < 1) {\n                if (val < 1E-8) {\n                    if (val < 1E-12) {\n                        if (val < 1E-14) {\n                            if (val < 1E-15) {\n                                return -16;\n                            } else {\n                                return -15;\n                            }\n                        } else {\n                            if (val < 1E-13) {\n                                return -14;\n                            } else {\n                                return -13;\n                            }\n                        }\n                    } else {\n                        if (val < 1E-10) {\n                            if (val < 1E-11) {\n                                return -12;\n                            } else {\n                                return -11;\n                            }\n                        } else {\n                            if (val < 1E-9) {\n                                return -10;\n                            } else {\n                                return -9;\n                            }\n                        }\n                    }\n                } else {\n                    if (val < 1E-4) {\n                        if (val < 1E-6) {\n                            if (val < 1E-7) {\n                                return -8;\n                            } else {\n                                return -7;\n                            }\n                        } else {\n                            if (val < 1E-5) {\n                                return -6;\n                            } else {\n                                return -5;\n                            }\n                        }\n                    } else {\n                        if (val < 1E-2) {\n                            if (val < 1E-3) {\n                                return -4;\n                            } else {\n                                return -3;\n                            }\n                        } else {\n                            if (val < 1E-1) {\n                                return -2;\n                            } else {\n                                return -1;\n                            }\n                        }\n                    }\n                }\n            }\n            // JS Math provides only natural log function so we need to calc the 10 base logarithm:\n            // logb(x) = logk(x)/logk(b); \n            let log10 = Math.log(val) / Double.LOG_E_10;\n            return Double.floorWithPrecision(log10);\n        }\n\n        /**\n         * Returns a power of 10 representing precision of the number based on the number of meaningful decimal digits. \n         * For example the precision of 56,263.3767 with the 6 meaningful decimal digit is 0.1.\n         * @param x Value.\n         * @param decimalDigits How many decimal digits are meaningfull.\n         */\n        export function getPrecision(x: number, decimalDigits?: number): number {\n            if (decimalDigits === undefined) {\n                decimalDigits = Double.DEFAULT_PRECISION_IN_DECIMAL_DIGITS;\n            } else {\n                debug.assert(decimalDigits >= 0, \"decimalDigits\");\n            }\n            if (!x) {\n                return undefined;\n            }\n\n            let exp = Double.log10(Math.abs(x));\n\n            if (exp < Double.MIN_EXP) {\n                return 0;\n            }\n            let precisionExp = Math.max(exp - decimalDigits, -Double.NEGATIVE_POWERS.length + 1);\n            return Double.pow10(precisionExp);\n        }\n\n        /** \n         * Checks if a delta between 2 numbers is less than provided precision.\n         * @param x One value.\n         * @param y Another value.\n         * @param precision Precision value.\n         */\n        export function equalWithPrecision(x: number, y: number, precision?: number): boolean {\n            precision = applyDefault(precision, Double.DEFAULT_PRECISION);\n            debug.assert(precision >= 0, \"precision\");\n\n            return x === y || Math.abs(x - y) < precision;\n        }\n\n        /** \n         * Checks if a first value is less than another taking \n         * into account the loose precision based equality.\n         * @param x One value.\n         * @param y Another value.\n         * @param precision Precision value.\n         */\n        export function lessWithPrecision(x: number, y: number, precision?: number): boolean {\n            precision = applyDefault(precision, Double.DEFAULT_PRECISION);\n            debug.assert(precision >= 0, \"precision\");\n\n            return x < y && Math.abs(x - y) > precision;\n        }\n\n        /** \n         * Checks if a first value is less or equal than another taking \n         * into account the loose precision based equality.\n         * @param x One value.\n         * @param y Another value.\n         * @param precision Precision value.\n         */\n        export function lessOrEqualWithPrecision(x: number, y: number, precision?: number): boolean {\n            precision = applyDefault(precision, Double.DEFAULT_PRECISION);\n            debug.assert(precision >= 0, \"precision\");\n\n            return x < y || Math.abs(x - y) < precision;\n        }\n\n        /** \n         * Checks if a first value is greater than another taking \n         * into account the loose precision based equality.\n         * @param x One value.\n         * @param y Another value.\n         * @param precision Precision value.\n         */\n        export function greaterWithPrecision(x: number, y: number, precision?: number): boolean {\n            precision = applyDefault(precision, Double.DEFAULT_PRECISION);\n            debug.assert(precision >= 0, \"precision\");\n\n            return x > y && Math.abs(x - y) > precision;\n        }\n\n        /** \n         * Checks if a first value is greater or equal to another taking \n         * into account the loose precision based equality.\n         * @param x One value.\n         * @param y Another value.\n         * @param precision Precision value.\n         */\n        export function greaterOrEqualWithPrecision(x: number, y: number, precision?: number): boolean {\n            precision = applyDefault(precision, Double.DEFAULT_PRECISION);\n            debug.assert(precision >= 0, \"precision\");\n\n            return x > y || Math.abs(x - y) < precision;\n        }\n\n        /** \n         * Floors the number unless it's withing the precision distance from the higher int.\n         * @param x One value.\n         * @param precision Precision value.\n         */\n        export function floorWithPrecision(x: number, precision?: number): number {\n            precision = applyDefault(precision, Double.DEFAULT_PRECISION);\n            debug.assert(precision >= 0, \"precision\");\n\n            let roundX = Math.round(x);\n            if (Math.abs(x - roundX) < precision) {\n                return roundX;\n            } else {\n                return Math.floor(x);\n            }\n        }\n\n        /** \n         * Ceils the number unless it's withing the precision distance from the lower int.\n         * @param x One value.\n         * @param precision Precision value.\n         */\n        export function ceilWithPrecision(x: number, precision?: number): number {\n            precision = applyDefault(precision, Double.DEFAULT_PRECISION);\n            debug.assert(precision >= 0, \"precision\");\n\n            let roundX = Math.round(x);\n            if (Math.abs(x - roundX) < precision) {\n                return roundX;\n            } else {\n                return Math.ceil(x);\n            }\n        }\n\n        /** \n         * Floors the number to the provided precision.\n         * For example 234,578 floored to 1,000 precision is 234,000.\n         * @param x One value.\n         * @param precision Precision value.\n         */\n        export function floorToPrecision(x: number, precision?: number): number {\n            precision = applyDefault(precision, Double.DEFAULT_PRECISION);\n            debug.assert(precision >= 0, \"precision\");\n            if (precision === 0 || x === 0) {\n                return x;\n            }\n            //Precision must be a Power of 10\n            return Math.floor(x / precision) * precision;\n        }\n\n        /** \n         * Ceils the number to the provided precision.\n         * For example 234,578 floored to 1,000 precision is 235,000.\n         * @param x One value.\n         * @param precision Precision value.\n         */\n        export function ceilToPrecision(x: number, precision?: number): number {\n            precision = applyDefault(precision, Double.DEFAULT_PRECISION);\n            debug.assert(precision >= 0, \"precision\");\n            if (precision === 0 || x === 0) {\n                return x;\n            }\n            //Precision must be a Power of 10\n            return Math.ceil(x / precision) * precision;\n        }\n\n        /** \n         * Rounds the number to the provided precision. \n         * For example 234,578 floored to 1,000 precision is 235,000.\n         * @param x One value.\n         * @param precision Precision value.\n         */\n        export function roundToPrecision(x: number, precision?: number): number {\n            precision = applyDefault(precision, Double.DEFAULT_PRECISION);\n            debug.assert(precision >= 0, \"precision\");\n            if (precision === 0 || x === 0) {\n                return x;\n            } \n            //Precision must be a Power of 10\n            let result = Math.round(x / precision) * precision;\n            let decimalDigits = Math.round(Double.log10(Math.abs(x)) - Double.log10(precision)) + 1;\n            if (decimalDigits > 0 && decimalDigits < 16) {\n                result = parseFloat(result.toPrecision(decimalDigits));\n            }\n\n            return result;\n        }\n\n        /** \n         * Returns the value making sure that it's restricted to the provided range.\n         * @param x One value.\n         * @param min Range min boundary.\n         * @param max Range max boundary.\n         */\n        export function ensureInRange(x: number, min: number, max: number): number {\n            debug.assert(min <= max, \"min must be less or equal to max\");\n            if (x === undefined || x === null) {\n                return x;\n            }\n            if (x < min) {\n                return min;\n            }\n            if (x > max) {\n                return max;\n            }\n            return x;\n        }\n\n        /** \n         * Rounds the value - this method is actually faster than Math.round - used in the graphics utils.\n         * @param x Value to round.\n         */\n        export function round(x: number): number {\n            debug.assert(x >= 0, \"x must be greater or equal to 0\");\n\n            return (0.5 + x) << 0;\n        }\n\n        /** \n         * Projects the value from the source range into the target range.\n         * @param value Value to project.\n         * @param fromMin Minimum of the source range.\n         * @param toMin Minimum of the target range.\n         * @param toMax Maximum of the target range.\n         */\n        export function project(value: number, fromMin: number, fromSize: number, toMin: number, toSize: number): number {\n            if (fromSize === 0 || toSize === 0) {\n                if (fromMin <= value && value <= fromMin + fromSize) {\n                    return toMin;\n                } else {\n                    return NaN;\n                }\n            }\n            let relativeX = (value - fromMin) / fromSize;\n            let projectedX = toMin + relativeX * toSize;\n            return projectedX;\n        }\n\n        /** \n         * Removes decimal noise.\n         * @param value Value to be processed.\n         */\n        export function removeDecimalNoise(value: number): number {\n            return roundToPrecision(value, getPrecision(value));\n        }\n\n        /** \n         * Checks whether the number is integer.\n         * @param value Value to be checked.\n         */\n        export function isInteger(value: number): boolean {\n            return value !== null && value % 1 === 0;\n        }\n\n        /**\n         * Dividing by increment will give us count of increments\n         * Round out the rough edges into even integer\n         * Multiply back by increment to get rounded value\n         * e.g. Rounder.toIncrement(0.647291, 0.05) => 0.65\n         * @param value - value to round to nearest increment\n         * @param increment - smallest increment to round toward\n         */\n        export function toIncrement(value: number, increment: number): number {\n            return Math.round(value / increment) * increment;\n        }\n    }\n\n    function applyDefault(value: number, defaultValue: number): number {\n        return value !== undefined ? value : defaultValue;\n    }\n}","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule jsCommon {\n    import Double = powerbi.Double;\n\n    export module Color {\n        export function rotate(rgbString: string, rotateFactor: number): string {\n            if (rotateFactor === 0)\n                return rgbString;\n\n            let originalRgb = parseColorString(rgbString);\n            let originalHsv = rgbToHsv(originalRgb);\n            let rotatedHsv = rotateHsv(originalHsv, rotateFactor);\n            let rotatedRgb = hsvToRgb(rotatedHsv);\n            return hexString(rotatedRgb);\n        }\n\n        export function normalizeToHexString(color: string): string {\n            let rgb = parseColorString(color);\n            return hexString(rgb);\n        }\n\n        export function parseColorString(color: string): RgbColor {\n            debug.assertValue(color, 'color');\n\n            if (color.indexOf('#') >= 0) {\n                if (color.length === 7) {\n                    // #RRGGBB\n                    let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(color);\n                    if (result == null || result.length < 4)\n                        return;\n\n                    return {\n                        R: parseInt(result[1], 16),\n                        G: parseInt(result[2], 16),\n                        B: parseInt(result[3], 16),\n                    };\n                } else if (color.length === 4) {\n                    // #RGB\n                    let result = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i.exec(color);\n                    if (result == null || result.length < 4)\n                        return;\n\n                    return {\n                        R: parseInt(result[1] + result[1], 16),\n                        G: parseInt(result[2] + result[2], 16),\n                        B: parseInt(result[3] + result[3], 16),\n                    };\n                }\n            }\n            else if (color.indexOf('rgb(') >= 0) {\n                // rgb(R, G, B)\n                let result = /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/.exec(color);\n                if (result == null || result.length < 4)\n                    return;\n\n                return {\n                    R: parseInt(result[1], 10),\n                    G: parseInt(result[2], 10),\n                    B: parseInt(result[3], 10),\n                };\n            }\n            else if (color.indexOf('rgba(') >= 0) {\n                // rgba(R, G, B, A)\n                let result = /^rgba\\((\\d+),\\s*(\\d+),\\s*(\\d+),\\s*(\\d*(?:\\.\\d+)?)\\)$/.exec(color);\n                if (result == null || result.length < 5)\n                    return;\n\n                return {\n                    R: parseInt(result[1], 10),\n                    G: parseInt(result[2], 10),\n                    B: parseInt(result[3], 10),\n                    A: parseFloat(result[4]),\n                };\n            }\n        }\n\n        function rgbToHsv(rgbColor: RgbColor): HsvColor {\n            let s, h;\n            let r = rgbColor.R / 255,\n                g = rgbColor.G / 255,\n                b = rgbColor.B / 255;\n\n            let min = Math.min(r, Math.min(g, b));\n            let max = Math.max(r, Math.max(g, b));\n\n            let v = max;\n            let delta = max - min;\n            if (max === 0 || delta === 0) {\n                // R, G, and B must be 0.0, or all the same.\n                // In this case, S is 0.0, and H is undefined.\n                // Using H = 0.0 is as good as any...\n                s = 0;\n                h = 0;\n            }\n            else {\n                s = delta / max;\n                if (r === max) {\n                    // Between Yellow and Magenta\n                    h = (g - b) / delta;\n                }\n                else if (g === max) {\n                    // Between Cyan and Yellow\n                    h = 2 + (b - r) / delta;\n                }\n                else {\n                    // Between Magenta and Cyan\n                    h = 4 + (r - g) / delta;\n                }\n            }\n\n            // Scale h to be between 0.0 and 1.\n            // This may require adding 1, if the value\n            // is negative.\n            h /= 6;\n            if (h < 0) {\n                h += 1;\n            }\n\n            return {\n                H: h,\n                S: s,\n                V: v,\n            };\n        }\n\n        function hsvToRgb(hsvColor: HsvColor): RgbColor {\n            let r, g, b;\n            let h = hsvColor.H,\n                s = hsvColor.S,\n                v = hsvColor.V;\n\n            if (s === 0) {\n                // If s is 0, all colors are the same.\n                // This is some flavor of gray.\n                r = v;\n                g = v;\n                b = v;\n            }\n            else {\n                let p, q, t, fractionalSector, sectorNumber, sectorPos;\n\n                // The color wheel consists of 6 sectors.\n                // Figure out which sector you//re in.\n                sectorPos = h * 6;\n                sectorNumber = Math.floor(sectorPos);\n\n                // get the fractional part of the sector.\n                // That is, how many degrees into the sector\n                // are you?\n                fractionalSector = sectorPos - sectorNumber;\n\n                // Calculate values for the three axes\n                // of the color.\n                p = v * (1.0 - s);\n                q = v * (1.0 - (s * fractionalSector));\n                t = v * (1.0 - (s * (1 - fractionalSector)));\n\n                // Assign the fractional colors to r, g, and b\n                // based on the sector the angle is in.\n                switch (sectorNumber) {\n                    case 0:\n                        r = v;\n                        g = t;\n                        b = p;\n                        break;\n\n                    case 1:\n                        r = q;\n                        g = v;\n                        b = p;\n                        break;\n\n                    case 2:\n                        r = p;\n                        g = v;\n                        b = t;\n                        break;\n\n                    case 3:\n                        r = p;\n                        g = q;\n                        b = v;\n                        break;\n\n                    case 4:\n                        r = t;\n                        g = p;\n                        b = v;\n                        break;\n\n                    case 5:\n                        r = v;\n                        g = p;\n                        b = q;\n                        break;\n                }\n            }\n\n            return {\n                R: Math.floor(r * 255),\n                G: Math.floor(g * 255),\n                B: Math.floor(b * 255),\n            };\n        }\n\n        function rotateHsv(hsvColor: HsvColor, rotateFactor: number): HsvColor {\n            let newH = hsvColor.H + rotateFactor;\n\n            return {\n                H: newH > 1 ? newH - 1 : newH,\n                S: hsvColor.S,\n                V: hsvColor.V,\n            };\n        }\n\n        export function darken(color: RgbColor, diff: number): RgbColor {\n            let flooredNumber = Math.floor(diff);\n            return {\n                R: Math.max(0, color.R - flooredNumber),\n                G: Math.max(0, color.G - flooredNumber),\n                B: Math.max(0, color.B - flooredNumber),\n            };\n        }\n\n        export function rgbString(color: RgbColor): string {\n            if (color.A == null)\n                return \"rgb(\" + color.R + \",\" + color.G + \",\" + color.B + \")\";\n            return \"rgba(\" + color.R + \",\" + color.G + \",\" + color.B + \",\" + color.A + \")\";\n        }\n\n        export function hexString(color: RgbColor): string {\n            return \"#\" + componentToHex(color.R) + componentToHex(color.G) + componentToHex(color.B);\n        }\n\n        function componentToHex(hexComponent: number): string {\n            let clamped = Double.ensureInRange(hexComponent, 0, 255);\n            let hex = clamped.toString(16).toUpperCase();\n            return hex.length === 1 ? \"0\" + hex : hex;\n        }\n\n        export interface RgbColor {\n            R: number;\n            G: number;\n            B: number;\n            A?: number;\n        }\n\n        interface HsvColor {\n            H: number;\n            S: number;\n            V: number;\n        }\n    }\n}","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule jsCommon {\n    /**\n     * CSS constants.\n     */\n    export module CssConstants {\n        export interface ClassAndSelector {\n            class: string;\n            selector: string;\n        }\n\n        export function createClassAndSelector(className: string): ClassAndSelector {\n            return {\n                class: className,\n                selector: '.' + className,\n            };\n        }\n\n        export const styleAttribute = 'style';\n        export const pixelUnits = 'px';\n\n        export const heightProperty = 'height';\n        export const widthProperty = 'width';\n        export const topProperty = 'top';\n        export const bottomProperty = 'bottom';\n        export const leftProperty = 'left';\n        export const rightProperty = 'right';\n        export const marginTopProperty = 'margin-top';\n        export const marginLeftProperty = 'margin-left';\n        export const displayProperty = 'display';\n        export const backgroundProperty = 'background';\n        export const backgroundColorProperty = 'background-color';\n        export const backgroundRepeatProperty = 'background-repeat';\n        export const backgroundSizeProperty = 'background-size';\n        export const backgroundImageProperty = 'background-image';\n        export const textShadowProperty = 'text-shadow';\n        export const textAlignProperty = 'text-align';\n        export const borderTopWidthProperty = 'border-top-width';\n        export const borderBottomWidthProperty = 'border-bottom-width';\n        export const borderLeftWidthProperty = 'border-left-width';\n        export const borderRightWidthProperty = 'border-right-width';\n        export const fontSizeProperty = 'font-size';\n        export const fontWeightProperty = 'font-weight';\n        export const colorProperty = 'color';\n        export const opacityProperty = 'opacity';\n        export const paddingLeftProperty = 'padding-left';\n        export const paddingRightProperty = 'padding-right';\n        export const positionProperty = 'position';\n        export const maxWidthProperty = 'max-width';\n        export const minWidthProperty = 'min-width';\n        export const overflowProperty = 'overflow';\n        export const overflowXProperty = 'overflow-x';\n        export const overflowYProperty = 'overflow-y';\n        export const transformProperty = 'transform';\n        export const webkitTransformProperty = '-webkit-transform';\n        export const cursorProperty = 'cursor';\n        export const visibilityProperty = 'visibility';\n\n        export const absoluteValue = 'absolute';\n        export const zeroPixelValue = '0px';\n        export const autoValue = 'auto';\n        export const hiddenValue = 'hidden';\n        export const noneValue = 'none';\n        export const blockValue = 'block';\n        export const inlineBlockValue = 'inline-block';\n        export const transparentValue = 'transparent';\n        export const boldValue = 'bold';\n        export const visibleValue = 'visible';\n        export const tableRowValue = 'table-row';\n        export const coverValue = 'cover';\n        export const pointerValue = 'pointer';\n        export const scrollValue = 'scroll';\n    }\n\n    export interface ExtendedCSSProperties extends CSSStyleDeclaration {\n        scrollbarShadowColor: string;\n        scrollbarHighlightColor: string;\n        layoutGridChar: string;\n        layoutGridType: string;\n        textAutospace: string;\n        textKashidaSpace: string;\n        writingMode: string;\n        scrollbarFaceColor: string;\n        backgroundPositionY: string;\n        lineBreak: string;\n        imeMode: string;\n        msBlockProgression: string;\n        layoutGridLine: string;\n        scrollbarBaseColor: string;\n        layoutGrid: string;\n        layoutFlow: string;\n        textKashida: string;\n        filter: string;\n        zoom: string;\n        scrollbarArrowColor: string;\n        behavior: string;\n        backgroundPositionX: string;\n        accelerator: string;\n        layoutGridMode: string;\n        textJustifyTrim: string;\n        scrollbar3dLightColor: string;\n        msInterpolationMode: string;\n        scrollbarTrackColor: string;\n        scrollbarDarkShadowColor: string;\n        styleFloat: string;\n        getAttribute(attributeName: string, flags?: number): any;\n        setAttribute(attributeName: string, AttributeValue: any, flags?: number): void;\n        removeAttribute(attributeName: string, flags?: number): boolean;\n\n        pixelWidth: number;\n        posHeight: number;\n        posLeft: number;\n        pixelTop: number;\n        pixelBottom: number;\n        textDecorationNone: boolean;\n        pixelLeft: number;\n        posTop: number;\n        posBottom: number;\n        textDecorationOverline: boolean;\n        posWidth: number;\n        textDecorationLineThrough: boolean;\n        pixelHeight: number;\n        textDecorationBlink: boolean;\n        posRight: number;\n        pixelRight: number;\n        textDecorationUnderline: boolean;\n\n        webkitTransform: string;\n    }\n}","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\n/**\n * Defines a Debug object. Calls to any functions in this object removed by the minifier.\n * The functions within this class are not minified away, so we use the preprocessor-style\n * comments to have the minifier remove those as well.\n */\n \n///#DEBUG\n\nmodule debug {\n\n    export let assertFailFunction: {\n        (message: string): void;\n    };\n\n    /** \n     * Asserts that the condition is true, fails otherwise.\n     */\n    export function assert(condition: boolean, message: string): void {\n        if (condition !== true) {\n            assertFail(message || ('condition: ' + condition));\n        }\n    }\n\n    /**\n     * Asserts that the value is neither null nor undefined, fails otherwise. \n     */\n    export function assertValue<T>(value: T, message: string): void {\n        if (value === null || value === undefined) {\n            assertFail(message || ('condition: ' + value));\n        }\n    }\n\n    /**\n     * Asserts that the value is neither null nor undefined, and has a length property that returns greater than zero, fails otherwise. \n     */\n    export function assertNonEmpty<T>(value: T[], message: string): void {\n        if (!(value != null && value.length > 0)) {\n            assertFail(message || ('condition: ' + value));\n        }\n    }\n\n    /**\n     * Makes no assertion on the given value.\n     * This is documentation/placeholder that a value is possibly null or undefined (unlike assertValue).\n     */\n    export function assertAnyValue<T>(value: T, message: string): void {\n    }\n\n    export function assertFail(message: string): void {\n        (assertFailFunction || alert)('Debug Assert failed: ' + message);\n    }\n}\n\n///#ENDDEBUG","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule jsCommon {\n    export interface IError extends Error {\n        stack?: string;\n        argument?: string;\n    }\n\n    export module Errors {\n        export function infoNavAppAlreadyPresent(): IError {\n            return {\n                name: 'infoNavAppAlreadyPresent',\n                message: 'Cannot initialize embedded scenario when the InfoNav App is already present in this context',\n                stack: getExceptionStackTrace()\n            };\n        }\n\n        export function invalidOperation(message: string): IError {\n            return {\n                name: 'invalidOperation',\n                message: message,\n                stack: getExceptionStackTrace()\n            };\n        }\n\n        export function argument(argumentName: string, message: string): IError {\n            return {\n                name: 'invalidArgumentError',\n                argument: argumentName,\n                message: message,\n                stack: getExceptionStackTrace()\n            };\n        }\n\n        export function argumentNull(argumentName: string): IError {\n            return {\n                name: 'argumentNull',\n                argument: argumentName,\n                message: 'Argument was null',\n                stack: getExceptionStackTrace()\n            };\n        }\n\n        export function argumentUndefined(argumentName: string): IError {\n            return {\n                name: 'argumentUndefined',\n                argument: argumentName,\n                message: 'Argument was undefined',\n                stack: getExceptionStackTrace()\n            };\n        }\n\n        export function argumentOutOfRange(argumentName: string): IError {\n            return {\n                name: 'argumentOutOfRange',\n                argument: argumentName,\n                message: 'Argument was out of range',\n                stack: getExceptionStackTrace()\n            };\n        }\n\n        export function pureVirtualMethodException(className: string, methodName: string): IError {\n            return {\n                name: 'pureVirtualMethodException',\n                message: 'This method must be overriden by the derived class:' + className + '.' + methodName,\n                stack: getExceptionStackTrace()\n            };\n        }\n\n        export function notImplementedException(message: string): IError {\n            return {\n                name: 'notImplementedException',\n                message: message,\n                stack: getExceptionStackTrace()\n            };\n        }\n\n        function getExceptionStackTrace(): string {\n            return getStackTrace(/*leadingFramesToRemove*/2);\n        }\n    }\n\n    /**\n     * Captures the stack trace, if available.\n     * It optionally takes the number of frames to remove from the stack trace.\n     * By default, it removes the last frame to consider the calling type's\n     * constructor and the temporary error used to capture the stack trace (below).\n     * More levels can be requested as needed e..g. when an error is created\n     * from a helper method. <Min requirement: IE10, Chrome, Firefox, Opera>.\n     */\n    export function getStackTrace(leadingFramesToRemove = 1): string {\n        let stackTrace: string,\n            stackSegments: string[];\n\n        try {\n            // needs to throw for stack trace to work in IE\n            throw new Error();\n        } catch (error) {\n            stackTrace = error.stack;\n            if (stackTrace != null) {\n                stackSegments = stackTrace.split('\\n');\n                stackSegments.splice(1, leadingFramesToRemove);\n                // Finally\n                stackTrace = stackSegments.join('\\n');\n            }\n        }\n\n        return stackTrace;\n    }\n}","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\n$.fn.multiline = function (text) {\n    this.text(text);\n    this.html(this.html().replace(/\\n/g, '<br/>'));\n    return this;\n};\n\n$.fn.togglePanelControl = function () {\n    return this.each(function () {\n        $(this).addClass(\"ui-accordion ui-accordion-icons ui-widget ui-helper-reset\")\n            .find(\".accordionHeader\")\n            .addClass(\"ui-accordion-header ui-helper-reset ui-state-default ui-corner-top ui-corner-bottom\")\n            .hover(function() {\n                $(this).toggleClass(\"ui-state-hover\");\n            })\n            .prepend('<span class=\"ui-icon ui-icon-triangle-1-e\"></span>')\n            .click(function() {\n                $(this)\n                    .toggleClass(\"ui-accordion-header-active ui-state-active ui-state-default ui-corner-bottom\")\n                    .find(\"> .ui-icon\").toggleClass(\"ui-icon-triangle-1-e ui-icon-triangle-1-s\").end()\n                    .next().slideToggle();\n                return false;\n            })\n            .next()\n            .addClass(\"ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom\")\n            .hide();\n    });\n};\n\nmodule jsCommon {\n    /** \n     * Represents a promise that may be rejected by its consumer.\n     */    \n    export interface IRejectablePromise extends JQueryPromise<void> {\n        reject(...args: any[]): void;\n    }\n\n    export module JQueryConstants {\n        export const VisibleSelector: string = ':visible';\n    }\n}","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule jsCommon {\n\n    /** \n     * Represents a lazily instantiated value.\n     */\n    export class Lazy<T> {\n        private value: T;\n        private factoryMethod: () => T;\n\n        constructor(factoryMethod: () => T) {\n            Utility.throwIfNullOrUndefined(factoryMethod, this, 'constructor', 'factoryMethod');\n\n            this.factoryMethod = factoryMethod;\n        }\n\n        public getValue(): T {\n            if (this.factoryMethod !== null) {\n                this.value = this.factoryMethod();\n\n                // Optimization: Release the factoryMethod, as it could be holding a large object graph.\n                this.factoryMethod = null;\n            }\n\n            return this.value;\n        }\n    }\n}","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule powerbi {\n    export module Prototype {\n        /**\n         * Returns a new object with the provided obj as its prototype.\n         */\n        export function inherit<T>(obj: T, extension?: (inherited: T) => void): T {\n            debug.assertValue(obj, 'obj');\n\n            function wrapCtor(): void { };\n            wrapCtor.prototype = obj;\n\n            let inherited = new wrapCtor();\n\n            if (extension)\n                extension(inherited);\n\n            return inherited;\n        }\n\n        /**\n         * Returns a new object with the provided obj as its prototype\n         * if, and only if, the prototype has not been previously set\n         */\n        export function inheritSingle<T>(obj: T): T {\n            debug.assertValue(obj, 'obj');\n\n            let proto = Object.getPrototypeOf(obj);\n            if (proto === Object.prototype || proto === Array.prototype)\n                obj = inherit(obj);\n\n            return obj;\n        }\n\n        /**\n         * Uses the provided callback function to selectively replace contents in the provided array.\n         * @return A new array with those values overriden\n         * or undefined if no overrides are necessary.\n         */\n        export function overrideArray<T, TArray>(prototype: TArray, override: (T) => T): TArray {\n            if (!prototype)\n                return;\n\n            let overwritten: TArray;\n\n            for (let i = 0, len = (<T[]><any>prototype).length; i < len; i++) {\n                let value = override(prototype[i]);\n                if (value) {\n                    if (!overwritten)\n                        overwritten = inherit(prototype);\n\n                    overwritten[i] = value;\n                }\n            }\n\n            return overwritten;\n        }\n    }\n}","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule jsCommon {\n\n    export module Formatting {\n\n        interface IRegexInt {\n            // Regex for replace.\n            r: RegExp;\n            // The string to replace.\n            s: string;\n        }\n\n        let regexCache: IRegexInt[];\n\n        /** \n         * Translate .NET format into something supported by jQuery.Globalize.\n         */\n        export function findDateFormat(value: Date, format: string, cultureName: string)\n        {\n            switch (format) {\n                case \"m\":\n                    // Month + day\n                    format = \"M\";\n                    break;\n                case \"O\":\n                case \"o\":\n                    // Roundtrip\n                    format = \"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'0000'\";\n                    break;\n                case \"R\":\n                case \"r\":\n                    // RFC1123 pattern - - time must be converted to UTC before formatting \n                    value = new Date(value.getUTCFullYear(), value.getUTCMonth(), value.getUTCDate(), value.getUTCHours(), value.getUTCMinutes(), value.getUTCSeconds(), value.getUTCMilliseconds());\n                    format = \"ddd, dd MMM yyyy HH':'mm':'ss 'GMT'\";\n                    break;\n                case \"s\":\n                    // Sortable - should use invariant culture\n                    format = \"S\";\n                    break;\n                case \"u\":\n                    // Universal sortable - should convert to UTC before applying the \"yyyy'-'MM'-'dd HH':'mm':'ss'Z' format.\n                    value = new Date(value.getUTCFullYear(), value.getUTCMonth(), value.getUTCDate(), value.getUTCHours(), value.getUTCMinutes(), value.getUTCSeconds(), value.getUTCMilliseconds());\n                    format = \"yyyy'-'MM'-'dd HH':'mm':'ss'Z'\";\n                    break;\n                case \"U\":\n                    // Universal full - the pattern is same as F but the time must be converted to UTC before formatting\n                    value = new Date(value.getUTCFullYear(), value.getUTCMonth(), value.getUTCDate(), value.getUTCHours(), value.getUTCMinutes(), value.getUTCSeconds(), value.getUTCMilliseconds());\n                    format = \"F\";\n                    break;\n                case \"y\":\n                case \"Y\":\n                    // Year and month\n                    switch (cultureName) {\n                        case \"default\":\n                        case \"en\":\n                        case \"en-US\":\n                            format = \"MMMM, yyyy\"; // Fix the default year-month pattern for english\n                            break;\n                        default:\n                            format = \"Y\"; // For other cultures - use the localized pattern\n                    }\n                    break;\n              }\n              return { value: value, format: format };\n        }\n         \n        /** \n         * Translates unsupported .NET custom format expressions to the custom expressions supported by JQuery.Globalize.\n         */\n        export function fixDateTimeFormat(format: string): string {\n            // Fix for the \"K\" format (timezone): \n            //The js dates don't have a kind property so we'll support only local kind which is equavalent to zzz format.\n            format = format.replace(/%K/g, \"zzz\");                   \n            format = format.replace(/K/g, \"zzz\");\n            format = format.replace(/fffffff/g, \"fff0000\");\n            format = format.replace(/ffffff/g, \"fff000\");\n            format = format.replace(/fffff/g, \"fff00\");\n            format = format.replace(/ffff/g, \"fff0\");\n            // Fix for the 5 digit year: \"yyyyy\" format. \n            //The Globalize doesn't support dates greater than 9999 so we replace the \"yyyyy\" with \"0yyyy\".\n            format = format.replace(/yyyyy/g, \"0yyyy\");             \n            // Fix for the 3 digit year: \"yyy\" format. \n            //The Globalize doesn't support this formatting so we need to replace it with the 4 digit year \"yyyy\" format.\n            format = format.replace(/(^y|^)yyy(^y|$)/g, \"yyyy\");    \n\n            if (!regexCache) {\n                // Creating Regexes for cases \"Using single format specifier\" \n                //- http://msdn.microsoft.com/en-us/library/8kb3ddd4.aspx#UsingSingleSpecifiers\n                // This is not supported from The Globalize.\n                // The case covers all single \"%\" lead specifier (like \"%d\" but not %dd) \n                // The cases as single \"%d\" are filtered in if the bellow.\n                // (?!S) where S is the specifier make sure that we only one symbol for specifier.\n                regexCache = [\"d\", \"f\", \"F\", \"g\", \"h\", \"H\", \"K\", \"m\", \"M\", \"s\", \"t\", \"y\", \"z\", \":\", \"/\"].map((s) => {\n                    return { r: new RegExp(\"\\%\" + s + \"(?!\" + s + \")\", \"g\"), s: s };\n                });\n            }\n\n            if (format.indexOf(\"%\") !== -1 && format.length > 2) {\n                for (let i = 0; i < regexCache.length; i++) {\n                    format = format.replace(regexCache[i].r, regexCache[i].s);\n                }\n            }\n            return format;\n        }\n\n    }\n\n}","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule jsCommon {\n\n    let doc: HTMLDocument = document,\n        headElement: HTMLElement = doc.head,\n        firstScriptInHeadElement: HTMLElement = headElement.getElementsByTagName('script')[0],\n        linkElement: HTMLElement = doc.createElement('link'),\n        scriptElement: HTMLElement = doc.createElement('script'),\n        styleSheetLoaded: string[] = [],\n        javaScriptFilesLoaded: string[] = [],\n        javaScriptFilesLoading: any[] = [];\n\n    linkElement.setAttribute('rel', 'stylesheet');\n\n    /**\n     * Public API.\n     */\n\texport interface IJavaScriptDependency {\n\t\tjavascriptFile: string;\n\n        // Callback that indicates when the script is loaded, after writing a <script> tag\n\t\tonLoadCallback?: () => JQueryPromise<void>;\n\t}\n\n    export interface IDependency {\n        javaScriptFiles?: string[];\n        cssFiles?: string[];\n\t\tjavaScriptFilesWithCallback?: IJavaScriptDependency[];\n    }\n\n    export function requires(dependency: IDependency, to: () => void = $.noop): void {\n        loadStyleSheets(dependency.cssFiles || []);\n\n\t\tlet scriptsToRun = dependency.javaScriptFilesWithCallback || [];\n\n\t\tif (dependency.javaScriptFiles) {\n\t\t\tfor(let i=0, len=dependency.javaScriptFiles.length; i<len; ++i) {\n\t\t\t\tscriptsToRun.push({javascriptFile:dependency.javaScriptFiles[i]});\n\t\t\t}\n\t\t}\n        loadJavaScriptFiles(scriptsToRun, to);\n    }\n\n    /**\n     * Private Helpers.\n     */\n    function loadStyleSheets(hrefList: string[]): void {\n        hrefList.forEach(href => {\n            if (styleSheetLoaded.indexOf(href) === -1) {\n                styleSheetLoaded.push(href);\n                loadStyleSheet(href);\n            }\n        });\n    }\n\n    function loadJavaScriptFiles(scripts: IJavaScriptDependency[], callback: () => void): void {\n        let loadingCount = scripts.length,\n            parsingCount = loadingCount,\n            sourceCodeList: IJavaScriptDependency[] = [];\n\n        function parseIfLoadingComplete(): void {\n            if (!--loadingCount) {\n                parseJavaScriptSourceCodes(scripts, sourceCodeList);\n            }\n        }\n\n        function makeCallbackIfParsingComplete(): void {\n            if (!--parsingCount) {\n                callback();\n            }\n        }\n\n        scripts.forEach((script: IJavaScriptDependency, index: number) => {\n            let file = script.javascriptFile;\n            if (javaScriptFilesLoaded.indexOf(file) === -1) { // not loaded\n\n                if (file in javaScriptFilesLoading) { // loading\n                    javaScriptFilesLoading[file].push(() => {\n                        parseIfLoadingComplete();\n                        makeCallbackIfParsingComplete();\n                    });\n\n                } else { // not loading\n                    javaScriptFilesLoading[file] = [() => {\n                        makeCallbackIfParsingComplete();\n                    }];\n\n                    if (isExternalUrl(file)) { // external JS file\n                        sourceCodeList[index] = script;\n                        parseIfLoadingComplete();\n\n                    } else { // internal JS file\n                        loadJavaScriptSourceCode(file, (sourceCode: string) => {\n                            sourceCodeList[index] = {javascriptFile: sourceCode};\n                            parseIfLoadingComplete();\n                        });\n                    }\n                }\n\n            } else { // loaded\n                parseIfLoadingComplete();\n                makeCallbackIfParsingComplete();\n            }\n        });\n    }\n\n    function loadStyleSheet(href: string): void {\n        let link = <any>linkElement.cloneNode();\n        link.href = href;\n        if (firstScriptInHeadElement) {\n            headElement.insertBefore(link, firstScriptInHeadElement);\n        } else {\n            headElement.appendChild(link);\n        }\n    }\n\n    function loadJavaScriptSourceCode(src: string, onload: (code: string) => void): void {\n        webGet(src, function (): void {\n            onload(this.responseText);\n        });\n    }\n\n    function parseJavaScript(script: IJavaScriptDependency, onComplete: () => void = $.noop): void {\n        if (!script) {\n            onComplete();\n            return;\n        }\n\n\t\tlet sourceCodeOrFileName = script.javascriptFile;\n\n\t\tlet targetCallback = onComplete;\n\t\tif (script.onLoadCallback) {\n\t\t\tlet promiseAsCallback = () => {\n\t\t\t\tscript.onLoadCallback().then(onComplete);\n\t\t\t};\n\t\t\ttargetCallback = promiseAsCallback;\n\t\t}\n\n        isExternalUrl(sourceCodeOrFileName)\n        ? loadExternalJavaScriptFile(sourceCodeOrFileName, targetCallback)\n        : parseInternalJavaScriptCode(sourceCodeOrFileName, targetCallback);\n    }\n\n    function parseInternalJavaScriptCode(sourceCode: string, onComplete: () => void = $.noop): void {\n        let script: HTMLElement;\n        if (sourceCode) {\n            script = <any>scriptElement.cloneNode();\n            script.setAttribute('type', 'text/javascript');\n            script.innerHTML = sourceCode;\n            headElement.appendChild(script);\n        }\n        setTimeout(onComplete, 0);\n    }\n\n    function loadExternalJavaScriptFile(src, onload: () => void): void {\n        let script: HTMLElement;\n        if (src) {\n            script = <any>scriptElement.cloneNode();\n            script.setAttribute('src', src);\n            script.setAttribute('charset', 'utf-8');\n            script.onload = onload;\n            headElement.appendChild(script);\n        }\n    }\n\n    function parseJavaScriptSourceCodes(scripts: IJavaScriptDependency[], sourceCodeList: IJavaScriptDependency[]): void {\n        asyncLoop(sourceCodeList, parseJavaScript, /*on all files parsed*/() => {\n            scripts.forEach((script: IJavaScriptDependency) => {\n                let file = script.javascriptFile;\n                let listeners = javaScriptFilesLoading[file];\n                if (listeners) {\n                    listeners.forEach((listener) => {\n                        listener();\n                    });\n                }\n\n                delete javaScriptFilesLoading[file];\n                if (javaScriptFilesLoaded.indexOf(file) === -1) {\n                    javaScriptFilesLoaded.push(file);\n                }\n            });\n        });\n    }\n\n    function webGet(src: string, onload: () => void, onerror?: (error: any) => void): void {\n        let xhr = new XMLHttpRequest();\n\n        try {\n            xhr.open('GET', src, true);\n            xhr.onload = onload;\n            xhr.onerror = onerror;\n            xhr.send(null);\n        }\n        catch (e) {\n            // handle it\n        }\n    }\n\n    function isExternalUrl(url: string): boolean {\n        let origin = location.protocol + '//' + location.host + '/';\n        return /^http[s]?:\\/\\/.+/i.test(url) && url.indexOf(origin) !== 0;\n    }\n\n    function _(...args: any[]): any { }\n\n    function asyncSteps(...args: Function[]): void {\n        if (args.length === 0) {\n            return;\n        }\n\n        let steps = [],\n            i = args.length;\n\n        while (i--) {\n            (function (j) {\n                steps[j] = function () {\n                    args[j](steps[j + 1] || _);\n                };\n            })(i);\n        }\n        steps[0]();\n    }\n\n    function asyncLoop(enumerable: any[], func: (item, next) => void, callback: () => void): void {\n        let steps = [],\n            i = 0,\n            len = enumerable.length;\n\n        for (; i < len - 1; i++) {\n            (function (i) {\n                steps[i] = (next) => {\n                    func(enumerable[i], next);\n                };\n            } (i));\n        }\n\n        steps[len - 1] = (next) => {\n            func(enumerable[len - 1], callback);\n        };\n\n        asyncSteps.apply(null, steps);\n    }\n}","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule powerbi {\n    export function createJQueryPromiseFactory(): IPromiseFactory {\n        return new JQueryPromiseFactory();\n    }\n\n    /**\n     * jQuery-based implementation of IPromiseFactory.\n     * This is useful for cases when Angular is not present, or when immediate promise resolving (not tied to Angular digest cycle) is desired.\n     */\n    class JQueryPromiseFactory implements IPromiseFactory {\n        public defer<TSuccess, TError>(): IDeferred2<TSuccess, TError> {\n            return new JQueryDeferredWrapper($.Deferred());\n        }\n\n        public reject<TError>(reason?: TError): IPromise2<any, TError> {\n            let deferred = this.defer();\n            deferred.reject(reason);\n            return deferred.promise;\n        }\n\n        public resolve<TSuccess>(value: TSuccess): IPromise2<TSuccess, any> {\n            let deferred = this.defer();\n            deferred.resolve(value);\n            return deferred.promise;\n        }\n\n        public all(promises: IPromise2<any, any>[]): IPromise<any[]>;\n\n        public all(promises: any): IPromise<any[]> {\n            let unwrappedPromises = jQuery.map(promises, (value) => {\n                return value && value.promise ? value.promise : value;\n            });\n\n            return new JQueryPromiseWrapper($.when.apply($, unwrappedPromises));\n        }\n\n        public when<T>(value: T | IPromise<T>): IPromise<T>;\n\n        public when<T>(value: any): IPromise<T> {\n            let unwrappedPromise = value && value.promise ? value.promise : value;\n            return new JQueryPromiseWrapper($.when(unwrappedPromise));\n        }\n    }\n\n    /** \n     * Implements IDeferred via a wrapped a jQuery Deferred.\n     */\n    class JQueryDeferredWrapper<TSuccess, TError> implements IDeferred2<TSuccess, TError> {\n        public promise: IPromise2<TSuccess, TError>;\n        private deferred: JQueryDeferred<any>;\n\n        constructor(deferred: JQueryDeferred<any>) {\n            debug.assertValue(deferred, 'deferred');\n\n            this.deferred = deferred;\n            this.promise = new JQueryPromiseWrapper(deferred.promise());\n        }\n\n        public resolve(value: TSuccess | IPromise<any>): void {\n            this.deferred.resolve(value);\n        }\n\n        public reject(reason?: TError): void {\n            this.deferred.reject(reason);\n        }\n    }\n\n    /** \n     * Implements IDeferred via a wrapped a jQuery Promise.\n     */\n    class JQueryPromiseWrapper<TSuccess, TError> implements IPromise2<TSuccess, TError> {\n        private promise: JQueryPromise<any>;\n\n        constructor(promise: JQueryPromise<any>) {\n            debug.assertValue(promise, 'promise');\n\n            this.promise = promise;\n        }\n\n        public then(a: (arg: any) => any, b: (arg: any) => any): IPromise2<any, any> {\n            return new JQueryPromiseWrapper(\n                this.promise.then(\n                    JQueryPromiseWrapper.wrapCallback(a),\n                    JQueryPromiseWrapper.wrapCallback(b)));\n        }\n\n        public catch(callback): IPromise2<any, any> {\n            return this.then(null, callback);\n        }\n\n        public finally(callback): IPromise2<any, any> {\n            this.promise.always(\n                JQueryPromiseWrapper.wrapCallback(callback));\n            return this;\n        }\n\n        /** \n         * Wraps a callback, which may return a IPromise. \n         */\n        private static wrapCallback(callback: (arg: any) => any): (arg: any) => any {\n            if (callback)\n                return arg => {\n                    let value = callback(arg);\n\n                    // If the callback returns a Promise, unwrap that to allow jQuery to chain.\n                    if (value instanceof JQueryPromiseWrapper)\n                        return (<JQueryPromiseWrapper<any, any>>value).promise;\n\n                    return value;\n                };\n\n            return callback;\n        }\n    }\n}\n ","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule powerbi {\n\n    export interface IStorageService {\n        getData(key: string): any;\n        setData(key: string, data: any): void;\n    }\n\n    class LocalStorageService implements IStorageService {\n        public getData(key: string): any {\n            try {\n                if (localStorage) {\n                    let value = localStorage[key];\n                    if (value) {\n                        return JSON.parse(value);\n                    }\n                }\n            }\n            catch (exception) {}\n\n            return null;\n        }\n\n        public setData(key: string, data: any) {\n            try {\n                if (localStorage) {\n                    localStorage[key] = JSON.stringify(data);\n                }\n            }\n            catch (e) {}\n        }\n    }\n\n    export class EphemeralStorageService implements IStorageService {\n        private cache: { [key: string]: any } = {};\n        private clearCacheTimerId: number;\n        private clearCacheInterval: number;\n        public static defaultClearCacheInterval: number = (1000 * 60 * 60 * 24);  // 1 day\n\n        constructor(clearCacheInterval?: number) {\n            this.clearCacheInterval = (clearCacheInterval != null)\n                ? clearCacheInterval\n                : EphemeralStorageService.defaultClearCacheInterval;\n\n            this.clearCache();\n        }\n\n        public getData(key: string): any {\n            return this.cache[key];\n        }\n\n        public setData(key: string, data: any) {\n            this.cache[key] = data;\n\n            if (this.clearCacheTimerId == null) {\n                this.clearCacheTimerId = setTimeout(() => this.clearCache(), this.clearCacheInterval);\n            }\n        }\n\n        private clearCache(): void {\n            this.cache = {};\n            this.clearCacheTimerId = undefined;\n        }\n    }\n\n    export var localStorageService: IStorageService = new LocalStorageService();\n    export const ephemeralStorageService: IStorageService = new EphemeralStorageService();\n}","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule jsCommon {\n    export module WordBreaker {\n        import TextProperties = powerbi.TextProperties;\n        import ITextAsSVGMeasurer = powerbi.ITextAsSVGMeasurer;\n        import ITextTruncator = powerbi.ITextTruncator;\n         \n        export interface WordBreakerResult {\n            start: number;\n            end: number;\n        }\n\n        const SPACE = ' ';\n        const BREAKERS_REGEX = /[\\s\\n]+/g;\n\n        function search(index: number, content: string, backward: boolean): number {\n            if (backward) {\n                for (let i = index - 1; i > -1; i--) {\n                    if (hasBreakers(content[i]))\n                        return i + 1;\n                }\n            } else {\n                for (let i = index, ilen = content.length; i < ilen; i++) {\n                    if (hasBreakers(content[i]))\n                        return i;\n                }\n            }\n\n            return backward ? 0 : content.length;\n        }\n\n        /**\n         * Find the word nearest the cursor specified within content\n         * @param index - point within content to search forward/backward from\n         * @param content - string to search\n        */\n        export function find(index: number, content: string): WordBreakerResult {\n            debug.assert(index >= 0 && index <= content.length, 'index within content string bounds');\n\n            let result = { start: 0, end: 0 };\n            if (content.length === 0)\n                return result;\n\n            result.start = search(index, content, true);\n            result.end = search(index, content, false);\n            return result;\n        }\n\n        /**\n         * Test for presence of breakers within content\n         * @param content - string to test\n        */\n        export function hasBreakers(content: string): boolean {\n            BREAKERS_REGEX.lastIndex = 0;\n            return BREAKERS_REGEX.test(content);\n        }\n\n        /**\n         * Count the number of pieces when broken by BREAKERS_REGEX\n         * ~2.7x faster than WordBreaker.split(content).length\n         * @param content - string to break and count\n        */\n        export function wordCount(content: string): number {\n            let count = 1;\n            BREAKERS_REGEX.lastIndex = 0;\n            BREAKERS_REGEX.exec(content);\n            while (BREAKERS_REGEX.lastIndex !== 0) {\n                count++;\n                BREAKERS_REGEX.exec(content);\n            }\n\n            return count;\n        }\n\n        export function getMaxWordWidth(content: string, textWidthMeasurer: ITextAsSVGMeasurer, properties: TextProperties): number {\n            let words = split(content);\n            let maxWidth = 0;\n            for (let w of words) {\n                properties.text = w;\n                maxWidth = Math.max(maxWidth, textWidthMeasurer(properties));\n            }\n            return maxWidth;\n        }\n\n        function split(content: string): string[] {\n            return content.split(BREAKERS_REGEX);\n        }\n\n        function getWidth(content: string, properties: TextProperties, textWidthMeasurer: ITextAsSVGMeasurer): number {\n            properties.text = content;\n            return textWidthMeasurer(properties);\n        }\n\n        function truncate(content: string, properties: TextProperties, truncator: ITextTruncator, maxWidth: number): string {\n            properties.text = content;\n            return truncator(properties, maxWidth);\n        }\n\n        /**\n         * Split content by breakers (words) and greedy fit as many words\n         * into each index in the result based on max width and number of lines\n         * e.g. Each index in result corresponds to a line of content\n         *      when used by AxisHelper.LabelLayoutStrategy.wordBreak\n         * @param content - string to split\n         * @param properties - text properties to be used by @param:textWidthMeasurer\n         * @param textWidthMeasurer - function to calculate width of given text content\n         * @param maxWidth - maximum allowed width of text content in each result\n         * @param maxNumLines - maximum number of results we will allow, valid values must be greater than 0\n         * @param truncator - (optional) if specified, used as a function to truncate content to a given width\n        */\n        export function splitByWidth(\n            content: string,\n            properties: TextProperties,\n            textWidthMeasurer: ITextAsSVGMeasurer,\n            maxWidth: number,\n            maxNumLines: number,\n            truncator?: ITextTruncator): string[] {\n            // Default truncator returns string as-is\n            truncator = truncator ? truncator : (properties: TextProperties, maxWidth: number) => properties.text;\n\n            let result: string[] = [];\n            let words = split(content);\n\n            let usedWidth = 0;\n            let wordsInLine: string[] = [];\n\n            for (let word of words) {\n                // Last line? Just add whatever is left\n                if ((maxNumLines > 0) && (result.length >= maxNumLines - 1)) {\n                    wordsInLine.push(word);\n                    continue;\n                }\n\n                // Determine width if we add this word\n                // Account for SPACE we will add when joining...\n                let wordWidth = wordsInLine.length === 0\n                    ? getWidth(word, properties, textWidthMeasurer)\n                    : getWidth(SPACE + word, properties, textWidthMeasurer);\n\n                // If width would exceed max width,\n                // then push used words and start new split result\n                if (usedWidth + wordWidth > maxWidth) {\n                    // Word alone exceeds max width, just add it.\n                    if (wordsInLine.length === 0) {\n                        result.push(truncate(word, properties, truncator, maxWidth));\n\n                        usedWidth = 0;\n                        wordsInLine = [];\n                        continue;\n                    }\n                    \n                    result.push(truncate(wordsInLine.join(SPACE), properties, truncator, maxWidth));\n\n                    usedWidth = 0;\n                    wordsInLine = [];\n                }\n\n                // ...otherwise, add word and continue\n                wordsInLine.push(word);\n                usedWidth += wordWidth;\n            }\n\n            // Push remaining words onto result\n            result.push(truncate(wordsInLine.join(SPACE), properties, truncator, maxWidth));\n\n            return result;\n        }\n    }\n}","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule powerbi {\n    export interface ITextMeasurer {\n        (textElement: SVGTextElement): number;\n    }\n\n    export interface ITextAsSVGMeasurer {\n        (textProperties: TextProperties): number;\n    }\n\n    export interface ITextTruncator {\n        (properties: TextProperties, maxWidth: number): string;\n    }\n\n    export interface TextProperties {\n        text?: string;\n        fontFamily: string;\n        fontSize: string;\n        fontWeight?: string;\n        fontStyle?: string;\n        whiteSpace?: string;\n    }\n\n    interface CanvasContext {\n        font: string;\n        measureText(text: string): { width: number };\n    }\n\n    interface CanvasElement extends HTMLElement {\n        getContext(name: string);\n    }\n\n    export module TextMeasurementService {\n        const ellipsis = '…';\n        const OverflowingText = jsCommon.CssConstants.createClassAndSelector('overflowingText');\n\n        let spanElement: JQuery;\n        let svgTextElement: D3.Selection;\n        let canvasCtx: CanvasContext;\n\n        /**\n         * Idempotent function for adding the elements to the DOM. \n         */\n        function ensureDOM(): void {\n            if (spanElement)\n                return;\n\n            spanElement = $('<span/>');\n            $('body').append(spanElement);\n            //The style hides the svg element from the canvas, preventing canvas from scrolling down to show svg black square.\n            svgTextElement = d3.select($('body').get(0))\n                .append('svg')\n                .style({\n                    'height': '0px',\n                    'width': '0px',\n                    'position': 'absolute'\n                })\n                .append('text');\n            canvasCtx = (<CanvasElement>$('<canvas/>').get(0)).getContext(\"2d\");\n        }\n        \n        /**\n         * Removes spanElement from DOM.\n         */\n        export function removeSpanElement() {\n            if (spanElement && spanElement.remove) {\n                spanElement.remove();\n            }\n\n            spanElement = null;\n        }\n\n        /**\n         * This method measures the width of the text with the given SVG text properties.\n         * @param textProperties The text properties to use for text measurement.\n         */\n        export function measureSvgTextWidth(textProperties: TextProperties): number {\n            debug.assertValue(textProperties, 'textProperties');\n            debug.assert(_.isEmpty(textProperties.fontSize) || textProperties.fontSize.indexOf(\"px\") !== -1, \"TextProperties' text size should be in px.\");\n\n            ensureDOM();\n\n            canvasCtx.font = textProperties.fontSize + ' ' + textProperties.fontFamily;\n            return canvasCtx.measureText(textProperties.text).width;\n        }\n\n        /**\n         * This method return the rect with the given SVG text properties.\n         * @param textProperties The text properties to use for text measurement.\n         */\n        export function measureSvgTextRect(textProperties: TextProperties): SVGRect {\n            debug.assertValue(textProperties, 'textProperties');\n            debug.assert(_.isEmpty(textProperties.fontSize) || textProperties.fontSize.indexOf(\"px\") !== -1, \"TextProperties' text size should be in px.\");\n\n            ensureDOM();\n\n            svgTextElement.style(null);\n            svgTextElement\n                .text(textProperties.text)\n                .attr({\n                    'visibility': 'hidden',\n                    'font-family': textProperties.fontFamily,\n                    'font-size': textProperties.fontSize,\n                    'font-weight': textProperties.fontWeight,\n                    'font-style': textProperties.fontStyle,\n                    'white-space': textProperties.whiteSpace || 'nowrap'\n                });\n\n            // We're expecting the browser to give a synchronous measurement here\n            // We're using SVGTextElement because it works across all browsers \n            return svgTextElement.node<SVGTextElement>().getBBox();\n        }\n\n        /**\n         * This method measures the height of the text with the given SVG text properties.\n         * @param textProperties The text properties to use for text measurement.\n         */\n        export function measureSvgTextHeight(textProperties: TextProperties): number {\n            return measureSvgTextRect(textProperties).height;\n        }\n\n        /**\n         * This method returns the text Rect with the given SVG text properties.\n         * Does NOT return text width; obliterates text value\n         * @param {TextProperties} textProperties - The text properties to use for text measurement\n         */\n        function estimateSvgTextRect(textProperties: TextProperties): SVGRect {\n            debug.assertValue(textProperties, 'textProperties');\n            debug.assert(_.isEmpty(textProperties.fontSize) || textProperties.fontSize.indexOf(\"px\") !== -1, \"TextProperties' text size should be in px.\");\n\n            let propertiesKey = textProperties.fontFamily + textProperties.fontSize;\n            let rect: SVGRect = ephemeralStorageService.getData(propertiesKey);\n\n            if (rect == null) {\n                // To estimate we check the height of a particular character, once it is cached, subsequent\n                // calls should always get the height from the cache (regardless of the text).\n                let estimatedTextProperties: TextProperties = {\n                    fontFamily: textProperties.fontFamily,\n                    fontSize: textProperties.fontSize,\n                    text: \"M\",\n                };\n\n                rect = measureSvgTextRect(estimatedTextProperties);\n\n                // NOTE: In some cases (disconnected/hidden DOM) we may provide incorrect measurement results (zero sized bounding-box), so\n                // we only store values in the cache if we are confident they are correct.\n                if (rect.height > 0)\n                    ephemeralStorageService.setData(propertiesKey, rect);\n            }\n\n            return rect;\n        }\n\n        /**\n         * This method returns the text Rect with the given SVG text properties.\n         * @param {TextProperties} textProperties - The text properties to use for text measurement\n         */\n        export function estimateSvgTextBaselineDelta(textProperties: TextProperties): number {\n            let rect = estimateSvgTextRect(textProperties);\n            return rect.y + rect.height;\n        }\n\n        /**\n         * This method estimates the height of the text with the given SVG text properties.\n         * @param {TextProperties} textProperties - The text properties to use for text measurement\n         */\n        export function estimateSvgTextHeight(textProperties: TextProperties, tightFightForNumeric: boolean = false): number {\n            let height = estimateSvgTextRect(textProperties).height;\n\n            //TODO: replace it with new baseline calculation\n            if (tightFightForNumeric)\n                height *= 0.7;\n\n            return height;\n        }\n\n        /**\n         * This method measures the width of the svgElement.\n         * @param svgElement The SVGTextElement to be measured.\n         */\n        export function measureSvgTextElementWidth(svgElement: SVGTextElement): number {\n            debug.assertValue(svgElement, 'svgElement');\n            return measureSvgTextWidth(getSvgMeasurementProperties(svgElement));\n        }\n\n        /**\n         * This method fetches the text measurement properties of the given DOM element.\n         * @param element The selector for the DOM Element.\n         */\n        export function getMeasurementProperties(element: JQuery): TextProperties {\n            debug.assertValue(element, 'element');\n\n            return {\n                text: element.val() || element.text(),\n                fontFamily: element.css('font-family'),\n                fontSize: element.css('font-size'),\n                fontWeight: element.css('font-weight'),\n                fontStyle: element.css('font-style'),\n                whiteSpace: element.css('white-space')\n            };\n        }\n\n        /**\n         * This method fetches the text measurement properties of the given SVG text element.\n         * @param svgElement The SVGTextElement to be measured.\n         */\n        export function getSvgMeasurementProperties(svgElement: SVGTextElement): TextProperties {\n            debug.assertValue(svgElement, 'svgElement');\n\n            let style = window.getComputedStyle(svgElement, null);\n            return {\n                text: svgElement.textContent,\n                fontFamily: style.fontFamily,\n                fontSize: style.fontSize,\n                fontWeight: style.fontWeight,\n                fontStyle: style.fontStyle,\n                whiteSpace: style.whiteSpace\n            };\n        }\n\n        /**\n         * This method returns the width of a div element.\n         * @param element The div element.\n         */\n        export function getDivElementWidth(element: JQuery): string {\n            debug.assert(element.is('div'), 'Given element is not a div type. Cannot get width');\n            return getComputedStyle(element[0]).width;\n        }\n\n        /**\n         * Compares labels text size to the available size and renders ellipses when the available size is smaller.\n         * @param textProperties The text properties (including text content) to use for text measurement.\n         * @param maxWidth The maximum width available for rendering the text.\n         */\n        export function getTailoredTextOrDefault(textProperties: TextProperties, maxWidth: number): string {\n            debug.assertValue(textProperties, 'properties');\n            debug.assertValue(textProperties.text, 'properties.text');\n            debug.assert(_.isEmpty(textProperties.fontSize) || textProperties.fontSize.indexOf(\"px\") !== -1, \"TextProperties' text size should be in px.\");\n\n            ensureDOM();\n\n            let strLength = textProperties.text.length;\n\n            if (strLength === 0)\n                return textProperties.text;\n\n            let width = measureSvgTextWidth(textProperties);\n\n            if (width < maxWidth)\n                return textProperties.text;\n\n            // Create a copy of the textProperties so we don't modify the one that's passed in.\n            let copiedTextProperties = Prototype.inherit(textProperties);\n\n            // Take the properties and apply them to svgTextElement\n            // Then, do the binary search to figure out the substring we want\n            // Set the substring on textElement argument\n            let text = copiedTextProperties.text = ellipsis + copiedTextProperties.text;\n\n            let min = 1;\n            let max = text.length;\n            let i = ellipsis.length;\n\n            while (min <= max) {\n                // num | 0 prefered to Math.floor(num) for performance benefits\n                i = (min + max) / 2 | 0;\n\n                copiedTextProperties.text = text.substr(0, i);\n                width = measureSvgTextWidth(copiedTextProperties);\n\n                if (maxWidth > width)\n                    min = i + 1;\n                else if (maxWidth < width)\n                    max = i - 1;\n                else\n                    break;\n            }\n\n            // Since the search algorithm almost never finds an exact match,\n            // it will pick one of the closest two, which could result in a\n            // value bigger with than 'maxWidth' thus we need to go back by \n            // one to guarantee a smaller width than 'maxWidth'.\n            copiedTextProperties.text = text.substr(0, i);\n            width = measureSvgTextWidth(copiedTextProperties);\n            if (width > maxWidth)\n                i--;\n\n            return text.substr(ellipsis.length, i - ellipsis.length) + ellipsis;\n        }\n\n        /**\n         * Compares labels text size to the available size and renders ellipses when the available size is smaller.\n         * @param textElement The SVGTextElement containing the text to render.\n         * @param maxWidth The maximum width available for rendering the text.\n         */\n        export function svgEllipsis(textElement: SVGTextElement, maxWidth: number): void {\n            debug.assertValue(textElement, 'textElement');\n\n            let properties = getSvgMeasurementProperties(textElement);\n            let originalText = properties.text;\n            let tailoredText = getTailoredTextOrDefault(properties, maxWidth);\n\n            if (originalText !== tailoredText) {\n                textElement.textContent = tailoredText;\n            }\n        }\n\n        /**\n         * Word break textContent of <text> SVG element into <tspan>s\n         * Each tspan will be the height of a single line of text\n         * @param textElement - the SVGTextElement containing the text to wrap\n         * @param maxWidth - the maximum width available\n         * @param maxHeight - the maximum height available (defaults to single line)\n         * @param linePadding - (optional) padding to add to line height\n         */\n        export function wordBreak(textElement: SVGTextElement, maxWidth: number, maxHeight: number, linePadding: number = 0): void {\n            debug.assertValue(textElement, 'textElement');\n\n            let properties = getSvgMeasurementProperties(textElement);\n            let height = estimateSvgTextHeight(properties) + linePadding;\n            let maxNumLines = Math.max(1, Math.floor(maxHeight / height));\n            let node = d3.select(textElement);\n            \n            // Save y of parent textElement to apply as first tspan dy\n            let firstDY = node.attr('y');\n\n            // Store and clear text content\n            let labelText = textElement.textContent;\n            textElement.textContent = null;\n\n            // Append a tspan for each word broken section\n            let words = jsCommon.WordBreaker.splitByWidth(labelText, properties, measureSvgTextWidth, maxWidth, maxNumLines);\n            for (let i = 0, ilen = words.length; i < ilen; i++) {\n                properties.text = words[i];\n                node\n                    .append('tspan')\n                    .attr({\n                        'x': 0,\n                        'dy': i === 0 ? firstDY : height,\n                    })\n                // Truncate\n                    .text(getTailoredTextOrDefault(properties, maxWidth));\n            }\n        }\n\n        /**\n         * Word break textContent of span element into <span>s\n         * Each span will be the height of a single line of text\n         * @param textElement - the element containing the text to wrap\n         * @param maxWidth - the maximum width available\n         * @param maxHeight - the maximum height available (defaults to single line)\n         * @param linePadding - (optional) padding to add to line height\n         */\n        export function wordBreakOverflowingText(textElement: any, maxWidth: number, maxHeight: number, linePadding: number = 0): void {\n            debug.assertValue(textElement, 'textElement');\n\n            let properties = getSvgMeasurementProperties(<SVGTextElement>textElement);\n            let height = estimateSvgTextHeight(properties) + linePadding;\n            let maxNumLines = Math.max(1, Math.floor(maxHeight / height));\n            \n            // Store and clear text content\n            let labelText = textElement.textContent;\n            textElement.textContent = null;\n\n            // Append a span for each word broken section\n            let words = jsCommon.WordBreaker.splitByWidth(labelText, properties, measureSvgTextWidth, maxWidth, maxNumLines);\n\n            // splitByWidth() occasionally returns unnecessary empty strings, so get rid of them.\n            // TODO: Fix splitByWidth.\n            words = _.compact(words);\n\n            let spanItem = d3.select(textElement)\n                .selectAll(OverflowingText.selector)\n                .data(words, (d: String) => $.inArray(d, words));\n\n            spanItem\n                .enter()\n                .append(\"span\")\n                .classed(OverflowingText.class, true)\n                .text((d: string) => d)\n                .style(\"width\", jsCommon.PixelConverter.toString(maxWidth));\n        }\n    }\n}","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule jsCommon {\n    /**\n     * Responsible for throttling input function.\n     */\n    export class ThrottleUtility {\n        private fn: () => void;\n        private timerFactory: ITimerPromiseFactory;\n        private delay: number;\n\n        constructor(delay?: number) {\n            this.timerFactory = TimerPromiseFactory.instance;\n            this.delay = 0;\n            if (delay) {\n                this.delay = delay;\n            }\n        }\n\n        public run(fn: () => void): void {\n            if (!this.fn) {\n                this.fn = fn;\n                this.timerFactory.create(this.delay).done(() => this.timerComplete(this.fn));\n            } else {\n                this.fn = fn;\n            }\n        }\n\n        /**\n         * Note: Public for testing purpose.\n         */\n        public timerComplete(fn: () => void) {\n            // run fn\n            fn();\n            \n            // clear fn\n            this.fn = null;\n        }\n    }\n}","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule jsCommon {\n\n    export interface ITimerPromiseFactory {\n        /** \n         * Creates a promise that will be resolved after the specified delayInMs.\n         * @return Promise.\n         */\n        create(delayInMs: number): IRejectablePromise;\n    }\n\n    /** \n     * Responsible for creating timer promises.\n     */\n    export class TimerPromiseFactory implements ITimerPromiseFactory {\n        public static instance = new TimerPromiseFactory();\n\n        /**\n         * {@inheritDoc}\n         */\n        public create(delayInMs: number): IRejectablePromise {\n            debug.assertValue(delayInMs, 'delayInMs');\n            debug.assert(delayInMs >= 0, 'delayInMs must be a positive value.');\n\n            let deferred = $.Deferred<void>();\n\n            window.setTimeout(\n                () => deferred.resolve(),\n                delayInMs);\n\n            return deferred;\n        }\n    }\n}","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\n/**\n * Defined in host.\n */\ndeclare var clusterUri: string;\n\nmodule jsCommon {\n\n    /**\n     * Http Status code we are interested.\n     */\n    export enum HttpStatusCode {\n        OK = 200,\n        BadRequest = 400,\n        Unauthorized = 401,\n        Forbidden = 403,\n        RequestEntityTooLarge = 413,\n    }\n\n    /**\n     * Other HTTP Constants.\n     */\n    export module HttpConstants {\n        export const ApplicationOctetStream = 'application/octet-stream';\n        export const MultiPartFormData = 'multipart/form-data';\n    }\n\n    /**\n     * Extensions to String class.\n     */\n    export module StringExtensions {\n        const HtmlTagRegex = new RegExp('[<>]', 'g');\n\n        export function format(...args: string[]) {\n            let s = args[0];\n\n            if (isNullOrUndefinedOrWhiteSpaceString(s))\n                return s;\n\n            for (let i = 0; i < args.length - 1; i++) {\n                let reg = new RegExp(\"\\\\{\" + i + \"\\\\}\", \"gm\");\n                s = s.replace(reg, args[i + 1]);\n            }\n            return s;\n        }\n\n        /**\n         * Compares two strings for equality, ignoring case.\n         */\n        export function equalIgnoreCase(a: string, b: string): boolean {\n            return StringExtensions.normalizeCase(a) === StringExtensions.normalizeCase(b);\n        }\n\n        export function startsWithIgnoreCase(a: string, b: string): boolean {\n            let normalizedSearchString = StringExtensions.normalizeCase(b);\n            return StringExtensions.normalizeCase(a).indexOf(normalizedSearchString) === 0;\n        }\n\n        export function startsWith(a: string, b: string): boolean {\n            return a.indexOf(b) === 0;\n        }\n\n        /** Determines whether a string contains a specified substring (while ignoring case). */\n        export function containsIgnoreCase(source: string, substring: string): boolean {\n            if (source == null)\n                return false;\n\n            return source.toLowerCase().indexOf(substring.toLowerCase().toString()) !== -1;\n        }\n\n        /** \n         * Normalizes case for a string.\n         * Used by equalIgnoreCase method. \n         */\n        export function normalizeCase(value: string): string {\n            Utility.throwIfNullOrUndefined(value, StringExtensions, 'normalizeCase', 'value');\n\n            return value.toUpperCase();\n        }\n\n        /** \n         * Is string null or empty or undefined?\n         * @return True if the value is null or undefined or empty string,\n         * otherwise false.\n         */\n        export function isNullOrEmpty(value: string): boolean {\n            return (value == null) || (value.length === 0);\n        }\n\n        /** \n         * Returns true if the string is null, undefined, empty, or only includes white spaces.\n         * @return True if the str is null, undefined, empty, or only includes white spaces,\n         * otherwise false.\n         */\n        export function isNullOrUndefinedOrWhiteSpaceString(str: string): boolean {\n            return StringExtensions.isNullOrEmpty(str) || StringExtensions.isNullOrEmpty(str.trim());\n        }\n\n        /**\n         * Returns a value indicating whether the str contains any whitespace.\n         */\n        export function containsWhitespace(str: string): boolean {\n            Utility.throwIfNullOrUndefined(str, this, 'containsWhitespace', 'str');\n\n            let expr: RegExp = /\\s/;\n            return expr.test(str);\n        }\n\n        /**\n         * Returns a value indicating whether the str is a whitespace string.\n         */\n        export function isWhitespace(str: string): boolean {\n            Utility.throwIfNullOrUndefined(str, this, 'isWhitespace', 'str');\n\n            return str.trim() === '';\n        }\n\n        /** \n         * Returns the string with any trailing whitespace from str removed.\n         */\n        export function trimTrailingWhitespace(str: string): string {\n            Utility.throwIfNullOrUndefined(str, this, 'trimTrailingWhitespace', 'str');\n            return str.replace(/\\s+$/, '');\n        }\n\n        /**\n         * Returns the string with any leading and trailing whitespace from str removed.\n         */\n        export function trimWhitespace(str: string): string {\n            Utility.throwIfNullOrUndefined(str, this, 'trimWhitespace', 'str');\n            return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n        }\n\n        /** \n         * Returns length difference between the two provided strings.\n         */\n        export function getLengthDifference(left: string, right: string) {\n            Utility.throwIfNullOrUndefined(left, this, 'getLengthDifference', 'left');\n            Utility.throwIfNullOrUndefined(right, this, 'getLengthDifference', 'right');\n\n            return Math.abs(left.length - right.length);\n        }\n\n        /**\n         * Repeat char or string several times.\n         * @param char The string to repeat.\n         * @param count How many times to repeat the string.\n         */\n        export function repeat(char: string, count: number): string {\n            let result = \"\";\n            for (let i = 0; i < count; i++) {\n                result += char;\n            }\n            return result;\n        }\n\n        /**\n         * Replace all the occurrences of the textToFind in the text with the textToReplace.\n         * @param text The original string.\n         * @param textToFind Text to find in the original string.\n         * @param textToReplace New text replacing the textToFind.\n         */\n        export function replaceAll(text: string, textToFind: string, textToReplace: string): string {\n            if (!textToFind)\n                return text;\n\n            let pattern = escapeStringForRegex(textToFind);\n            return text.replace(new RegExp(pattern, 'gi'), textToReplace);\n        }\n\n        export function ensureUniqueNames(names: string[]): string[] {\n            debug.assertValue(names, 'names');\n\n            let usedNames: { [name: string]: boolean } = {};\n\n            // Make sure we are giving fair chance for all columns to stay with their original name\n            // First we fill the used names map to contain all the original unique names from the list.\n            for (let name of names) {\n                usedNames[name] = false;\n            }\n\n            let uniqueNames: string[] = [];\n\n            // Now we go over all names and find a unique name for each\n            for (let name of names) {\n                let uniqueName = name;\n\n                // If the (original) column name is already taken lets try to find another name\n                if (usedNames[uniqueName]) {\n                    let counter = 0;\n                    // Find a name that is not already in the map\n                    while (usedNames[uniqueName] !== undefined) {\n                        uniqueName = name + \".\" + (++counter);\n                    }\n                }\n\n                uniqueNames.push(uniqueName);\n                usedNames[uniqueName] = true;\n            }\n\n            return uniqueNames;\n        }\n\n        /**\n         * Returns a name that is not specified in the values.\n         */\n        export function findUniqueName(\n            usedNames: { [name: string]: boolean },\n            baseName: string): string {\n            debug.assertValue(usedNames, 'usedNames');\n            debug.assertValue(baseName, 'baseName');\n\n            // Find a unique name\n            let i = 0,\n                uniqueName: string = baseName;\n            while (usedNames[uniqueName]) {\n                uniqueName = baseName + (++i);\n            }\n\n            return uniqueName;\n        }\n\n        export function constructCommaSeparatedList(list: string[], resourceProvider: IStringResourceProvider, maxValue?: number): string {\n            if (!list || list.length === 0)\n                return '';\n\n            if (maxValue === null || maxValue === undefined)\n                maxValue = Number.MAX_VALUE;\n\n            let length = Math.min(maxValue, list.length);\n\n            let replacedList = [];\n            // Only need to replace user entries of {0} and {1} since we build the list in pairs.\n            for (let j = 0; j < 2; j++) {\n                let targetValue = '{' + j + '}';\n                let replaceValue = '_|_<' + j + '>_|_';\n                for (let i = 0; i < length; i++) {\n                    if (list[i].indexOf(targetValue) > -1) {\n                        list[i] = list[i].replace(targetValue, replaceValue);\n                        replacedList.push({ targetValue: targetValue, replaceValue: replaceValue });\n                    }\n                }\n            }\n\n            let commaSeparatedList: string = '';\n            for (let i = 0; i < length; i++) {\n                if (i === 0)\n                    commaSeparatedList = list[i];\n                else\n                    commaSeparatedList = StringExtensions.format(resourceProvider.get('FilterRestatement_Comma'), commaSeparatedList, list[i]);\n            }\n\n            for (let i = 0; i < replacedList.length; i++) {\n                commaSeparatedList = commaSeparatedList.replace(replacedList[i].replaceValue, replacedList[i].targetValue);\n            }\n\n            return commaSeparatedList;\n        }\n\n        export function escapeStringForRegex(s: string): string {\n            return s.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1');\n        }\n\n        /**\n         * Remove file name reserved characters <>:\"/\\|?* from input string.\n         */\n        export function normalizeFileName(fileName: string): string {   \n            debug.assertValue(fileName, 'fileName');         \n            return fileName.replace(/[\\<\\>\\:\"\\/\\\\\\|\\?*]/g, '');\n        }\n\n        /**\n         * Similar to JSON.stringify, but strips away escape sequences so that the resulting\n         * string is human-readable (and parsable by JSON formatting/validating tools).\n         */\n        export function stringifyAsPrettyJSON(object: any): string {\n            //let specialCharacterRemover = (key: string, value: string) => value.replace(/[^\\w\\s]/gi, '');\n            return JSON.stringify(object /*, specialCharacterRemover*/);\n        }\n\n        /**\n         * Derive a CLS-compliant name from a specified string.  If no allowed characters are present, return a fallback string instead.\n         * TODO (6708134): this should have a fully Unicode-aware implementation\n         */\n        export function deriveClsCompliantName(input: string, fallback: string): string {\n            debug.assertValue(input, 'input');\n\n            let result = input.replace(/^[^A-Za-z]*/g, '').replace(/[ :\\.\\/\\\\\\-\\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000]/g, '_').replace(/[\\W]/g, '');\n\n            return result.length > 0 ? result : fallback;\n        }\n\n        /** Performs cheap sanitization by stripping away HTML tag (<>) characters. */\n        export function stripTagDelimiters(s: string): string {\n            return s.replace(HtmlTagRegex, '');\n        }\n    }\n\n    /**\n     * Interface used for interacting with WCF typed objects.\n     */\n    export interface TypedObject {\n        __type: string;\n    }\n\n    export interface TextMatch {\n        start: number;\n        end: number;\n        text: string;\n    }\n\n    /** \n     * The general utility class.\n     */\n    export class Utility {\n        private static TypeNamespace = 'http://schemas.microsoft.com/sqlbi/2013/01/NLRuntimeService';\n\n        public static JsonContentType = 'application/json';\n        public static JpegContentType = 'image/jpeg';\n        public static XJavascriptContentType = 'application/x-javascript';\n        public static JsonDataType = 'json';\n        public static BlobDataType = 'blob';\n        public static HttpGetMethod = 'GET';\n        public static HttpPostMethod = 'POST';\n        public static HttpPutMethod = 'PUT';\n        public static HttpDeleteMethod = 'DELETE';\n        public static HttpContentTypeHeader = 'Content-Type';\n        public static HttpAcceptHeader = 'Accept';\n        public static Undefined = 'undefined';\n\n        private static staticContentLocation: string = window.location.protocol + '//' + window.location.host;\n        \n        /**\n         * Ensures the specified value is not null or undefined. Throws a relevent exception if it is.\n         * @param value The value to check.\n         * @param context The context from which the check originated.\n         * @param methodName The name of the method that initiated the check.\n         * @param parameterName The parameter name of the value to check.\n         */\n        public static throwIfNullOrUndefined(value, context, methodName, parameterName) {\n            if (value === null) {\n                Utility.throwException(Errors.argumentNull(Utility.getComponentName(context) + methodName + '.' + parameterName));\n            }\n            else if (typeof (value) === Utility.Undefined) {\n                Utility.throwException(Errors.argumentUndefined(Utility.getComponentName(context) + methodName + '.' + parameterName));\n            }\n        }\n\n        /**\n         * Ensures the specified value is not null, undefined or empty. Throws a relevent exception if it is.\n         * @param value The value to check.\n         * @param context The context from which the check originated.\n         * @param methodName The name of the method that initiated the check.\n         * @param parameterName The parameter name of the value to check.\n         */\n        public static throwIfNullOrEmpty(value: any, context: any, methodName: string, parameterName: string) {\n            Utility.throwIfNullOrUndefined(value, context, methodName, parameterName);\n            if (!value.length) {\n                Utility.throwException(Errors.argumentOutOfRange(Utility.getComponentName(context) + methodName + '.' + parameterName));\n            }\n        }\n\n        /**\n         * Ensures the specified string is not null, undefined or empty. Throws a relevent exception if it is.\n         * @param value The value to check.\n         * @param context The context from which the check originated.\n         * @param methodName The name of the method that initiated the check.\n         * @param parameterName The parameter name of the value to check.\n         */\n        public static throwIfNullOrEmptyString(value: string, context: any, methodName: string, parameterName: string) {\n            Utility.throwIfNullOrUndefined(value, context, methodName, parameterName);\n            if (value.length < 1) {\n                Utility.throwException(Errors.argumentOutOfRange(Utility.getComponentName(context) + methodName + '.' + parameterName));\n            }\n        }\n\n        /**\n         * Ensures the specified value is not null, undefined, whitespace or empty. Throws a relevent exception if it is.\n         * @param value The value to check.\n         * @param context The context from which the check originated.\n         * @param methodName The name of the method that initiated the check.\n         * @param parameterName The parameter name of the value to check.\n         */\n        public static throwIfNullEmptyOrWhitespaceString(value: string, context: any, methodName: string, parameterName: string) {\n            Utility.throwIfNullOrUndefined(value, context, methodName, parameterName);\n            if (StringExtensions.isNullOrUndefinedOrWhiteSpaceString(value)) {\n                Utility.throwException(Errors.argumentOutOfRange(Utility.getComponentName(context) + methodName + '.' + parameterName));\n            }\n        }\n\n        /**\n         * Ensures the specified condition is true. Throws relevant exception if it isn't.\n         * @param condition The condition to check.\n         * @param context The context from which the check originated.\n         * @param methodName The name of the method that initiated the check.\n         * @param parameterName The parameter name against which the condition is checked.\n         */\n        public static throwIfNotTrue(condition: boolean, context: any, methodName: string, parameterName: string) {\n            if (!condition) {\n                Utility.throwException(Errors.argument(parameterName, Utility.getComponentName(context) + methodName + '.' + parameterName));\n            }\n        }\n\n        /**\n         * Checks whether the provided value is a 'string'.\n         * @param value The value to test.\n         */\n        public static isString(value: any): boolean {\n            return ((typeof value) === 'string');\n        }\n\n        /**\n         * Checks whether the provided value is a 'boolean'.\n         * @param value The value to test.\n         */\n        public static isBoolean(value: any): boolean {\n            return ((typeof value) === 'boolean');\n        }\n\n        /**\n         * Checks whether the provided value is a 'number'.\n         * @param value The value to test.\n         */\n        public static isNumber(value: any): boolean {\n            return ((typeof value) === 'number');\n        }\n\n        /**\n         * Checks whether the provided value is a Date instance.\n         * @param value The value to test.\n         */\n        public static isDate(value: any): boolean {\n            return Utility.isObject(value) && (value instanceof Date);\n        }\n\n        /**\n         * Checks whether the provided value is an 'object'.\n         * @param value The value to test.\n         */\n        public static isObject(value: any): boolean {\n            return (value != null) && ((typeof value) === 'object');\n        }\n\n        /**\n         * Checks whether the provided value is null or undefined.\n         * @param value The value to test.\n         */\n        public static isNullOrUndefined(value: any): boolean {\n            return (value === null) || (typeof (value) === Utility.Undefined);\n        }\n\n        /**\n         * Combine a base url and a path.\n         * @param baseUrl The base url.\n         * @param path The path to add on to the base url.\n         * @returns The combined url.\n         */\n        public static urlCombine(baseUrl: string, path: string) {\n            Utility.throwIfNullOrUndefined(baseUrl, null, \"urlCombine\", \"baseUrl\");\n            Utility.throwIfNullOrUndefined(path, null, \"urlCombine\", \"path\");\n\n            // should any of the components be empty, fail gracefuly - this is important when using the test page\n            if (StringExtensions.isNullOrUndefinedOrWhiteSpaceString(path)) {\n                return baseUrl;\n            }\n\n            if (StringExtensions.isNullOrUndefinedOrWhiteSpaceString(baseUrl)) {\n                return path;\n            }\n\n            let finalUrl = baseUrl;\n\n            if (finalUrl.charAt(finalUrl.length - 1) === '/') {\n                if (path.charAt(0) === '/')\n                    path = path.slice(1);\n            } else {\n                if (path.charAt(0) !== '/')\n                    path = '/' + path;\n            }\n\n            return finalUrl + path;\n        }\n\n        public static getAbsoluteUri(path: string): string {\n            Utility.throwIfNullOrUndefined(path, null, \"getAbsoluteUri\", \"path\");\n\n            let url = path;\n            // Make absolute\n            if (url && url.indexOf('http') === - 1) {\n                url = Utility.urlCombine(clusterUri, url);\n            }\n            return url;\n        }\n\n        public static getStaticResourceUri(path: string) {\n            Utility.throwIfNullOrUndefined(path, null, \"getStaticResourceUri\", \"path\");\n\n            let url = path;\n            // Make absolute\n            if (url && url.indexOf('http') === - 1) {\n                url = jsCommon.Utility.urlCombine(Utility.staticContentLocation, url);\n            }\n            return url;\n        }\n\n        public static getComponentName(context) {\n            return !context ? '' : (typeof context).toString() + '.';\n        }\n\n        public static throwException(e) {\n            Trace.error(\n                StringExtensions.format(\"Throwing exception: {0}\", JSON.stringify(e)), \n                /*includeStackTrace*/ e.stack != null ? false : true);\n            throw e;\n        }\n\n        public static createClassSelector(className: string): string {\n            Utility.throwIfNullOrEmptyString(className, null, 'CreateClassSelector', 'className');\n            return '.' + className;\n        }\n\n        public static createIdSelector(id: string): string {\n            Utility.throwIfNullOrEmptyString(id, null, 'CreateIdSelector', 'id');\n            return '#' + id;\n        }\n\n        /**\n         * Creates a client-side Guid string.\n         * @returns A string representation of a Guid.\n         */\n        public static generateGuid(): string {\n            let guid = \"\",\n                idx = 0;\n\n            for (idx = 0; idx < 32; idx += 1) {\n                let guidDigitsItem = Math.random() * 16 | 0;\n                switch (idx) {\n                    case 8:\n                    case 12:\n                    case 16:\n                    case 20:\n                        guid += \"-\";\n                        break;\n                }\n                guid += guidDigitsItem.toString(16);\n            }\n\n            return guid;\n        }\n\n        /**\n         * Try extract a cookie from {@link document.cookie} identified by key.\n         */\n        public static getCookieValue(key: string): string {\n            // the cookie is of the format <key1=value1>; <key2=value2>. Split by ';', then by '=' \n            // to search for the key\n            let keyValuePairs = document.cookie.split(';');\n            for (let i = 0; i < keyValuePairs.length; i++) {\n                let keyValue = keyValuePairs[i];\n                let split = keyValue.split('=');\n                if (split.length > 0 && split[0].trim() === key) {\n                    return keyValue.substr(keyValue.indexOf('=') + 1);\n                }\n            }\n            return null;\n        }\n\n        /**\n         * Extracts the protocol://hostname section of a url.\n         * @param url The URL from which to extract the section.\n         * @returns The protocol://hostname portion of the given URL.\n         */\n        public static getDomainForUrl(url: string): string {\n            let hrefObject = Utility.getHrefObjectFromUrl(url);\n            return hrefObject.prop('protocol') + '//' + hrefObject.prop('hostname');\n        }\n\n        /**\n         * Extracts the hostname and absolute path sections of a url.\n         * @param url The URL from which to extract the section.\n         * @returns The hostname and absolute path portion of the given URL.\n         */\n        public static getHostNameForUrl(url: string): string {\n            let hrefObject = Utility.getHrefObjectFromUrl(url);\n            return Utility.urlCombine(hrefObject.prop('hostname'), hrefObject.prop('pathname'));\n        }\n\n        /**\n         * Return the original url with query string stripped.\n         * @param url The URL from which to extract the section.\n         * @returns the original url with query string stripped.\n         */\n        public static getUrlWithoutQueryString(url: string): string {\n            let hrefObject = Utility.getHrefObjectFromUrl(url);\n            return hrefObject.prop('protocol') + '//' + Utility.urlCombine(hrefObject.prop('host'), hrefObject.prop('pathname'));\n        }\n\n        /**\n         * Extracts the protocol section of a url.\n         * @param url The URL from which to extract the section.\n         * @returns The protocol for the current URL.\n         */\n        public static getProtocolFromUrl(url: string): string {\n            return Utility.getHrefObjectFromUrl(url).prop('protocol').replace(':', '');\n        }\n\n        /**\n         * Returns a formatted href object from a URL.\n         * @param url The URL used to generate the object.\n         * @returns A jQuery object with the url.\n         */\n        public static getHrefObjectFromUrl(url: string): JQuery {\n            let aObject = $('<a>');\n            aObject = aObject.prop('href', url);\n            return aObject;\n        }\n\n        /**\n         * Converts a WCF representation of a dictionary to a JavaScript dictionary.\n         * @param wcfDictionary The WCF dictionary to convert.\n         * @returns The native JavaScript representation of this dictionary.\n         */\n        public static convertWcfToJsDictionary(wcfDictionary: any[]): { [index: string]: any; } {\n            // convert the WCF JSON representation of a dictionary\n            // to JS dictionary.\n            // WCF representation: [{\"Key\": Key, \"Value\": Value}..]\n            // JS representation: [Key: Value ..]\n\n            let result: { [index: string]: any; } = {};\n\n            for (let i = 0; i < wcfDictionary.length; i++) {\n                let keyValuePair = wcfDictionary[i];\n                result[keyValuePair['Key']] = keyValuePair['Value'];\n            }\n\n            return result;\n        }\n\n        public static getDateFromWcfJsonString(jsonDate: string, fromUtcMilliseconds: boolean): Date {\n            if (StringExtensions.isNullOrEmpty(jsonDate)) {\n                return null;\n            }\n            let begIndex = jsonDate.indexOf('(');\n            let endIndex = jsonDate.indexOf(')');\n            if (begIndex !== -1 && endIndex !== -1) {\n                let milliseconds = parseInt(jsonDate.substring(begIndex + 1, endIndex), 10);\n\n                if (fromUtcMilliseconds) {\n                    return new Date(milliseconds);\n                }\n                else {\n                    let retValue = new Date(0);\n                    retValue.setUTCMilliseconds(milliseconds);\n                    return retValue;\n                }\n            }\n            return null;\n        }\n\n        /**\n         * Get the outer html of the given jquery object.\n         * @param content The jquery object.\n         * @returns The entire html representation of the object.\n         */\n        public static getOuterHtml(content: JQuery): string {\n            return $('<div>').append(content).html();\n        }\n\n        /**\n         * Comparison Method: Compares two integer numbers.\n         * @param a An integer value.\n         * @param b An integer value.\n         * @returns The comparison result.\n         */\n        public static compareInt(a: number, b: number): number {\n            return a - b;\n        }\n        \n        /**\n         * Return the index of the smallest value in a numerical array.\n         * @param a A numeric array.\n         * @returns The index of the smallest value in the array.\n         */\n        public static getIndexOfMinValue(a: number[]) {\n            let retValue = 0;\n            let currentMinValue = a[0];\n\n            for (let i = 0; i < a.length; i++) {\n                if (a[i] < currentMinValue) {\n                    currentMinValue = a[i];\n                    retValue = i;\n                }\n            }\n\n            return retValue;\n        }\n        \n        /**\n         * Extracts a url from a background image attribute in the format of: url('www.foobar.com/image.png').\n         * @param input The value of the background-image attribute.\n         * @returns The extracted url.\n         */\n        public static extractUrlFromCssBackgroundImage(input: string) {\n            return input.replace(/\"/g, \"\").replace(/url\\(|\\)$/ig, \"\");\n        }\n        \n        /**\n         * Verifies image data url of images.\n         */\n        public static isValidImageDataUrl(url: string): boolean {\n            let regex: RegExp = new RegExp('data:(image\\/(png|jpg|jpeg|gif|svg))');\n            return regex.test(url);\n        }\n        \n        /**\n         * Downloads a content string as a file.\n         * @param content Content stream.\n         * @param fileName File name to use.\n         */\n        public static saveAsFile(content: any, fileName: string): void {\n            let contentBlob = new Blob([content], { type: HttpConstants.ApplicationOctetStream });\n            let url = window['webkitURL'] || URL;\n            let urlLink = url.createObjectURL(contentBlob);\n            let fileNameLink = fileName || urlLink;\n\n            // IE support, use msSaveOrOpenBlob API\n            if (window.navigator.msSaveOrOpenBlob) {\n                window.navigator.msSaveOrOpenBlob(contentBlob, fileNameLink);\n                return;\n            }\n\n            // WebKit-based browser support requires generating an anchor tag with\n            // download attribute set to blob store and triggering a click event to invoke \n            // a download to file action\n            let hyperlink = document.createElement('a');\n            hyperlink.href = urlLink;\n            hyperlink.target = '_blank';\n            hyperlink['download'] = fileNameLink;\n            document.body.appendChild(hyperlink);\n            hyperlink.click();\n\n            document.body.removeChild(hyperlink);\n        }\n\n        /**\n         * Helper method to get the simple type name from a typed object.\n         * @param obj The typed object.\n         * @returns The simple type name for the object.\n         */\n        public static getType(obj: TypedObject) {\n            Utility.throwIfNullEmptyOrWhitespaceString(obj.__type, this, 'getType', 'obj');\n\n            let parts = obj.__type.split(\":\");\n\n            if (parts.length !== 2) {\n                Errors.argument(\"obj.__type\", \"Type String not in expected format [Type]#[Namespace]: \" + obj.__type);\n            }\n\n            if (parts[1] !== Utility.TypeNamespace) {\n                Errors.argument(\"obj.__type\", \"Type Namespace not expected: \" + parts[1]);\n            }\n\n            return parts[0];\n        }\n\n        /** \n         * Check if an element supports a specific event type.\n         * @param eventName The name of the event.\n         * @param element The element to test for event support.\n         * @returns Whether the even is supported on the provided element.\n         */\n        public static isEventSupported(eventName: string, element: Element): boolean {\n            eventName = 'on' + eventName;\n            let isSupported = (eventName in element);\n\n            if (!isSupported) {\n                // if we can't use setAttribute try a generic element\n                if (!element.setAttribute) {\n                    element = document.createElement('div');\n                }\n                if (element.setAttribute && element.removeAttribute) {\n                    element.setAttribute(eventName, '');\n                    isSupported = typeof element[eventName] === 'function';\n\n                    // if the property was created - remove it\n                    if (typeof element[eventName] !== 'undefined') {\n                        element[eventName] = null;\n                    }\n\n                    element.removeAttribute(eventName);\n                }\n            }\n\n            element = null;\n            return isSupported;\n        }\n\n        public static toPixel(pixelAmount: number): string {\n            Utility.throwIfNullOrUndefined(pixelAmount, this, \"toPixel\", \"pixelAmount\");\n\n            return pixelAmount.toString() + CssConstants.pixelUnits;\n        }\n\n        public static getPropertyCount(object: any) {\n            Utility.throwIfNullOrUndefined(object, this, \"getPropertyCount\", \"object\");\n            return Object.getOwnPropertyNames(object).length;\n        }\n\n        /** \n         * Check if an element supports a specific event type.\n         * @param filePath File path.\n         * @returns File extension.\n         */\n        public static getFileExtension(filePath: string): string {\n            if (filePath) {\n                let index = filePath.lastIndexOf('.');\n                if (index >= 0)\n                    return filePath.substr(index + 1);\n            }\n            return '';\n        }\n\n        /** \n         * Extract the filename out of a full path delimited by '\\' or '/'.\n         * @param filePath File path.\n         * @returns filename File name.\n         */\n        public static extractFileNameFromPath(filePath: string): string {\n            return filePath.replace(/^.*[\\\\\\/]/, '');\n        }\n\n        /**\n         * This method indicates whether window.clipboardData is supported.\n         * For example, clipboard support for Windows Store apps is currently disabled \n         * since window.clipboardData is unsupported (it raises access denied error)\n         * since clipboard in Windows Store is being \n         * achieved through Windows.ApplicationModel.DataTransfer.Clipboard class.\n         */\n        public static canUseClipboard(): boolean {\n            return (typeof MSApp === \"undefined\");\n        }\n\n        public static is64BitOperatingSystem(): boolean {\n            return navigator.userAgent.indexOf(\"WOW64\") !== -1 ||\n                navigator.userAgent.indexOf(\"Win64\") !== -1;\n        }\n\n        public static parseNumber(value: any, defaultValue?: number): number {\n            if (value === null)\n                return null;\n            if (value === undefined)\n                return defaultValue;\n            \n            let result = Number(value);\n            if (isFinite(result))\n                return result;\n            if (isNaN(result) && !(typeof value === \"number\" || value === \"NaN\"))\n                return defaultValue;\n            return result;\n        }\n\n        public static getURLParamValue(name:string) {\n            let results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n            if (results == null) {\n                return null;\n            }\n            else {\n                return results[1] || 0;\n            }\n        }\n\n        /**\n         * Return local timezone.\n         * This function uses summer and winter offset to determine local time zone.\n         * The result localTimeZoneString must be a subset of the strings used by server, \n         * as documented here: https://msdn.microsoft.com/en-us/library/gg154758.aspx (Dynamic Daylight Savings Time (Compact 2013)).\n         * @return Local timezone string or UTC if timezone cannot be found.\n         */\n        public static getLocalTimeZoneString(): string {\n            let timeSummer = new Date(Date.UTC(2005, 6, 30, 0, 0, 0, 0));\n            let summerOffset = -1 * timeSummer.getTimezoneOffset();\n            let timeWinter = new Date(Date.UTC(2005, 12, 30, 0, 0, 0, 0));\n            let winterOffset = -1 * timeWinter.getTimezoneOffset();\n            let localTimeZoneString;\n\n            if (-720 === summerOffset && -720 === winterOffset) { localTimeZoneString = 'Dateline Standard Time'; }\n            else if (-660 === summerOffset && -660 === winterOffset) { localTimeZoneString = 'UTC-11'; }\n            else if (-660 === summerOffset && -660 === winterOffset) { localTimeZoneString = 'Samoa Standard Time'; }\n            else if (-600 === summerOffset && -600 === winterOffset) { localTimeZoneString = 'Hawaiian Standard Time'; }\n            else if (-480 === summerOffset && -540 === winterOffset) { localTimeZoneString = 'Alaskan Standard Time'; }\n            else if (-420 === summerOffset && -480 === winterOffset) { localTimeZoneString = 'Pacific Standard Time'; }\n            else if (-420 === summerOffset && -420 === winterOffset) { localTimeZoneString = 'US Mountain Standard Time'; }\n            else if (-360 === summerOffset && -420 === winterOffset) { localTimeZoneString = 'Mountain Standard Time'; }\n            else if (-360 === summerOffset && -360 === winterOffset) { localTimeZoneString = 'Central America Standard Time'; }\n            else if (-300 === summerOffset && -360 === winterOffset) { localTimeZoneString = 'Central Standard Time'; }\n            else if (-300 === summerOffset && -300 === winterOffset) { localTimeZoneString = 'SA Pacific Standard Time'; }\n            else if (-240 === summerOffset && -300 === winterOffset) { localTimeZoneString = 'Eastern Standard Time'; }\n            else if (-270 === summerOffset && -270 === winterOffset) { localTimeZoneString = 'Venezuela Standard Time'; }\n            else if (-240 === summerOffset && -240 === winterOffset) { localTimeZoneString = 'SA Western Standard Time'; }\n            else if (-240 === summerOffset && -180 === winterOffset) { localTimeZoneString = 'Central Brazilian Standard Time'; }\n            else if (-180 === summerOffset && -240 === winterOffset) { localTimeZoneString = 'Atlantic Standard Time'; }\n            else if (-180 === summerOffset && -180 === winterOffset) { localTimeZoneString = 'Montevideo Standard Time'; }\n            else if (-180 === summerOffset && -120 === winterOffset) { localTimeZoneString = 'E. South America Standard Time'; }\n            else if (-150 === summerOffset && -210 === winterOffset) { localTimeZoneString = 'Mid-Atlantic Standard Time'; }\n            else if (-120 === summerOffset && -120 === winterOffset) { localTimeZoneString = 'SA Eastern Standard Time'; }\n            else if (0 === summerOffset && 0 === winterOffset) { localTimeZoneString = 'UTC'; }\n            else if (60 === summerOffset && 0 === winterOffset) { localTimeZoneString = 'GMT Standard Time'; }\n            else if (60 === summerOffset && 120 === winterOffset) { localTimeZoneString = 'Namibia Standard Time'; }\n            else if (120 === summerOffset && 60 === winterOffset) { localTimeZoneString = 'Romance Standard Time'; }\n            else if (120 === summerOffset && 120 === winterOffset) { localTimeZoneString = 'South Africa Standard Time'; }\n            else if (180 === summerOffset && 120 === winterOffset) { localTimeZoneString = 'GTB Standard Time'; }\n            else if (180 === summerOffset && 180 === winterOffset) { localTimeZoneString = 'E. Africa Standard Time'; }\n            else if (240 === summerOffset && 180 === winterOffset) { localTimeZoneString = 'Russian Standard Time'; }\n            else if (240 === summerOffset && 240 === winterOffset) { localTimeZoneString = 'Arabian Standard Time'; }\n            else if (270 === summerOffset && 210 === winterOffset) { localTimeZoneString = 'Iran Standard Time'; }\n            else if (270 === summerOffset && 270 === winterOffset) { localTimeZoneString = 'Afghanistan Standard Time'; }\n            else if (300 === summerOffset && 240 === winterOffset) { localTimeZoneString = 'Pakistan Standard Time'; }\n            else if (300 === summerOffset && 300 === winterOffset) { localTimeZoneString = 'West Asia Standard Time'; }\n            else if (330 === summerOffset && 330 === winterOffset) { localTimeZoneString = 'India Standard Time'; }\n            else if (345 === summerOffset && 345 === winterOffset) { localTimeZoneString = 'Nepal Standard Time'; }\n            else if (360 === summerOffset && 300 === winterOffset) { localTimeZoneString = 'N. Central Asia Standard Time'; }\n            else if (360 === summerOffset && 360 === winterOffset) { localTimeZoneString = 'Central Asia Standard Time'; }\n            else if (390 === summerOffset && 390 === winterOffset) { localTimeZoneString = 'Myanmar Standard Time'; }\n            else if (420 === summerOffset && 360 === winterOffset) { localTimeZoneString = 'North Asia Standard Time'; }\n            else if (420 === summerOffset && 420 === winterOffset) { localTimeZoneString = 'SE Asia Standard Time'; }\n            else if (480 === summerOffset && 420 === winterOffset) { localTimeZoneString = 'North Asia East Standard Time'; }\n            else if (480 === summerOffset && 480 === winterOffset) { localTimeZoneString = 'China Standard Time'; }\n            else if (540 === summerOffset && 480 === winterOffset) { localTimeZoneString = 'Yakutsk Standard Time'; }\n            else if (540 === summerOffset && 540 === winterOffset) { localTimeZoneString = 'Tokyo Standard Time'; }\n            else if (570 === summerOffset && 570 === winterOffset) { localTimeZoneString = 'Cen. Australia Standard Time'; }\n            else if (600 === summerOffset && 600 === winterOffset) { localTimeZoneString = 'E. Australia Standard Time'; }\n            else if (600 === summerOffset && 660 === winterOffset) { localTimeZoneString = 'AUS Eastern Standard Time'; }\n            else if (660 === summerOffset && 600 === winterOffset) { localTimeZoneString = 'Tasmania Standard Time'; }\n            else if (660 === summerOffset && 660 === winterOffset) { localTimeZoneString = 'West Pacific Standard Time'; }\n            else if (690 === summerOffset && 690 === winterOffset) { localTimeZoneString = 'Central Pacific Standard Time'; }\n            else if (720 === summerOffset && 660 === winterOffset) { localTimeZoneString = 'Magadan Standard Time'; }\n            else if (720 === summerOffset && 720 === winterOffset) { localTimeZoneString = 'Fiji Standard Time'; }\n            else if (720 === summerOffset && 780 === winterOffset) { localTimeZoneString = 'New Zealand Standard Time'; }\n            else if (780 === summerOffset && 780 === winterOffset) { localTimeZoneString = 'Tonga Standard Time'; }\n            else { localTimeZoneString = 'UTC'; }\n            return localTimeZoneString;\n        }\n    }\n\n    export class VersionUtility {\n        /**\n         * Compares 2 version strings.\n         * @param versionA The first version string.\n         * @param versionB The second version string.\n         * @returns A result for the comparison.\n         */\n        static compareVersions(versionA: string, versionB: string): number {\n            let a = versionA.split('.').map(parseFloat);\n            let b = versionB.split('.').map(parseFloat);\n\n            let versionParts = Math.max(a.length, b.length);\n\n            for (let i = 0; i < versionParts; i++) {\n                let partA = a[i] || 0;\n                let partB = b[i] || 0;\n\n                if (partA > partB)\n                    return 1;\n\n                if (partA < partB)\n                    return -1;\n            }\n\n            return 0;\n        }\n    }\n\n    export module PerformanceUtil {\n        export class PerfMarker {\n            private _name: string;\n            private _start: string;\n\n            constructor(name: string) {\n                this._name = name;\n                this._start = PerfMarker.begin(name);\n            }\n\n            private static begin(name: string) {\n                if (window.performance === undefined || performance.mark === undefined) return;\n                if (console.time) {\n                    console.time(name);\n                }\n                name = 'Begin ' + name;\n                performance.mark(name);\n                return name;\n            }\n\n            public end() {\n                if (window.performance === undefined || performance.mark === undefined || performance.measure === undefined) return;\n                let name = this._name;\n                let end = 'End ' + name;\n                performance.mark(end);\n                performance.measure(name, this._start, end);\n                if (console.timeEnd) {\n                    console.timeEnd(name);\n                }\n            }\n        }\n\n        export function create(name: string): PerfMarker {\n            return new PerfMarker(name);\n        }\n    }\n\n    export module DeferUtility {\n        /**\n         * Wraps a callback and returns a new function.\n         * The function can be called many times but the callback\n         * will only be executed once on the next frame.\n         * Use this to throttle big UI updates and access to DOM.\n         */\n        export function deferUntilNextFrame(callback: Function): Function {\n            let isWaiting, args, context;\n\n            if (!window.requestAnimationFrame) {\n                window.requestAnimationFrame = (func) => setTimeout(func, 1000 / 50);\n            }\n\n            return function() {\n                if (!isWaiting) {\n                    isWaiting = true;\n                    args = arguments;\n                    context = this;\n                    window.requestAnimationFrame(() => {\n                        isWaiting = false;\n                        callback.apply(context, args);\n                    });\n                }\n            };\n        }\n    }\n}","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule jsCommon {\n    export class TraceItem {\n        public type: TraceType;\n        public sessionId: string;\n        public requestId: string;\n        public text: string;\n        public timeStamp: Date;\n\n        /** \n         * Note: DO NOT USE for backward compability only.\n         */\n        public _activityId: string;\n\n        private static traceTypeStrings: string[] = [\n            'INFORMATION',\n            'VERBOSE',\n            'WARNING',\n            'ERROR',\n            'EXPECTEDERROR',\n            'UNEXPECTEDERROR',\n            'FATAL',\n        ];\n\n        constructor(text: string, type: TraceType, sessionId: string, requestId?: string) {\n            this.text = text;\n            this.type = type;\n            this.sessionId = sessionId;\n            this.requestId = requestId;\n            this.timeStamp = new Date();\n        }\n\n        public toString(): string {\n            let resultString: string = '';\n\n            resultString += (StringExtensions.format(\n                '{0} ({1}): {2}',\n                TraceItem.traceTypeStrings[this.type],\n                this.timeStamp.toUTCString(),\n                this.text));\n\n            if (this.requestId)\n                resultString += ('\\n(Request id: ' + this.requestId + ')');\n\n            return resultString;\n        }\n    }\n} ","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule jsCommon {\n\n    export module UrlUtils {\n        const urlRegex = /http[s]?:\\/\\/(\\S)+/gi;\n        const imageUrlRegex = /http[s]?:\\/\\/(\\S)+(png|jpg|jpeg|gif|svg)/gi;\n\n        export function isValidUrl(value: string): boolean {\n            if (StringExtensions.isNullOrEmpty(value))\n                return false;\n\n            let match = RegExpExtensions.run(urlRegex, value);\n            if (!!match && match.index === 0)\n                return true;\n\n            return false;\n        }\n\n        /* Tests whether a URL is valid.\n         * @param url The url to be tested.\n         * @returns Whether the provided url is valid.\n         **/\n        export function isValidImageUrl(url: string): boolean {\n            if (_.isEmpty(url))\n                return false;\n\n            let match = RegExpExtensions.run(imageUrlRegex, url);\n            if (!!match && match.index === 0)\n                return true;\n\n            return false;\n        }\n\n        export function findAllValidUrls(text: string): TextMatch[] {\n            if (StringExtensions.isNullOrEmpty(text))\n                return [];\n\n            // Find all urls in the text.\n            // TODO: This could potentially be expensive, maybe include a cap here for text with many urls?\n            let urlRanges: TextMatch[] = [];\n            let matches: RegExpExecArray;\n            let start = 0;\n            while ((matches = RegExpExtensions.run(urlRegex, text, start)) !== null) {\n                let url = matches[0];\n                let end = matches.index + url.length;\n                urlRanges.push({\n                    start: matches.index,\n                    end: end,\n                    text: url,\n                });\n                start = end;\n            }\n\n            return urlRanges;\n        }\n    }\n}","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule jsCommon {\n    // NOTE: this file includes standalone utilities that should have no dependencies on external libraries, including jQuery.\n\n    /**\n     * Interface to help define objects indexed by number to a particular type.\n     */\n    export interface INumberDictionary<T> {\n        [key: number]: T;\n    }\n\n    /**\n     * Interface to help define objects indexed by name to a particular type.\n     */\n    export interface IStringDictionary<T> {\n        [key: string]: T;\n    }\n\n    /**\n     * Extensions for Enumerations.\n     */\n    export module EnumExtensions {\n        /**\n         * Gets a value indicating whether the value has the bit flags set.\n         */\n        export function hasFlag(value: number, flag: number): boolean {\n            debug.assert(!!flag, 'flag must be specified and nonzero.');\n\n            return (value & flag) === flag;\n        }\n\n        /**\n         * Sets a value of a flag without modifying any other flags.\n         */        \n        export function setFlag(value: number, flag: number): number {\n            debug.assert(!!flag, \"flag must be specified and nonzero.\");\n            return value |= flag;\n        }\n\n        /**\n         * Resets a value of a flag without modifying any other flags.\n         */                \n        export function resetFlag(value: number, flag: number): number {\n            debug.assert(!!flag, \"flag must be specified and nonzero.\");\n            return value &= ~flag;\n        }\n\n        /**\n         * According to the TypeScript Handbook, this is safe to do.\n         */\n        export function toString(enumType: any, value: number): string {\n            return enumType[value];\n        }\n    }\n\n    /**\n     * Extensions to String class.\n     */\n    export module StringExtensions {\n        /**\n         * Checks if a string ends with a sub-string.\n         */\n        export function endsWith(str: string, suffix: string): boolean {\n            debug.assertValue(str, 'str');\n            debug.assertValue(suffix, 'suffix');\n\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\n        }\n    }\n\n    export module LogicExtensions {\n        export function XOR(a: boolean, b: boolean): boolean {\n            return (a || b) && !(a && b);\n        }\n    }\n\n    export module JsonComparer {\n        /**\n         * Performs JSON-style comparison of two objects.\n         */\n        export function equals<T>(x: T, y: T): boolean {\n            if (x === y)\n                return true;\n\n            return JSON.stringify(x) === JSON.stringify(y);\n        }\n    }\n\n    /**\n     * Values are in terms of 'pt'\n     * Convert to pixels using PixelConverter.fromPoint\n     */\n    export module TextSizeDefaults {\n        /**\n         * Stored in terms of 'pt'\n         * Convert to pixels using PixelConverter.fromPoint\n         */\n        export const TextSizeMin: number = 8;\n\n        /**\n         * Stored in terms of 'pt'\n         * Convert to pixels using PixelConverter.fromPoint\n         */\n        export const TextSizeMax: number = 40;\n\n        const TextSizeRange: number = TextSizeMax - TextSizeMin;\n\n        /**\n         * Returns the percentage of this value relative to the TextSizeMax\n         * @param textSize - should be given in terms of 'pt'\n         */\n        export function getScale(textSize: number) {\n            return (textSize - TextSizeMin) / TextSizeRange;\n        }\n\n    }\n\n    export module PixelConverter {\n        const PxPtRatio: number = 4 / 3;\n        const PixelString: string = 'px';\n\n        /**\n         * Appends 'px' to the end of number value for use as pixel string in styles\n         */\n        export function toString(px: number): string {\n            return px + PixelString;\n        }\n\n        /**\n         * Converts point value (pt) to pixels\n         * Returns a string for font-size property\n         * e.g. fromPoint(8) => '24px'\n         */\n        export function fromPoint(pt: number): string {\n            return toString(fromPointToPixel(pt));\n        }\n\n       /**\n        * Converts point value (pt) to pixels\n        * Returns a number for font-size property\n        * e.g. fromPoint(8) => 24px\n        */\n        export function fromPointToPixel(pt: number): number {\n            return (PxPtRatio * pt);\n        }\n\n        /**\n         * Converts pixel value (px) to pt\n         * e.g. toPoint(24) => 8\n         */\n        export function toPoint(px: number): number {\n            return px / PxPtRatio;\n        }\n    }\n\n    export module RegExpExtensions {\n        /**\n         * Runs exec on regex starting from 0 index\n         * This is the expected behavior but RegExp actually remember\n         * the last index they stopped at (found match at) and will\n         * return unexpected results when run in sequence.\n         * @param regex - regular expression object\n         * @param value - string to search wiht regex\n         * @param start - index within value to start regex\n         */\n        export function run(regex: RegExp, value: string, start?: number): RegExpExecArray {\n            debug.assertValue(regex, 'regex');\n\n            regex.lastIndex = start || 0;\n            return regex.exec(value);\n        }\n    }\n}","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule jsCommon {\n    export interface ITraceListener {\n        logTrace(trace: TraceItem): void;\n    }\n\n    export class ConsoleTracer implements ITraceListener {\n        public logTrace(trace: TraceItem): void {\n            if (DEBUG) {\n                switch (trace.type) {\n                    case TraceType.Information:\n                        console.info(trace.toString());\n                        break;\n                    case TraceType.UnexpectedError:\n                    case TraceType.Error:\n                    case TraceType.Fatal:\n                        console.error(trace.toString());\n                        break;\n                    case TraceType.ExpectedError:\n                    case TraceType.Warning:\n                        console.warn(trace.toString());\n                        break;\n                    case TraceType.Verbose:\n                        console.log(trace.toString());\n                        break;\n                    default:\n                        console.log(trace.toString());\n                        break;\n                }\n            }\n        }\n    }\n\n    export module Trace {\n        const traceMaxCount = 1000;\n        let traces = new Array<TraceItem>(traceMaxCount);\n        let lastTraceIndex: number = -1;\n        let defaultListener = new ConsoleTracer();\n        let listeners = new Array<ITraceListener>(defaultListener);\n\n        /**\n         * Trace a warning. Please ensure that no PII is being logged.\n         */\n        export function warning(text: string, requestId?: string): void {\n            debug.assertValue(text, 'text');\n            logTraceInternal(new TraceItem(text, TraceType.Warning, requestId));\n        }\n\n        /** \n         * Trace an error. Please ensure that no PII is being logged.\n         */\n        export function error(text: string, includeStackTrace?: boolean, requestId?: string): void {\n            debug.assertValue(text, 'text');\n            if (includeStackTrace)\n                text = StringExtensions.format(\"{0}.\\nStack:\\n{1}\", text, getStackTrace());\n            logTraceInternal(new TraceItem(text, TraceType.Error, requestId));\n        }\n\n        /** \n         * Trace an information. Please ensure that no PII is being logged.\n         */\n        export function verbose(text: string, requestId?: string): void {\n            debug.assertValue(text, 'text');\n            logTraceInternal(new TraceItem(text, TraceType.Verbose, requestId));\n        }\n\n        export function addListener(listener: ITraceListener): void {\n            debug.assertValue(listener, 'listener');\n            listeners.push(listener);\n        }\n\n        export function removeListener(listener: ITraceListener): void {\n            debug.assertValue(listener, 'listener');\n\n            let index = listeners.indexOf(listener);\n            if (index >= 0)\n                listeners.splice(index, 1);\n        }\n\n        export function resetListeners(): void {\n            listeners = new Array<ITraceListener>(defaultListener);\n        }\n\n        export function reset(): void {\n            lastTraceIndex = -1;\n        }\n\n        export function getTraces(): Array<TraceItem> {\n            if (lastTraceIndex < 0)\n                return;\n\n            let result = new Array<TraceItem>(lastTraceIndex+1);\n            for (let i = 0; i <= lastTraceIndex; i++)\n                result[i] = traces[i];\n\n            return result;\n        }\n\n        /** \n         * Note: Used for unit-test only. \n         */\n        export function disableDefaultListener(): void {\n            removeListener(defaultListener);\n        }\n\n        export function enableDefaultListener(): void {\n            addListener(defaultListener);\n        }\n\n        function logTraceInternal(trace: TraceItem): void {\n            if ((lastTraceIndex + 1) >= traceMaxCount)\n                reset();\n\n            traces[++lastTraceIndex] = trace;\n\n            for (let i = 0, len = listeners.length; i < len; i++)\n                listeners[i].logTrace(trace);\n        }\n    }\n} ","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule jsCommon {\n    /** \n     * The types of possible traces within the system, this aligns to the traces available in Cloud Platform.\n     */\n    export enum TraceType {\n        Information = 0,\n        Verbose = 1,\n        Warning = 2,\n        Error = 3,\n        ExpectedError = 4,\n        UnexpectedError = 5,\n        Fatal = 6,\n    }\n}","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule jsCommon {\n    /**\n     * JavaScript files.\n     */    \n    const MSMapcontrol = 'https://ecn.dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=7.0&s=1&onscriptload=globalMapControlLoaded';\n\n    /**\n     * Map loading logic.\n     */\n    let MSMapcontrolLoaded = false;\n    let WaitForMSMapLoad: JQueryDeferred<void> = null;\n\n    const PowerViewPackage: IDependency = {\n        javaScriptFiles: [\n            powerbi.build + '/externals/pv/webclient.js'\n        ],\n        cssFiles: [\n            powerbi.build +'/externals/pv/Styles/_all.css'\n        ],\n\t\tjavaScriptFilesWithCallback: [\n            { javascriptFile: MSMapcontrol, onLoadCallback: waitForMapControlLoaded }\n        ]\n    };\n\n    export function ensurePowerView(action: () => void = _.noop): void {\n        requires(PowerViewPackage, action);\n    }\n\n    const MapPackage: IDependency = {\n\t\tjavaScriptFilesWithCallback: [\n            { javascriptFile: MSMapcontrol, onLoadCallback: waitForMapControlLoaded }\n        ]\n    };\n\n    export function ensureMap(locale: string, action: () => void): void {\n        let mapPackageWithLocale = powerbi.Prototype.inherit(MapPackage);\n        if (!_.isEmpty(locale)) {\n            mapPackageWithLocale.javaScriptFilesWithCallback[0].javascriptFile = MSMapcontrol.concat('&mkt=' + locale);\n        }\n        requires(mapPackageWithLocale, action);\n    }\n\n\texport function mapControlLoaded(): void {\n\t\tMSMapcontrolLoaded = true;\n\t\tif (WaitForMSMapLoad) {\n\t\t\tWaitForMSMapLoad.resolve();\n            WaitForMSMapLoad = undefined;\n\t\t}\n\t}\n\n\texport function waitForMapControlLoaded(): JQueryPromise<void> {\n\t\tlet task: JQueryDeferred<void>;\n\t\tif (!MSMapcontrolLoaded) {\n\t\t\ttask = WaitForMSMapLoad = $.Deferred<void>();\n\t\t} else {\n\t\t\ttask = $.Deferred<void>();\n\t\t\ttask.resolve();\n\t\t}\n\n\t\treturn task.promise();\n\t}\n}\n\n/* tslint:disable:no-unused-variable */\nlet globalMapControlLoaded = function() {\n\t// Map requires a function in the global namespace to callback once loaded\n\tjsCommon.mapControlLoaded();\n};\n/* tslint:enable:no-unused-variable */","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved. \n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *   \n *  The above copyright notice and this permission notice shall be included in \n *  all copies or substantial portions of the Software.\n *   \n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\nmodule InJs\n{\n    /** \n     * The types of possible traces within the system, this aligns to the traces available in Cloud Platform.\n     */\n    export enum TraceType {\n        information = 0,\n        verbose = 1,\n        warning = 2,\n        error = 3,\n        expectedError = 4,\n        unexpectedError = 5,\n        fatal = 6,\n    }\n}"],"sourceRoot":"/source/"}